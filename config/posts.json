{
  "posts": [
    {
      "content": "```js\r\nfunction* search(node){ \r\n    if(!node){\r\n         return \r\n         };  \r\n         yield node; \r\n         yield* search(node.firstChild); \r\n         yield* search(node.nextSibling); \r\n}\r\nfor (let node of search(document)){ \r\n    if(node.localName === 'title')\r\n    { console.log(node.textContent());\r\n    break; \r\n    } \r\n}\r\n```",
      "data": {
        "title": "yield",
        "date": "2021-07-27 22:06:11",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "yield"
    },
    {
      "content": "```js\r\n//value就是要搜索的值\r\nlet str = ['',...value,''].join('.*'); \r\nlet reg = new RegExp(str);\r\nlet newData = data.filter(item => reg.test(item.title));\r\n```",
      "data": {
        "title": "正则 模糊搜索",
        "date": "2021-07-11 00:38:35",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "zheng-ze-mo-hu-sou-suo"
    },
    {
      "content": "```js\n/**\n * 业务常量的使用方式扩展\n * @param {Array} source \n    [\n      { value: 1,label: '空间站',name: 'SPACE' },\n      { value: 2, label: '实践任务', name: 'PRACTICE' },\n      { value: 3, label: '其他系统', name: 'OTHERS' }\n    ]\n  @returns {Function} fn\n    fn() ===> source\n    fn(value) ===> label\n    fn(name) ===> value\n */\nexport default function createEnum(source) {\n  const sourceMap = new Map()\n  source.map(item => {\n    sourceMap.set(item.name, item.value)\n    sourceMap.set(item.value, item.label)\n  })\n\n  return function(key) {\n    if (key) {\n      return sourceMap.get(key)\n    } else {\n      return source\n    }\n  }\n}\n```\n## 使用\n```js\nexport const fieldType = createEnum([\n  { value: 1, label: '文本', name: 'TEXT' },\n  { value: 2, label: '数字', name: 'NUMBER' },\n  { value: 3, label: '视频', name: 'VIDEO' }\n])\n\nfieldType()  // list\n\nfieldType(1)  // '文本'\nfieldType(1, 2, 3)  // '文本、数组、视频'  代码未实现\n\nfieldType('TEXT')  // 1\n\n```",
      "data": {
        "title": "createEnum",
        "date": "2021-07-02 11:46:15",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "createenum"
    },
    {
      "content": "```js\nimport Vuex, { createLogger } from 'vuex'\nconst debug = process.env.NODE_ENV !== 'production'\nexport default new Vuex.Store({\n    // ...\n    plugins: debug ? [createLogger()] : []\n})\n```",
      "data": {
        "title": "vuex createLogger",
        "date": "2021-06-30 14:02:26",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vuex-createlogger"
    },
    {
      "content": "```js\n// hoc.js\nexport default function EnhanceWrapper (WrappedComponent) {\n  return {\n    mounted () {\n      console.log('I have already mounted')\n    },\n    props: WrappedComponent.props,\n    render (h) {\n      const slots = Object.keys(this.$slots)\n        .reduce((arr, key) => arr.concat(this.$slots[key]), [])\n        .map(vnode => {\n          vnode.context = this._self\n          return vnode\n        })\n\n      return h(WrappedComponent, {\n        on: this.$listeners,\n        props: this.$props,\n        // 透传 scopedSlots\n        scopedSlots: this.$scopedSlots,\n        attrs: this.$attrs\n      }, slots)\n    }\n  }\n}\n\n// 使用方式\nimport hoc from 'hoc.js'\nimport ElInput from 'Element-ui'\nconst HInput = hoc(ElInput)\n components: {\n   HInput\n }\n```",
      "data": {
        "title": "Vue2 高阶组件 HOC",
        "date": "2021-06-30 11:21:47",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue2-gao-jie-zu-jian-hoc"
    },
    {
      "content": "```js\nvar Vue = $0.__vue__.$root.constructor\nwhile(Vue.super) {Vue = Vue.super}\nVue.config.devtools = true\nwindow.__VUE_DEVTOOLS_GLOBAL_HOOK__.Vue = Vue\n```\n## $vm\n```\n重新开启console\n```\n## 线上线下 查看 vuex数据\n```js\n$0.__vue__.$store._vm._data\n```\n## react $r\n```\n// $0.__react\n$r.props.store.getState()\n```",
      "data": {
        "title": "Vue 开启线上调试 ",
        "date": "2021-06-30 11:20:56",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-kai-qi-xian-shang-diao-shi"
    },
    {
      "content": "https://github.com/toddbluhm/env-cmd\n```json\n\"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"start:staging\": \"env-cmd -f .env.staging react-scripts start\",\n    \"start:prod\": \"env-cmd -f .env.production react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"build:staging\": \"env-cmd -f .env.staging react-scripts build\",\n    \"build:prod\": \"env-cmd -f .env.production react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n}\n```\nhttps://zhuanlan.zhihu.com/p/362418612 ",
      "data": {
        "title": "React .env ",
        "date": "2021-06-30 09:34:29",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "react-env"
    },
    {
      "content": "```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>公众号：前端学不动</title>\n  <style>\n    * {\n      padding: 0;\n      margin: 0;\n    }\n    html, body { height: 100% }\n    body {\n      background: black;\n      display: flex;\n      align-items: center;\n      justify-content: center\n    }\n    .ul {\n      position: relative;\n      width: 100px;\n      height: 50px;\n      padding: 10px;\n      list-style: none;\n      overflow: hidden\n    }\n    .ul:first-of-type {\n      padding-bottom: 0\n    }\n    .ul:last-of-type {\n      padding-top: 0;\n      /* margin-top: -2px; */\n      /* animation: container-move .1s 1.2s forwards */\n    }\n\n    .harmony {\n      position: absolute;\n      top: 10px;\n      left: 10px;\n      width: 70px;\n      height: 70px;\n      border: 15px solid white;\n      border-radius: 50%;\n      transform: translateY(50%);\n      box-shadow: 0 0 6px white, inset 0 0 6px white;\n      animation: move 1.2s forwards\n    }\n    .ul:last-of-type > .harmony {\n      top: auto;\n      bottom: 10px;\n      transform: translateY(-50%);\n      filter: url(#blur)\n    }\n\n    svg {\n      width: 0;\n      height: 0\n    }\n\n    @keyframes move {\n      to { transform: none }\n    }\n\n    /* @keyframes container-move {\n      to { margin-top: 0 }\n    } */\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <ul class=\"ul\">\n      <li class=\"harmony\"></li>\n    </ul>\n    <ul class=\"ul\">\n      <li class=\"harmony\"></li>\n    </ul>\n  </div>\n\n  <svg>\n    <filter id=\"blur\">\n      <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"0 6\"/>\n    </filter>\n  </svg>\n\n  <script>\n    const filter = document.querySelector('feGaussianBlur')\n    \n    const clearFilter = () => {\n      const value = parseFloat(filter.getAttribute('stdDeviation').split(' ')[1]) - 0.06\n      \n      if (value > 0) {\n        filter.setAttribute('stdDeviation', `0 ${value}`)\n        requestAnimationFrame(clearFilter)\n      } else {\n        return\n      }\n    }\n\n    setTimeout(clearFilter, 1200)\n  </script>\n</body>\n</html>\n\n```",
      "data": {
        "title": "HarmonyOS gif",
        "date": "2021-06-29 16:53:46",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "harmonyos-gif"
    },
    {
      "content": "## shims-axios.d.ts\n```js\nimport { AxiosInstance, AxiosRequestConfig, AxiosPromise } from \"axios\"\n/**\n * 自定义扩展axios模块\n * @author 何小玍。\n */\ndeclare module \"axios\" {\n  export interface AxiosRequestConfig {\n    /**\n     * @description 设置为true，则会在请求过程中显示loading动画，直到请求结束才消失\n     */\n    loading?: boolean\n    isDialog?: boolean\n  }\n  export interface AxiosInstance {\n    <T = any>(config: AxiosRequestConfig): Promise<T>\n    request<T = any>(config: AxiosRequestConfig): Promise<T>\n    get<T = any>(url: string, config?: AxiosRequestConfig): Promise<T>\n    delete<T = any>(url: string, config?: AxiosRequestConfig): Promise<T>\n    head<T = any>(url: string, config?: AxiosRequestConfig): Promise<T>\n    post<T = any>(\n      url: string,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): Promise<T>\n    put<T = any>(\n      url: string,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): Promise<T>\n    patch<T = any>(\n      url: string,\n      data?: any,\n      config?: AxiosRequestConfig\n    ): Promise<T>\n  }\n}\n```\n## request.ts\n```js\n/**\n * @description [ axios 请求封装]\n */\n// import store from \"@/store\";\nimport axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\n// import { Message, Modal } from 'view-design' // UI组件库\nimport { Dialog, Toast } from \"vant\";\nimport router from \"@/router\";\n// 根据环境不同引入不同api地址\nimport { config } from \"@/config\";\nconst service = axios.create({\n  baseURL: config.baseApi + \"/api\", // url = base url + request url\n  timeout: 5000,\n  withCredentials: false // send cookies when cross-domain requests\n  // headers: {\n  // \t// clear cors\n  // \t'Cache-Control': 'no-cache',\n  // \tPragma: 'no-cache'\n  // }\n})\n// Request interceptors\nservice.interceptors.request.use(\n  (config: AxiosRequestConfig) => {\n    // 加载动画\n    if (config.loading) {\n      Toast.loading({\n        message: \"加载中...\",\n        forbidClick: true\n      });\n    }\n    // 在此处添加请求头等，如添加 token\n    // if (store.state.token) {\n    // config.headers['Authorization'] = `Bearer ${store.state.token}`\n    // }\n    return config;\n  },\n  (error: any) => {\n    Promise.reject(error);\n  }\n)\n// Response interceptors\nservice.interceptors.response.use(\n  async (response: AxiosResponse) => {\n    // await new Promise(resovle => setTimeout(resovle, 3000))\n    Toast.clear();\n    const res = response.data;\n    if (res.code !== 0) {\n      // token 过期\n      if (res.code === 401)\n        // 警告提示窗\n        return;\n      if (res.code == 403) {\n        Dialog.alert({\n          title: \"警告\",\n          message: res.msg\n        }).then(() => {})\n        return\n      }\n      // 若后台返回错误值，此处返回对应错误对象，下面 error 就会接收\n      return Promise.reject(new Error(res.msg || \"Error\"))\n    }\n    // 注意返回值\n    else return response.data\n  },\n  (error: any) => {\n    Toast.clear();\n    if (error && error.response) {\n      switch (error.response.status) {\n        case 400:\n          error.message = \"请求错误(400)\"\n          break\n        case 401:\n          error.message = \"未授权,请登录(401)\"\n          break\n        case 403:\n          error.message = \"拒绝访问(403)\"\n          break\n        case 404:\n          error.message = `请求地址出错: ${error.response.config.url}`\n          break\n        case 405:\n          error.message = \"请求方法未允许(405)\"\n          break\n        case 408:\n          error.message = \"请求超时(408)\"\n          break\n        case 500:\n          error.message = \"服务器内部错误(500)\"\n          break\n        case 501:\n          error.message = \"服务未实现(501)\"\n          break\n        case 502:\n          error.message = \"网络错误(502)\"\n          break\n        case 503:\n          error.message = \"服务不可用(503)\"\n          break\n        case 504:\n          error.message = \"网络超时(504)\"\n          break\n        case 505:\n          error.message = \"HTTP版本不受支持(505)\"\n          break\n        default:\n          error.message = `连接错误: ${error.message}`\n      }\n    } else {\n      if (error.message == \"Network Error\") error.message == \"网络异常，请检查后重试！\"\n      error.message = \"连接到服务器失败，请联系管理员\"\n    }\n    Toast(error.message)\n    // store.auth.clearAuth()\n    // store.dispatch(\"clearAuth\")\n    return Promise.reject(error)\n  }\n)\nexport default service\n\n```\n## https://juejin.cn/post/6978609399682039839",
      "data": {
        "title": "axios+ts",
        "date": "2021-06-29 15:04:21",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "axiosts"
    },
    {
      "content": "1. 整理更合适的接口就是一个很好的意义，如果你的前端比较重，那前端就必须保持干净，别让不合理的接口污染代码\n2. 多接口调用合一的情况，BFF 与后端服务的通信速度远快于浏览器走网络\n3. SSR\n4. 公网是很慢的，像是把数组变成一个 length，能很大节省传输量\n---\n1.后端服务要求稳定，高性能，作为核心业务，常用语言有 java，bff 作为胶水层，需要灵活，开发速度快，能够快速响应业务变化，常用语言有 node，php 2.bff 作为聚合接口数据层，可以清洗后端服务提供的数据，针对性的提供更合理的数据结构给前端，减小用户流量消耗，加快网络速度 3.减轻前端对数据的繁杂处理，让前端更纯粹的渲染页面\n---\nhttps://www.v2ex.com/t/784162#reply21",
      "data": {
        "title": "bff",
        "date": "2021-06-23 18:01:17",
        "tags": [
          "BFF"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "bff"
    },
    {
      "content": "```js\n      console.log('🚀  this', this)\n      Object.assign(this.$data, this.$options.data.call(this))\n      console.log('🚀  this', this)\n```",
      "data": {
        "title": "$options.data 重置data",
        "date": "2021-06-22 09:44:42",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "dollaroptionsdata-chong-zhi-data"
    },
    {
      "content": "```js\n<template>\n  <div class=\"tableBox\">\n    <div class=\"buttons\">\n      <a-button @click=\"onFilter\">取消过滤</a-button>\n      <a-button\n        v-for=\"item in filterArr\"\n        :key=\"item.value\"\n        @click=\"onFilter(item)\"\n        >{{ item.value }}</a-button\n      >\n    </div>\n    <a-table\n      :rowKey=\"(record, idx) => idx\"\n      :columns=\"columns\"\n      :data-source=\"tableData\"\n      :pagination=\"false\"\n      bordered\n    >\n    </a-table>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      columns: [\n        {\n          title: '',\n          dataIndex: 'title',\n          width: 120,\n          customRender: (text, row) => {\n            return {\n              children: `${text}`,\n              attrs: {\n                rowSpan: row.titleRowSpan\n              }\n            };\n          }\n        },\n        {\n          title: '部门',\n          dataIndex: 'department',\n          width: 120,\n          customRender: (text, row, index) => {\n            return {\n              children: `${text}`,\n              attrs: {\n                rowSpan: row.departmentRowSpan\n              }\n            };\n          }\n        },\n        {\n          title: '代码类型',\n          dataIndex: 'codeType',\n          width: 120\n        },\n        {\n          title: '总数',\n          dataIndex: 'totalCount',\n          width: 120\n        },\n        {\n          title: '修复',\n          dataIndex: 'fixCount',\n          width: 120\n        },\n        {\n          title: '未修复',\n          dataIndex: 'notFixedCount',\n          width: 120\n        },\n        {\n          title: '今日新增',\n          dataIndex: 'todayAdd',\n          width: 120\n        },\n        {\n          title: 'Bug类型',\n          dataIndex: 'bugType',\n          width: 120,\n          customRender: (text, row, index) => {\n            return {\n              children: `${text}`,\n              attrs: {\n                rowSpan: row.bugTypeRowSpan\n              }\n            };\n          }\n        }\n      ],\n      tableData: [\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: 'ui展示问题',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: 'ui展示问题',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 0,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          bugType: 'ui展示问题',\n          codeType: 'ui展示问题总计',\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: '功能性bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: '功能性bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 0,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          bugType: '功能性bug',\n          codeType: '功能性bug总计',\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: '前端bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: '前端bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 0,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 3,\n          bugType: '前端bug',\n          codeType: '前端bug总计',\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: '后端bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: '后端bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 2,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 0,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 5,\n          bugType: '后端bug',\n          codeType: '后端bug总计',\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: '非bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: '非bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发一部'\n        },\n\n        {\n          fixCount: 1,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 5,\n          bugType: '非bug',\n          codeType: '非bug总计',\n          title: 'bug总览',\n          department: '开发一部'\n        },\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: 'ui展示问题',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: 'ui展示问题',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 0,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          bugType: 'ui展示问题',\n          codeType: 'ui展示问题总计',\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: '功能性bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: '功能性bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 0,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          bugType: '功能性bug',\n          codeType: '功能性bug总计',\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: '前端bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: '前端bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 0,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 3,\n          bugType: '前端bug',\n          codeType: '前端bug总计',\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: '后端bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: '后端bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 2,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 0,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 5,\n          bugType: '后端bug',\n          codeType: '后端bug总计',\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 0,\n          id: 0,\n          codeType: '新代码',\n          bugType: '非bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n        {\n          fixCount: 0,\n          id: 1,\n          codeType: '老代码',\n          bugType: '非bug',\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 0,\n          title: 'bug总览',\n          department: '开发二部'\n        },\n\n        {\n          fixCount: 1,\n          notFixedCount: 0,\n          todayAdd: 0,\n          totalCount: 5,\n          bugType: '非bug',\n          codeType: '非bug总计',\n          title: 'bug总览',\n          department: '开发二部'\n        }\n      ]\n    };\n  },\n  methods: {\n    //  合并单元格\n    combineRow(key) {\n      const tableData = this.tableData;\n      for (var i = 0; i < tableData.length; i++) {\n        const item = tableData[i];\n        let count = 1;\n        for (let j = i + 1; j < tableData.length; j++) {\n          // 如果是同一个值，往后递增\n          if (item[key] === tableData[j][key]) {\n            count++;\n            // 往后相同的值都设为空单元格\n            tableData[j][`${key}RowSpan`] = 0;\n            // 只有同值第一个才设置合并的单元格数\n            item[`${key}RowSpan`] = count;\n            // 所有都是为同一个值的情况\n            // 如果到了尾部，\n            if (j === tableData.length - 1) {\n              return;\n            }\n          } else {\n            // 指针跳转到下一个，从下一排开始\n            i = j - 1;\n            count = 1;\n            tableData[j][`${key}RowSpan`] = 0;\n            break;\n          }\n        }\n        console.log(i);\n      }\n      this.tableData = tableData;\n    },\n    // 过滤组\n    filterGroup(targets) {\n      const res = this.tableData.reduce((obj, cur) => {\n        for (let i of targets) {\n          const item = { key: i, value: cur[i] };\n          if (!obj[item.value]) {\n            obj[item.value] = item;\n          }\n        }\n        return obj;\n      }, {});\n      return Object.values(res);\n    },\n    onFilter(params) {\n      this.tableData = JSON.parse(JSON.stringify(this.originTableData));\n      if (!params) {\n        return;\n      }\n      const { key, value } = params;\n      this.tableData = this.tableData.filter((item) => item[key] === value);\n      this.initCombineRow();\n    },\n    initCombineRow() {\n      this.combineRow('title');\n      this.combineRow('department');\n      this.combineRow('bugType');\n    }\n  },\n  created() {\n    this.initCombineRow();\n    this.originTableData = JSON.parse(JSON.stringify(this.tableData));\n    this.filterArr = this.filterGroup(['department', 'bugType']);\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.tableBox {\n  width: 80vw;\n  margin: 0 auto;\n  .buttons {\n    margin: 10px 0;\n  }\n}\n/deep/.ant-table-bordered .ant-table-thead > tr > th,\n/deep/.ant-table-bordered .ant-table-tbody > tr > td {\n  padding: 2px;\n  text-align: center;\n}\n</style>\n```",
      "data": {
        "title": "表格合并",
        "date": "2021-06-16 17:26:54",
        "tags": [
          "表格合并"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "biao-ge-he-bing"
    },
    {
      "content": "```js\nconst data = [\n  {\n    id: 1,\n    label: '一级 1',\n    children: [{\n      id: 4,\n      label: '二级 1-1',\n      children: [{\n        id: 9,\n        label: '三级 1-1-1'\n      }, {\n        id: 10,\n        label: '三级 1-1-2'\n      }]\n    }]\n  },\n  {\n    id: 2,\n    label: '一级 2',\n    children: [{\n      id: 5,\n      label: '二级 2-1'\n    }, {\n      id: 6,\n      label: '二级 2-2'\n    }]\n  },\n  {\n    id: 3,\n    label: '一级 3',\n    children: [{\n      id: 7,\n      label: '二级 3-1'\n    }, {\n      id: 8,\n      label: '二级 3-2'\n    }]\n  }];\n```\n```js\nfunction findParentNode(arr, id, parent) {\n    for (let item of arr) {\n      if (item.id === id) {\n        return parent || arr;\n      }\n      if (item.children) {\n        let node = findParentNode(item.children, id, item)\n        if(node){\n            return node\n        }\n      }\n    }\n    return null;\n}\nfindParentNode(data,9) // { id:4, label: \"二级 1-1\", children:[] }\n```",
      "data": {
        "title": "树形数据 查找指定节点的父节点",
        "date": "2021-06-09 10:19:23",
        "tags": [
          "tree-data"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "shu-xing-shu-ju-cha-zhao-zhi-ding-jie-dian-de-fu-jie-dian"
    },
    {
      "content": "```js\n<template>\n    <div class=\"ceshi\" @click=\"ceshi()\">\n        <run-line-canvas v-model=\"showIndex\" class=\"canvas-set\" :width=\"102\" :height=\"600\" :option=\"option\"></run-line-canvas>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                option: {\n                    speed: 5,\n                    tailLine: {\n                        length: 0.98,\n                        moveColor: 'red',\n                        shadowBlur: 1,\n                        radius: 5,\n                        tailColor: 'orange'\n                    },\n                    series: [\n                        {\n                            data: [\n                                [4, 540],\n                                [38, 540],\n                                [48, 530],\n                                [48, 30],\n                                [78, 10],\n                                [102, 10],\n                                [600, 100],\n                            ]\n                        }\n                    ]\n                },\n                showIndex: null\n            }\n        },\n        mounted() {\n            this.showIndex = 0;\n            setinterval(function(){this.ceshi()},1000)\n        },\n        methods: {\n            ceshi() {\n                this.showIndex = 0;\n            }\n        }\n    }\n</script>\n<style>\n    body{\n        .ceshi{\n            cursor: pointer;\n            color: rgb(30, 94, 54);\n        }\n    }\n</style>\n```\n```js\n <template>\n    <div>\n        <canvas ref=\"myCanvas\" :width=\"width\" :height=\"height\" class=\"all100\"></canvas>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'RunLineCanvas',\n    model: {\n        prop: 'sendRun',\n        event: 'reback'\n    },\n    props: {\n        // 绘制canvas逻辑宽度\n        width: {\n            type: Number,\n            default: null\n        },\n        // 绘制canvas逻辑高度\n        height: {\n            type: Number,\n            default: null\n        },\n        // 传入的参数配置以及线条数据\n        option: {\n            type: Object,\n            default: null\n        },\n        // 控制点运动\n        sendRun: {\n            type: Number,\n            default: null\n        }\n    },\n    data() {\n        return {\n            // 判断是否重复绘制\n            isReDraw: false,\n            // canvas对象\n            canvas: null,\n            // canvas 2D对象\n            ctx: null,\n            // 线条数据\n            lineData: [],\n            // 基础配置\n            canvasOption: {\n                color: '#3d7ab9',\n                width: 2,\n                speed: 5,\n                // 运动点配置参数\n                tailLine: {\n                    length: 0.95, // 该参数无法单独配置\n                    moveColor: '#ff8d68',\n                    shadowBlur: 2,\n                    radius: 3,\n                    tailColor: '#ff8d68'\n                },\n                // 线条两头的样式\n                lineCap: {\n                    type: 'circle',\n                    size: 5,\n                    show: true\n                }\n            },\n            // 动画list数组\n            runList: [],\n            // 正在动画的线\n            runningLine: 0,\n            // 每一个动画的临时存贮\n            chooseCheckTime: []\n        };\n    },\n    computed: {\n        /**\n         * 计算两个点之间的距离\n         * @returns {function(*, *): number}\n         */\n        getDistance() {\n            return function getDistance(p1, p2) {\n                return Math.sqrt((p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]));\n            };\n        }\n    },\n    mounted() {\n        this.canvasCreate();\n        this.$watch('option', () => {\n            if (this.option.series && this.option.series.length > 0) {\n                this.seriesDataDue();\n                this.drawlineRun();\n            }\n        }, { immediate: true });\n        this.$watch('sendRun', () => {\n            if (this.sendRun !== null) {\n                this.addNewRun(this.sendRun);\n                this.$emit('reback', null);\n            }\n        }, { immediate: true });\n    },\n    beforeDestroy() {\n        this.drawlineRun = () => {};\n    },\n    methods: {\n        /**\n         * 数据初始化，给每一条线赋予参数\n         */\n        seriesDataDue() {\n            this.runList.splice(0);\n            const object = JSON.parse(JSON.stringify(this.option));\n            delete object.series;\n            this.canvasOption = Object.assign(this.canvasOption, object, true);\n            this.option.series.forEach((item, index) => {\n                this.option.series[index] = Object.assign(this.canvasOption, this.option.series[index], true);\n            });\n            this.lineData = this.option.series;\n        },\n        /**\n         * 页面初始化渲染canvas对象\n         */\n        canvasCreate() {\n            this.canvas = this.$refs.myCanvas;\n            this.ctx = this.canvas.getContext('2d');\n        },\n        /**\n         * 通过传入数据进行线条绘制\n         */\n        drawLine() {\n            this.lineData.forEach((line, index) => {\n                this.ctx.beginPath();\n                this.ctx.strokeStyle = line.color;\n                this.ctx.lineWidth = line.width;\n                line.data.forEach((point, index) => {\n                    if (index === 0) {\n                        this.ctx.moveTo(point[0], point[1]);\n                    } else {\n                        this.ctx.lineTo(point[0], point[1]);\n                    }\n                });\n                this.ctx.stroke();\n                this.lineCapCheck(line);\n                if (this.runList.length === 0) {\n                    this.moveLineData(line);\n                }\n            });\n        },\n\n        /**\n         * 线条两头样式处理\n         * @param line\n         */\n        lineCapCheck(line) {\n            const lineCapData = {\n                color: line.color,\n                data: line.data,\n                lineCap: line.lineCap\n            };\n            if (lineCapData.lineCap.show) {\n                this[`LineCap${lineCapData.lineCap.type}`](lineCapData);\n            }\n        },\n\n        /**\n         * 线条两端圆形样式\n         * @constructor\n         */\n        LineCapcircle(lineCapData) {\n            const moveList1 = this.mathMove(lineCapData.data[0], lineCapData.data[1], lineCapData.lineCap.size);\n            const moveList2 = this.mathMove(lineCapData.data[lineCapData.data.length - 1], lineCapData.data[lineCapData.data.length - 2], lineCapData.lineCap.size);\n            // 画线开始圆\n            this.ctx.beginPath();\n            this.ctx.arc(lineCapData.data[0][0] + moveList1[0], lineCapData.data[0][1] + moveList1[1], lineCapData.lineCap.size, 0, Math.PI * 2, true);\n            this.ctx.stroke();\n            this.ctx.fillStyle = lineCapData.color;\n            this.ctx.fill();\n            // 画线结束圆\n            this.ctx.beginPath();\n            this.ctx.arc(lineCapData.data[lineCapData.data.length - 1][0] + moveList2[0], lineCapData.data[lineCapData.data.length - 1][1] + moveList2[1], lineCapData.lineCap.size, 0, Math.PI * 2, true);\n            this.ctx.stroke();\n            this.ctx.fillStyle = lineCapData.color;\n            this.ctx.fill();\n        },\n\n        /**\n         * 计算点位头部位置计算\n         * @param ponit1\n         * @param point2\n         * @param size\n         * @returns {[number, number]}\n         */\n        mathMove(ponit1, point2, size) {\n            const bigSize = Math.pow((Math.pow(point2[0] - ponit1[0], 2) + Math.pow(point2[1] - ponit1[1], 2)), 1 / 2) / size;\n            const movex = (point2[0] - ponit1[0]) / bigSize;\n            const movey = (point2[1] - ponit1[1]) / bigSize;\n            return [movex, movey];\n        },\n\n        /**\n         * 动画数据数组处理\n         * @param data\n         */\n        moveLineData(series) {\n            const pointList = [];\n            for (var i = 0; i < series.data.length; i++) {\n                var start = series.data[i];\n                var end = series.data[i + 1];\n                if (start && end) {\n                    var distance = Math.floor(this.getDistance(start, end));\n                    var vx = (end[0] - start[0]) / distance;\n                    var vy = (end[1] - start[1]) / distance;\n                    for (var j = 0; j < distance; j++) {\n                        pointList.push([start[0] + vx * j, start[1] + vy * j]);\n                    }\n                }\n            }\n            series.data = pointList;\n            this.runList.push(series);\n        },\n\n        /**\n         * 绘制移动点\n         */\n        drawlineRun() {\n            let runNum = 0;\n            this.ctx.fillStyle = `rgba(0,0,0,${this.canvasOption.tailLine.length})`;\n            const prev = this.ctx.globalCompositeOperation;\n            this.ctx.globalCompositeOperation = 'destination-in';\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            this.ctx.globalCompositeOperation = prev;\n            this.ctx.shadowColor = '';\n            this.ctx.shadowBlur = 0;\n            this.drawLine();\n            this.chooseCheckTime.forEach((item, index) => {\n                if (this.runList[item.index].data.length >= item.runIndex) {\n                    this.drawPoint(item.runIndex, item.index);\n                    this.chooseCheckTime[index].runIndex += this.runList[item.index].speed;\n                    runNum++;\n                }\n            });\n            if (runNum === 0 && this.isReDraw) {\n                this.ctx.shadowColor = '';\n                this.ctx.shadowBlur = 0;\n                this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                this.drawLine();\n                this.isReDraw = false;\n            } else {\n                this.isReDraw = true;\n            }\n            requestAnimationFrame(this.drawlineRun.bind(this));\n        },\n\n        /**\n         * 动画绘点函数\n         * @param checkLength\n         * @param index\n         */\n        drawPoint(checkLength, index) {\n            this.ctx.shadowColor = this.runList[index].tailLine.moveColor;\n            this.ctx.shadowBlur = this.runList[index].tailLine.shadowBlur;\n            this.ctx.beginPath();\n            this.ctx.arc(this.runList[0].data[checkLength - 1][0], this.runList[0].data[checkLength - 1][1], this.runList[index].tailLine.radius, 0, Math.PI * 2);\n            this.ctx.stroke();\n            this.ctx.fillStyle = this.runList[index].tailLine.tailColor;\n            this.ctx.fill();\n        },\n\n        /**\n         * 新动画创建(动画触发)\n         * @param index\n         */\n        addNewRun(index) {\n            this.chooseCheckTime.push({ index: index, runIndex: 1 });\n        }\n    }\n};\n</script>\n\n<style scoped>\n\n</style>\n\n```",
      "data": {
        "title": "canvas 线条动画",
        "date": "2021-06-07 12:03:02",
        "tags": [
          "canvas"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "canvas-xian-tiao-dong-hua"
    },
    {
      "content": "## 大写字母分割字符串 \n```js\n\"taxAdmin\".split(/(?=[A-Z])/) // [\"tax\", \"Admin\"]\n```",
      "data": {
        "title": "正则",
        "date": "2021-06-04 11:12:54",
        "tags": [
          "正则"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "zheng-ze"
    },
    {
      "content": "```js\n<script lang=\"tsx\">\nimport { defineComponent, withScopeId, getCurrentInstance } from 'vue'\n\nexport default defineComponent({\n  setup(props, ctx) {\n    const instance = getCurrentInstance()\n    const scopeId = instance.type.__scopeId\n    const withId = withScopeId(scopeId)\n\n    return withId(() => <div class=\"ceshi\">fdsafas</div>)\n  },\n})\n</script>\n\n```\nhttps://github.com/vuejs/jsx-next/issues/51",
      "data": {
        "title": "vue3 tsx/jsx css scoped",
        "date": "2021-05-31 10:41:07",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue3-tsxjsx-css-scoped"
    },
    {
      "content": "```js\ndeclare module '@vue/runtime-core' {\n  interface ComponentCustomProperties {\n    $test: number\n  }\n}\n```",
      "data": {
        "title": "vue3 ts 类型扩展",
        "date": "2021-05-31 10:37:51",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue3-ts-lei-xing-kuo-zhan"
    },
    {
      "content": "\n```js\nimport {\n  ComponentInternalInstance,\n  defineComponent,\n  getCurrentInstance,\n} from '@vue/composition-api';\nexport default defineComponent({\n  setup(){\n    // 类型断言\n    const { proxy: _this } = getCurrentInstance() as ComponentInternalInstance\n  }\n})\n```",
      "data": {
        "title": "getCurrentInstance ts类型错误",
        "date": "2021-05-31 10:34:00",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "getcurrentinstance-ts-lei-xing-cuo-wu"
    },
    {
      "content": "```js\n    Array.prototype.nextEach = function (callback) {\n      let _this = this;\n\n      !function fn(i) {\n        new Promise(res => {\n          callback(_this[i], i, res);\n        }).then(() => {\n          i + 1 < _this.length && fn(i + 1);\n        })\n      }(0)\n    }\n\n    let arr = [{ count: 2 }, { count: 3 }, { count: 4 }, { count: 5 }, { count: 6 }];\n\n    //demo: 只遍历到 count < 4\n    arr.nextEach((item, i, next) => {\n      console.log(item, i);\n      // 执行next，才会遍历下一个\n      item.count < 4 && next();\n    })\n```\nhttps://www.toutiao.com/i6962823796386726404",
      "data": {
        "title": "数组forEach不能中途退出？教你封装可中途退出的函数",
        "date": "2021-05-17 08:49:16",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "shu-zu-foreach-bu-neng-zhong-tu-tui-chu-jiao-ni-feng-zhuang-ke-zhong-tu-tui-chu-de-han-shu"
    },
    {
      "content": "```js\nvar t = performance.timing\n// 页面加载的耗时\nvar pageloadtime = t.loadEventStart - t.navigationStart;\n// 域名解析的耗时\nvar dns = t.domainLookupEnd - t.domainLookupStart;\n// TCP连接的耗时\nvar tcp = t.connectEnd - t.connectStart;\n// 读取页面第一个字节之前的耗时\nvar ttfb = t.responseStart - t.navigationStart;\n```",
      "data": {
        "title": "前端(performance)精准获取页面启动加载时间",
        "date": "2021-05-08 18:41:04",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "qian-duan-jing-zhun-huo-qu-ye-mian-qi-dong-jia-zai-shi-jian"
    },
    {
      "content": "```js\nconst obj = { a:\"姓名\", b:18, c:\"内容\" }\nconst data = {}\nobj = { a: data.name, b: data.age, c: data.xx } = obj\nconsole.log(obj) // { a:\"姓名\", b:18, c:\"内容\" }\nconsole.log(data) // { name:\"姓名\", age:18, xx:\"内容\" }\n```",
      "data": {
        "title": "es6解构赋值变量名称的另一种用法",
        "date": "2021-05-06 10:48:20",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "es6-jie-gou-fu-zhi-bian-liang-ming-cheng-de-ling-yi-chong-yong-fa"
    },
    {
      "content": "```js\nif (isWin10IE) {\n    window.location.href = `microsoft-edge:${document.URL}`;\n}\n```",
      "data": {
        "title": "ie浏览器内唤起edge",
        "date": "2021-04-28 14:23:41",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ie-liu-lan-qi-nei-huan-qi-edge"
    },
    {
      "content": "## 解决别名配置问题\n```json\n// tsconfig.json\n{\n    ...\n    \"extends\": \"./paths.json\"\n}\n```\n```json\n// paths.json\n{\n    \"compilerOptions\": {\n        \"baseUrl\": \"src\",\n        \"paths\": {\n            \"@/*\": [\"*\"]\n        }\n    }\n}\n```",
      "data": {
        "title": "create-react-app typescript模板",
        "date": "2021-04-23 10:10:29",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "create-react-app-typescript-mo-ban"
    },
    {
      "content": "```html\n<template>\n  <div class=\"elevator\" :class=\"{'edit': isEdit}\" id=\"elevator\" ref=\"elevator\" v-show=\"sortList.length > 0\">\n    <div class=\"mask\" @click=\"onEdit\"></div>\n    <i class=\"ear bilifont bili-icon_youdaohang_xiaodianshitianxian\"></i>\n    <div class=\"list-box\">\n      <SlickList lockAxis=\"y\" v-model=\"sortList\" helperClass=\"slicksort-selected\" @input=\"onInput\">\n        <SlickItem class=\"item sortable\" :class=\"{'on': index === currentFloor && !isEdit}\" v-for=\"(item, index) in sortList\" :key=\"`nav-${index}`\" :index=\"index\" :disabled=\"!isEdit\" @click.native=\"moveTo(item.type)\" v-van-report:elevatorMoveto.click=\"item.type\">\n          {{ item.name }}\n        </SlickItem>\n      </SlickList>\n      <div class=\"item sort\" :class=\"{'on': isEdit}\" @click=\"onEdit\" v-van-report:sort.click><i class=\"bilifont bili-icon_youdaohang_paixu\"></i></div>\n      <div class=\"item back-top\" @click=\"scrollTo(0)\"><i class=\"bilifont bili-general_pullup_s\"></i></div>\n      <!-- <div class=\"item back-old\" @click=\"onSwitchLang\" v-html=\"$HomeLang['24']\"></div> -->\n    </div>\n    <div class=\"bg23\"></div>\n  </div>\n</template>\n\n<script>\nimport { SlickList, SlickItem } from 'vue-slicksort'\nimport { getElevatorSort, setElevatorSort } from 'g-public/apis/home'\nimport { Cantor, scrollTop, cookie, customReport } from 'g-public/js/utils'\nimport { mapState } from 'vuex'\n\nexport default {\n  components: {\n    SlickItem,\n    SlickList\n  },\n  props: {\n    config: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    }\n  },\n  data() {\n    return {\n      sortList: [],\n      isEdit: false,\n      initSortList: [],\n      currentFloor: -1\n    }\n  },\n  computed: {\n    ...mapState(['recommendData']),\n    needOffset() {\n      return this.recommendData?.abtest?.group === 'b'\n    },\n    sortNumber(){\n      return this.config.length\n    }\n  },\n  methods: {\n    async getElevatorSortData() {\n      try {\n        const { data } = await getElevatorSort()\n        if(data.code === 0) {\n          const localSetting = window.localStorage.index_user_setting\n          const remoteSetting = data.data\n          if(localSetting !== JSON.stringify(remoteSetting)) {\n            window.localStorage.index_user_setting = JSON.stringify(remoteSetting)\n          }\n        }\n      } catch(err) {}\n\n      this.setInitSortList()\n    },\n    async setElevatorSortData(param) {\n      try {\n        await setElevatorSort(param)\n      } catch(err) {}\n    },\n    setInitSortList() {\n      this.initSortList = this.getSortData()\n      this.setSortList(this.initSortList)\n      this.$emit('on-change', this.initSortList)\n    },\n    getSortData(){\n      const setting = JSON.parse(window.localStorage.index_user_setting || \"{}\")\n\n      // 如果增减分区要先判断len 拿len去decode 否则返回本地排序\n      if(setting.len === this.sortNumber){\n        return Cantor.decode(setting.sort, this.sortNumber)\n      }else{\n        return this.defaultSort()\n      }\n    },\n    setSortList(sortData) {\n      let arr = []\n      for(let i = 0; i < sortData.length; i++) {\n        const id = sortData[i]\n        arr.push({\n          sort: id,\n          name: (this.config[id].navName || this.config[id].name),\n          type: this.config[id].type\n        })\n      }\n      this.sortList = arr\n    },\n    //默认排序\n    defaultSort(){\n      let arr = []\n      for(let i = 0; i < this.sortNumber; i++){\n        arr[i] = i\n      }\n      return arr\n    },\n    // 结果存到服务器\n    setNavDataToDB(arr) {\n      const setting = { sort: Cantor.encode(arr, this.sortNumber), len: this.sortNumber }\n      if(setting.sort.toString() === this.initSortList.toString()) return\n      this.setElevatorSortData({\n        settings: JSON.stringify(setting)\n      })\n    },\n    // 结果存到本地\n    setNavDataTolocalStorage(arr) {\n      const setting = {\n        sort: Cantor.encode(arr, this.sortNumber),\n        len: this.sortNumber\n      }\n      window.localStorage.index_user_setting = JSON.stringify(setting)\n    },\n    onEdit() {\n      this.isEdit = !this.isEdit\n    },\n    onInput(info) {\n      let arr = []\n      for(let i = 0; i < info.length; i++) {\n        arr.push(info[i].sort)\n      }\n\n      this.setNavDataTolocalStorage(arr)\n      // if(window.UserStatus && window.UserStatus.userInfo && window.UserStatus.userInfo.isLogin){\n        this.setNavDataToDB(arr)\n      // }\n\n      this.$emit('on-change', arr)\n    },\n    scrollHandle() {\n      const elevatorDom = document.querySelector('#elevator')\n      const scrollTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop\n      const minTop = document.querySelector('.first-screen').offsetTop + (this.needOffset ? 106 : 0)\n      const centerTop = (document.documentElement.clientHeight - (elevatorDom.offsetHeight + 70)) / 2\n      //定位\n      const t = scrollTop < minTop ? minTop - scrollTop : (centerTop < 0 ? 10 : centerTop)\n      elevatorDom.style.top = `${t}px`\n\n      if(scrollTop < 700) {\n        this.currentFloor = -1\n        return\n      }\n\n      for(let i = 0; i < this.sortList.length; i++) {\n        const el = document.querySelector(`#bili_${this.sortList[i]['type']}`)\n        const top = el.offsetTop\n        const height = el.offsetHeight\n        const dest = scrollTop - (height/2)\n        if(top > dest) {\n          this.currentFloor = i\n          break\n        }\n      }\n    },\n    moveTo(type) {\n      const el = document.querySelector(`#bili_${type}`)\n      window.scroll(0, el.offsetTop)\n    },\n    scrollTo(val) {\n      window.scroll(0, val)\n    },\n  },\n  mounted() {\n    this.getElevatorSortData()\n\n    this.scrollHandle()\n    window.addEventListener('scroll', e => {\n      this.scrollHandle()\n    })\n    window.addEventListener('resize', () => this.scrollHandle())\n  }\n}\n</script>\n\n<style lang=\"less\">\n.elevator {\n  position: fixed;\n  left: calc(50% + 3px);\n  top: 10px;\n  margin-left: 825px;\n  z-index: 10;\n\n  .list-box {\n    padding-top: 6px;\n    position: relative;\n    background: #FFFFFF;\n    border: 1px solid #e7e7e7;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    z-index: 2;\n    .item {\n      width: 54px;\n      height: 24px;\n      line-height: 24px;\n      text-align: center;\n      cursor: pointer;\n      transition: all .2s;\n      user-select:none;\n      background: #FFFFFF;\n      &.sort{\n        height: 32px;\n        line-height: 32px;\n        position: relative;\n        border-top: 1px solid #e7e7e7;\n        margin-top: 5px;\n      }\n      &.back-top {\n        position: absolute;\n        left: -1px;\n        bottom: -32px;\n        width: 56px;\n        line-height: 30px;\n        height: 32px;\n        border: 1px solid #e7e7e7;\n        border-bottom-left-radius: 10px;\n        border-bottom-right-radius: 10px;\n        .bilifont {\n          font-size: 26px;\n        }\n      }\n      &.back-old {\n        position: absolute;\n        width: 56px;\n        height: 42px;\n        line-height: 16px;\n        left: -1px;\n        bottom: -82px;\n        border-radius: 10px;\n        border: 1px solid #e7e7e7;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      .bilifont {\n        color: #999;\n      }\n      &:hover, &.on {\n        background-color: #00a1d6;\n        color: #fff;\n        .bilifont {\n          color: #fff;\n        }\n      }\n    }\n  }\n  .ear {\n    position: absolute;\n    top: -10px;\n    font-size: 12px;\n    left: 3px;\n    z-index: 2;\n  }\n  .bg23 {\n    display: none;\n    position: absolute;\n    width: 130px;\n    height: 105%;\n    top: -20px;\n    right: -15px;\n    background-color:rgba(255,255,255, .8);\n    padding: 40px;\n    box-sizing: content-box;\n    border-radius: 2px;\n    background-image: url('https://s1.hdslb.com/bfs/static/jinkela/home/asserts/tab2233.png');\n    background-repeat: no-repeat;\n    background-position: 16px 20px;\n  }\n\n  &.edit{\n    z-index: 1000;\n    .mask {\n      position: fixed;\n      left: 0;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, .5);\n    }\n    .bg23 {\n      display: block;\n    }\n  }\n}\n.slicksort-selected {\n  text-align: center;\n  line-height: 28px;\n  background-color: #00a1d6;\n  color: #fff;\n  pointer-events:stroke !important;\n  z-index: 1001;\n  .bilifont {\n    color: #fff;\n  }\n}\n</style>\n\n\n```",
      "data": {
        "title": "vuejs elevator 楼层电梯",
        "date": "2021-04-14 09:17:36",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vuejs-elevator-lou-ceng-dian-ti"
    },
    {
      "content": "## ie10及以下识别\n```js\n// ie10及更旧版提示\n<script>/*@cc_on alert('警告：你正在使用IE浏览器，请升级浏览器或者更换其他高速浏览器；点击确定继续。') @*/</script> \n```\n## ie9及以下识别\n```js \n// ie9及更旧版提示\n<!--[if lte IE 9]> <script> 脚本 </script>  <![endif]-->\n```\n## ie浏览器（包括ie11）\n```js \nif(!!window.ActiveXObject || \"ActiveXObject\" in window){\n      alert('警告：你正在使用IE浏览器，请升级浏览器或者更换其他高速浏览器；点击确定继续。')\n}\n```\n##其他\n```js\n        /* IE条件编译检测浏览器是否是IE并且取得IE版本号\n         * 不使用navigator.userAgent获取IE版本号避免误判 \n        */\n        var IEVersion = 0;\n        /*@cc_on@*/\n        /*@\n                IEVersion = @_jscript_version;\n        @*/\n        if(IEVersion > 0){\n                if(IEVersion < 11){\n                        alert('IE 11已经发布多年，不要再用祖传的IE' + IEVersion + '了！');\n                }\n        }else{\n                alert('当前浏览器不是IE内核浏览器。');\n        }\n```",
      "data": {
        "title": "ie浏览器升级警告",
        "date": "2021-04-02 08:43:04",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ie-liu-lan-qi-sheng-ji-jing-gao"
    },
    {
      "content": "\n### 安装\n```bash\nyarn add tinymce @tinymce/tinymce-vue\n```\n### public文件下引入皮肤\n```\n        skin_url: '/tinymce/skins/ui/oxide',\n        content_css: `/tinymce/skins/content/default/content.min.css`,\n```\n\n```html\n<template>\n  <div class=\"editor\">\n    <TinymceEditor id=\"editor-tinymce\" ref=\"ZEditor\" v-model=\"myValue\" :init=\"completeSetting\" :disabled=\"disabled\" />\n  </div>\n</template>\n\n<script>\n// https://www.cnblogs.com/huihuihero/p/13877589.html\nimport tinymce from 'tinymce/tinymce'\nimport TinymceEditor from '@tinymce/tinymce-vue'\n// 样式 引入node_modules里的tinymce相关文件文件\n// // import 'tinymce/skins/content/default/content.min.css'\n// import 'tinymce/skins/ui/oxide/skin.min.css'\n// import 'tinymce/skins/ui/oxide/content.min.css'\n\n// 主题\nimport 'tinymce/themes/silver/theme'\n// 图标\nimport 'tinymce/icons/default/icons'\n\nimport 'tinymce/plugins/advlist' // 高级列表\nimport 'tinymce/plugins/anchor' // 锚点\nimport 'tinymce/plugins/autolink' // 自动链接\nimport 'tinymce/plugins/autoresize' // 编辑器高度自适应,注：plugins里引入此插件时，Init里设置的height将失效\nimport 'tinymce/plugins/autosave' // 自动存稿\n\nimport 'tinymce/plugins/charmap' // 特殊字符\nimport 'tinymce/plugins/code' // 编辑源码\nimport 'tinymce/plugins/codesample' // 代码示例\nimport 'tinymce/plugins/colorpicker'\n// import 'tinymce/plugins/contextmenu'\nimport 'tinymce/plugins/directionality' // 文字方向\nimport 'tinymce/plugins/emoticons' // 表情\nimport 'tinymce/plugins/fullscreen' // 全屏插件\nimport 'tinymce/plugins/help'\nimport 'tinymce/plugins/hr'\n\nimport 'tinymce/plugins/image' // 图片插件\nimport 'tinymce/plugins/imagetools'\nimport 'tinymce/plugins/importcss' // 引入css\nimport 'tinymce/plugins/insertdatetime' // 插入日期时间\n\nimport 'tinymce/plugins/link' // 超链接\nimport 'tinymce/plugins/lists' // 列表插件\nimport 'tinymce/plugins/media' // 插入编辑媒体\nimport 'tinymce/plugins/noneditable'\nimport 'tinymce/plugins/nonbreaking' // 插入不间断空格\nimport 'tinymce/plugins/quickbars' // 快速工具栏\n\nimport 'tinymce/plugins/table' // 表格\nimport 'tinymce/plugins/tabfocus' // 切入切出，按tab键切出编辑器，切入页面其他输入框中\nimport 'tinymce/plugins/template' // 内容模板\n// import 'tinymce/plugins/textcolor' //文字颜色\nimport 'tinymce/plugins/textpattern' // 快速排版\nimport 'tinymce/plugins/wordcount' // 字数统计\nimport 'tinymce/plugins/save' // 保存\nimport 'tinymce/plugins/searchreplace' // 查找替换\n\nimport 'tinymce/plugins/pagebreak' // 插入分页符\nimport 'tinymce/plugins/paste' // 粘贴插件\nimport 'tinymce/plugins/preview' // 预览\nimport 'tinymce/plugins/print' // 打印\nimport 'tinymce/plugins/toc' // 目录生成器\nimport 'tinymce/plugins/visualblocks' // 显示元素范围\nimport 'tinymce/plugins/visualchars' // 显示不可见字符\n\n// import 'tinymce/plugins/importword'\n// import 'tinymce/plugins/indent2em'\n// import 'tinymce/plugins/formatpainter'\n\nexport default {\n  name: 'ZEditor',\n  components: {\n    TinymceEditor\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    setting: {\n      type: Object,\n      default: () => {}\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    plugins: {\n      type: [String, Array],\n      default:\n        'print preview searchreplace autolink directionality visualblocks visualchars fullscreen image link media template code codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount textpattern autosave '\n    },\n    toolbar: {\n      type: [String, Array],\n      default:\n        'fullscreen undo redo restoredraft | cut copy paste pastetext | forecolor backcolor bold italic underline strikethrough link anchor | alignleft aligncenter alignright alignjustify outdent indent | \\ styleselect formatselect fontselect fontsizeselect | bullist numlist | blockquote subscript superscript removeformat | \\ table image media charmap hr pagebreak insertdatetime print preview | code selectall searchreplace visualblocks | indent2em lineheight formatpainter axupimgs'\n    }\n  },\n  data () {\n    return {\n      defaultSetting: {\n        language_url: '/admin_jzm/tinymce/langs/zh_CN.js',\n        language: 'zh_CN',\n        // theme: 'silver',\n        // theme_url: '/admin_jzm/tinymce/mytheme.js',\n\n        // 这样设置不用 import css文件\n        // skin: 'oxide',\n        skin_url: 'http://127.0.0.1:8001/admin_jzm/tinymce/skins/ui/oxide',\n        content_css: `/tinymce/skins/content/default/content.min.css`,\n        min_height: 250,\n        max_height: 600,\n        selector: 'textarea',\n        plugins:\n          'print preview searchreplace autolink directionality visualblocks visualchars fullscreen image link media template code codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount imagetools textpattern help noneditable autosave indent2em autoresize formatpainter importword quickbars ',\n\n        toolbar: `code undo redo restoredraft | cut copy paste pastetext | forecolor backcolor bold italic underline strikethrough link anchor | alignleft aligncenter alignright alignjustify outdent indent | \\\n        styleselect formatselect fontselect fontsizeselect | bullist numlist | blockquote subscript superscript removeformat | \\\n        table image media charmap hr pagebreak insertdatetime print preview | codesample fullscreen | indent2em lineheight formatpainter importword restoredraft`,\n        toolbar_sticky: false, // 粘性工具栏\n        quickbars_insert_toolbar: '', // quickimage quicktable\n        toolbar_drawer: 'sliding',\n        quickbars_selection_toolbar:\n          'removeformat | bold italic underline strikethrough | fontsizeselect forecolor backcolor',\n        branding: false, // 隐藏右下角技术支持\n        menubar: true, // 隐藏最上方menu\n        statusbar: false, // 隐藏编辑器底部的状态栏\n        convert_urls: false,\n        toolbar_mode: 'wrap', // sliding & wrap\n\n        // 字号\n        fontsize_formats: '12px 14px 16px 18px 24px 36px 48px 56px 72px',\n        // 字体\n        font_formats: '微软雅黑=Microsoft YaHei,Helvetica Neue,PingFang SC,sans-serif;苹果苹方=PingFang SC,Microsoft YaHei,sans-serif;宋体=simsun,serif;仿宋体=FangSong,serif;黑体=SimHei,sans-serif;Arial=arial,helvetica,sans-serif;Arial Black=arial black,avant garde;Book Antiqua=book antiqua,palatino;Comic Sans MS=comic sans ms,sans-serif;Courier New=courier new,courier;Georgia=georgia,palatino;Helvetica=helvetica;Impact=impact,chicago;Symbol=symbol;Tahoma=tahoma,arial,helvetica,sans-serif;Terminal=terminal,monaco;Times New Roman=times new roman,times;Verdana=verdana,geneva;Webdings=webdings;Wingdings=wingdings,zapf dingbats;知乎配置=BlinkMacSystemFont, Helvetica Neue, PingFang SC, Microsoft YaHei, Source Han Sans SC, Noto Sans CJK SC, WenQuanYi Micro Hei, sans-serif;小米配置=Helvetica Neue,Helvetica,Arial,Microsoft Yahei,Hiragino Sans GB,Heiti SC,WenQuanYi Micro Hei,sans-serif',\n        link_list: [{ title: '预置链接1', value: 'http://www.baidu.com' }],\n        image_list: [{ title: '预置图片1', value: 'https://www.baidu.com/img/bd_logo1.png' }],\n        // content_style: `img{}`,\n        // importcss_append: true, // 配合插件 importcss\n        // content_security_policy: \"script-src *;\", //内容安全策略\n        // extended_valid_elements: 'script[src]', // 扩展有效元素\n        // 为内容模板插件提供预置模板\n        templates: [\n          {\n            title: '模板文档',\n            description: '模板介绍',\n            content:\n              '<div class=\"mceTmpl\"><span class=\"cdate\">CDATE</span>，<span class=\"mdate\">MDATE</span>，模板内容</div>'\n          }\n        ],\n        insertdatetime_formats: ['%Y年%m月%d日', '%H点%M分%S秒', '%Y-%m-%d', '%H:%M:%S'],\n        paste_data_images: true, // 配合插件 paste 允许粘贴图像\n        // autosave_ask_before_unload: true, // 当关闭或跳转URL时，弹出提示框提醒用户仍未保存变更内容。默认开启提示。\n        // images_upload_base_path: '/demo', // 给返回的相对路径指定它所相对的基本路径。\n        images_upload_handler: (blobInfo, success, failFun) => {\n          console.log('🚀 ~ file: ZEditor2.vue ~ line 136 ~ data ~ blobInfo', blobInfo)\n          const img = 'data:image/jpeg;base64,' + blobInfo.base64()\n          success(img)\n        }\n      },\n      myValue: this.value\n    }\n  },\n  computed: {\n    completeSetting () {\n      return Object.assign(this.defaultSetting, this.setting)\n    }\n  },\n  watch: {\n    myValue (newValue) {\n      this.$emit('input', newValue)\n    },\n    value (newValue) {\n      this.myValue = newValue\n    }\n  },\n  mounted () {\n    // tinymce.init({})\n  },\n  beforeDestroy () {\n    tinymce.get('editor-tinymce').destroy()\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n::v-deep .tox-tinymce {\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n}\n</style>\n\n```",
      "data": {
        "title": "TinymceEditor",
        "date": "2021-03-19 15:58:16",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "tinymceeditor"
    },
    {
      "content": "```html\n<div class=\"phone\">\n    <div class=\"phone_bg1\">\n        <div class=\"phone_bg2\">\n            <div class=\"phone_bg3\">\n                <div class=\"phone_lh\">\n                    <div class=\"phone_lh_con\">\n                        <div class=\"lh_tiao\"></div>\n                        <div class=\"lh_yuan\"></div>\n                    </div>\n                </div>\n                <span class=\"date_time\">15:25</span>\n\n                <div class=\"states\">\n                    <ul class=\"ul_xinhao\">\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                    </ul>\n\n                    <div class=\"wifi1\">\n                        <div class=\"wifi2\">\n                            <div class=\"wifi3\">\n                                <div class=\"wifi4\">\n                                    <div class=\"wifi5\">\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"dianliang\">zss</div>\n                </div>\n\n                <div class=\"phone_home\">zss</div>\n\n            </div>\n        </div>\n    </div>\n\n    <div class=\"jingyin\"></div>\n    <div class=\"yl_jia\"></div>\n    <div class=\"yl_jian\"></div>\n    <div class=\"suoping\"></div>\n\n</div>\n```\n```css\n* {\n\tmargin:0;\n\tpadding:0;\n}\nbody {\n\tpadding:0px;\n\tbackground:#f8f8f8;\n}\n@-webkit-keyframes phone {\n\t0% {\n\t-webkit-transform:skew(0deg,0deg) translateY(0px);\n}\n50% {\n\t-webkit-transform:skew(0deg,0deg) translateY(5px);\n}\n100% {\n\t-webkit-transform:skew(0deg,0deg) translateY(0px);\n}\n}@-webkit-keyframes phone_yy {\n\t0% {\n\t-webkit-transform:translate(0px,0px);\n\tbackground:rgba(0,0,0,0.2);\n\tfilter:blur(8px);\n}\n50% {\n\t-webkit-transform:translate(-8px,-8px);\n\tbackground:rgba(0,0,0,0.3);\n\tfilter:blur(5px);\n}\n100% {\n\t-webkit-transform:translate(0px,0px);\n\tbackground:rgba(0,0,0,0.2);\n\tfilter:blur(8px);\n}\n}.phone {\n\tmargin:0px auto;\n\twidth:400px;\n\theight:800px;\n\tbackground:#68686b;\n\tborder-radius:30px;\n\tbox-sizing:border-box;\n\tpadding:2px;\n\tposition:relative;\n\t-webkit-transform:skew(0deg,0deg);\n\t-webkit-animation:phone 4s ease 0s infinite;\n\tposition:relative;\n\ttop:8%;\n}\n.phone:after {\n\tposition:absolute;\n\tcontent:\"\";\n\tdisplay:block;\n\twidth:100%;\n\theight:100%;\n\tbackground:rgba(0,0,0,0.2);\n\ttop:10px;\n\tleft:10px;\n\tz-index:-1;\n\tborder-radius:18px;\n\tfilter:blur(8px);\n\t-webkit-animation:phone_yy 4s ease 0s infinite;\n}\n.phone_bg1 {\n\twidth:100%;\n\theight:100%;\n\tbackground:#fff;\n\tborder-radius:30px;\n\tbox-sizing:border-box;\n\tpadding:0.5px;\n}\n.phone_bg2 {\n\twidth:100%;\n\theight:100%;\n\tbackground:#0b0d0c;\n\tborder-radius:30px;\n\tbox-sizing:border-box;\n\tpadding:10px;\n\tbox-shadow:inset 14px 0px 10px -15px #fff,inset -14px 0px 10px -15px #fff;\n}\n.phone_bg3 {\n\twidth:100%;\n\theight:100%;\n\tbackground:#f8f8f8;\n\tborder-radius:26px;\n\tbox-sizing:border-box;\n\tposition:relative;\n}\n.phone_lh {\n\twidth:50%;\n\theight:20px;\n\tbackground:#0b0d0c;\n\tmargin:0 auto;\n\tborder-radius:0px 0px 14px 14px;\n\tposition:relative;\n}\n.phone_lh_con {\n\tdisplay:flex;\n\talign-items:center;\n\tjustify-content:center;\n}\n.phone_lh:before {\n\tposition:absolute;\n\tcontent:\"\";\n\twidth:5px;\n\theight:5px;\n\tbackground:#0b0d0c;\n\tleft:-5px;\n\ttop:0px;\n\tz-index:9;\n}\n.phone_lh:after {\n\tposition:absolute;\n\tcontent:\"\";\n\twidth:5px;\n\theight:5px;\n\tbackground:#0b0d0c;\n\tright:-5px;\n\ttop:0px;\n\tz-index:9;\n}\n.phone_lh_con:before {\n\tposition:absolute;\n\tcontent:\"\";\n\twidth:10px;\n\theight:10px;\n\tbackground:#fff;\n\tborder-radius:100%;\n\tleft:-10px;\n\ttop:0px;\n\tz-index:10;\n}\n.phone_lh_con:after {\n\tposition:absolute;\n\tcontent:\"\";\n\twidth:10px;\n\theight:10px;\n\tbackground:#fff;\n\tborder-radius:100%;\n\tright:-10px;\n\ttop:0px;\n\tz-index:10;\n}\n.lh_tiao {\n\twidth:25%;\n\theight:3px;\n\tborder-radius:5em;\n\tbackground:#2d2d2d;\n\tmargin-left:8px;\n\tmargin-top:4px;\n}\n.lh_yuan {\n\twidth:5px;\n\theight:5px;\n\tborder-radius:5em;\n\tbackground:#212554;\n\tmargin-left:8px;\n\tmargin-top:4px;\n}\n.phone_home {\n\twidth:32%;\n\theight:0.5%;\n\tborder-radius:5em;\n\tposition:absolute;\n\tbottom:1%;\n\tleft:50%;\n\tmargin-left:-16%;\n\tbackground:#0b0d0c;\n}\n.phone_bg3 #text {\n\tfont-size:18px;\n\tposition:absolute;\n\ttop:20%;\n\tleft:0%;\n\ttext-align:center;\n\twidth:100%;\n\tfont-weight:600;\n}\n.phone_bg3 .a_user {\n\tfont-size:10px;\n\tfont-weight:bold;\n\tposition:absolute;\n\tbottom:10%;\n\tleft:50%;\n\ttext-align:center;\n\twidth:64px;\n\tmargin-left:-32px;\n\tbackground:#06F;\n\tcolor:#fff;\n\tborder-radius:5em;\n\tline-height:1.5em;\n\tpadding:3px 0px;\n\tcursor:pointer;\n\ttransition:all 0.8s ease;\n}\n.phone_bg3 .date_time {\n\twidth:25%;\n\tleft:0px;\n\tposition:absolute;\n\ttop:6px;\n\tz-index:111;\n\tfont-size:13px;\n\tfont-weight:600;\n\ttext-align:center;\n}\n.states {\n\twidth:25%;\n\tright:1.5px;\n\tposition:absolute;\n\ttop:4px;\n\tz-index:111;\n\tdisplay:flex;\n\talign-items:center;\n\tjustify-content:center;\n}\n.states .ul_xinhao {\n\tdisplay:flex;\n\talign-items:flex-end;\n\tlist-style:none;\n}\n.states .ul_xinhao li {\n\twidth:3px;\n\theight:3px;\n\tbackground:#0d0b0c;\n\tmargin-left:1px;\n\tlist-style:none;\n}\n.states .ul_xinhao li:nth-of-type(2) {\n\theight:4px;\n}\n.states .ul_xinhao li:nth-of-type(3) {\n\theight:6.5px;\n}\n.states .ul_xinhao li:nth-of-type(4) {\n\theight:8.5px;\n}\n.states .dianliang {\n\twidth:18px;\n\theight:10px;\n\tborder:1px solid #b6b6b6;\n\tbox-sizing:border-box;\n\tborder-radius:2px;\n\tmargin-left:0.5px;\n\tposition:relative;\n}\n.states .dianliang:after {\n\tcontent:\"\";\n\tposition:absolute;\n\twidth:94%;\n\theight:88%;\n\ttop:6%;\n\tleft:3%;\n\tbox-sizing:border-box;\n\tbackground:#0d0b0c;\n\tborder-radius:2px;\n}\n.states .dianliang:before {\n\tcontent:\"\";\n\tposition:absolute;\n\twidth:1px;\n\theight:4px;\n\tbox-sizing:border-box;\n\tbackground:#b6b6b6;\n\tborder-radius:2px;\n\tright:-2.5px;\n\ttop:50%;\n\tmargin-top:-2px;\n}\n.states .wifi1 {\n\tborder-radius:5em;\n\tmargin-left:0.5px;\n\tborder:solid transparent;\n\tborder-top-color:#0d0b0c;\n\tborder-width:2.2px 2.2px;\n\tdisplay:flex;\n\talign-items:center;\n\tjustify-content:center;\n\ttransform:translateY(4.5px);\n}\n.states .wifi2 {\n\tborder-radius:5em;\n\tborder:solid transparent;\n\tborder-top-color:#fff;\n\tborder-width:2.15px 2.15px;\n\tdisplay:flex;\n\talign-items:center;\n\tjustify-content:center;\n}\n.states .wifi3 {\n\tborder-radius:5em;\n\tborder:solid transparent;\n\tborder-top-color:#0d0b0c;\n\tborder-width:2.1px 2.1px;\n\tdisplay:flex;\n\talign-items:center;\n\tjustify-content:center;\n}\n.states .wifi4 {\n\tborder-radius:5em;\n\tborder:solid transparent;\n\tborder-top-color:#fff;\n\tborder-width:2.05px 2.05px;\n\tdisplay:flex;\n\talign-items:center;\n\tjustify-content:center;\n}\n.states .wifi5 {\n\tborder-radius:5em;\n\tborder:solid transparent;\n\tborder-top-color:#0d0b0c;\n\tborder-width:2px 2px;\n}\n.jingyin {\n\twidth:1.5px;\n\theight:3.75%;\n\tbackground:#121212;\n\tposition:absolute;\n\ttop:13.5%;\n\tleft:-1.5px;\n\tborder-radius:5px 0px 0px 5px;\n}\n.jingyin:after {\n\tcontent:\"\";\n\tdisplay:block;\n\twidth:0.8px;\n\theight:90%;\n\tbackground:rgba(255,255,255,0.8);\n\tposition:absolute;\n\tleft:0px;\n\tbottom:5%;\n}\n.yl_jia {\n\twidth:1.5px;\n\theight:7%;\n\tbackground:#121212;\n\tposition:absolute;\n\ttop:20.75%;\n\tleft:-1.5px;\n\tborder-radius:5px 0px 0px 5px;\n}\n.yl_jia:after {\n\tcontent:\"\";\n\tdisplay:block;\n\twidth:0.5px;\n\theight:90%;\n\tbackground:rgba(255,255,255,0.6);\n\tposition:absolute;\n\tright:0px;\n\tbottom:5%;\n}\n.yl_jian {\n\twidth:1.5px;\n\theight:7%;\n\tbackground:#121212;\n\tposition:absolute;\n\ttop:30%;\n\tleft:-1.5px;\n\tborder-radius:5px 0px 0px 5px;\n}\n.yl_jian:after {\n\tcontent:\"\";\n\tdisplay:block;\n\twidth:0.5px;\n\theight:90%;\n\tbackground:rgba(255,255,255,0.6);\n\tposition:absolute;\n\tright:0px;\n\tbottom:5%;\n}\n.suoping {\n\twidth:1.5px;\n\theight:11.5%;\n\tbackground:#121212;\n\tposition:absolute;\n\ttop:23%;\n\tright:-1.5px;\n\tborder-radius:0px 5px 5px 0px;\n}\n.suoping:after {\n\tcontent:\"\";\n\tdisplay:block;\n\twidth:0.5px;\n\theight:90%;\n\tbackground:rgba(255,255,255,0.6);\n\tposition:absolute;\n\tleft:0px;\n\tbottom:5%;\n}\n\n```\n```js\n//获取当前时间-年月日星期时分秒\nfunction getDate() {\n    var today = new Date();\n    var time = twoDigits(today.getHours()) + \":\" + twoDigits(today.getMinutes());\n    $(\".date_time\").html(time);\n}\n\nfunction twoDigits(val) {\n    if (val < 10) return \"0\" + val;\n    return val;\n}\ngetDate();\n\n//每秒获取执行一次，更新时间\n$(function() {\n    setInterval(getDate, 1000);\n});\n````",
      "data": {
        "title": "html+css iphoneXR手机模型",
        "date": "2021-03-15 15:51:32",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "htmlcss-iphonexr-shou-ji-mo-xing"
    },
    {
      "content": "## 清理缓存\n```bat\n:: 查看缓存地址\n:: yarn cache dir\n:: 清理缓存\nyarn cache clean\n:: 设置缓存地址\n:: yarn config set cache-folder E:\\cache\\yarn_cache\n\n:: 查看缓存地址\n@REM npm config get cache\n:: 清理缓存\n@REM npm cache clean --force\n:: 设置缓存地址\n@REM npm config set cache \"E:\\cache\\npm_cache\"\n:: 验证清理的有效性\n@REM npm cache verify\n```\n## 查看全局包\n```bat\nnpm list -g --depth 0\n```",
      "data": {
        "title": "npm 常用命令行",
        "date": "2021-03-15 09:41:36",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "yarn-npm-clean-cache"
    },
    {
      "content": "```html\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <title>css 多行文字和序号顶部对齐</title>\n  <style>\n    .ul {\n      list-style-type: none;\n      overflow: hidden;\n    }\n\n    /* 加一个padding的目的是因为负的text-indent会把序号挤到标签外，如果父级设置了overflow:hidden;序号就会被隐藏掉，为了防止出现这种情况，所以加上，也为了以后不给自己留坑 */\n    .ul li {\n      text-indent: -1em;\n      padding-left: 1em;\n    }\n  </style>\n</head>\n\n<body>\n  方式1\n  <hr>\n  <ol>\n    <li>单行文本</li>\n    <li>多行文本多行文本多行文本多行文本多行文本多行文本</li>\n  </ol>\n  方式2\n  <hr>\n  <ul style=\"list-style-type: none;\">\n    <li style=\"text-indent:-1.5em; padding-left:1.5em;\">1、单行文本</li>\n    <li style=\"text-indent:-1.5em; padding-left:1.5em;\">2、多行文本多行文本多行文本多行文本多行文本多行文本</li>\n  </ul>\n  方式3\n  <hr>\n  <ul class=\"ul\">\n    <li>\n      1.大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多\n    </li>\n    <li>\n      2.大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多\n    </li>\n    <li>\n      3.大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多撒多无群的无群二无群大萨达撒多\n    </li>\n  </ul>\n</body>\n\n</html>\n```",
      "data": {
        "title": "css 多行文字和序号顶部对齐",
        "date": "2021-03-12 18:22:01",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css-duo-xing-wen-zi-he-xu-hao-ding-bu-dui-qi"
    },
    {
      "content": "## mac `export`设置变量\n```json\n\"scripts\": {\n   \"start\": \"export NODE_ENV=development && nodemon -w src --exec \\\"babel-node src\\\"\",\n   \"build\": \"babel src --out-dir dist\",\n   \"run-build\": \"node dist\",\n }\n```\n## window `set`设置变量\n```json\n\"scripts\": {\n   \"start\": \"set NODE_ENV=development && nodemon -w src --exec \\\"babel-node src\\\"\",\n   \"build\": \"babel src --out-dir dist\",\n   \"run-build\": \"node dist\",\n }\n```",
      "data": {
        "title": "window和mac下设置NODE_ENV变量",
        "date": "2021-03-10 09:45:52",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "window-he-mac-xia-she-zhi-node_env-bian-liang"
    },
    {
      "content": "## 安装插件\neslint vetur prettier - code formatter\n### 配置 vscode settings.json\n```\n{\n  ...\n  \n    // 保存的时候格式化\n    \"editor.formatOnSave\": true,\n    \n    // 启用 eslint 格式化\n    \"eslint.format.enable\": true,\n  \n    // 采用 eslint 格式化\n    \"[vue]\": {\n        \"editor.defaultFormatter\": \"dbaeumer.vscode-eslint\"\n    },\n    \"[javascript]\": {\n        \"editor.defaultFormatter\": \"dbaeumer.vscode-eslint\"\n    },\n    \"[typescript]\": {\n        \"editor.defaultFormatter\": \"dbaeumer.vscode-eslint\"\n    }\n}\n```\n### 配置 .prettierrc\n```\n{\n  \"spaceBeforeFunctionParen\": true,\n  \"tabWidth\": 2,\n  \"useTabs\": false,\n  \"trailingComma\": \"none\",\n  \"eslintIntegration\": true,\n  \"singleQuote\": true,\n  \"semi\": false,\n  \"bracketSpacing\": true,\n  \"jsxBracketSameLine\": false,\n  \"arrowParens\": \"avoid\"\n}\n```\n",
      "data": {
        "title": "vscode 代码格式化 eslint+prettier+vetur",
        "date": "2021-02-18 09:04:36",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vscode-dai-ma-ge-shi-hua-eslintprettiervetur"
    },
    {
      "content": "```js\n<template>\n  <div class=\"editor\">\n    <TinymceEditor id=\"editor-tinymce\" ref=\"ZEditor\" v-model=\"myValue\" :init=\"completeSetting\" :disabled=\"disabled\" />\n  </div>\n</template>\n\n<script>\nimport tinymce from 'tinymce/tinymce'\nimport TinymceEditor from '@tinymce/tinymce-vue'\n// 样式\n// import 'tinymce/skins/content/default/content.min.css'\n// import 'tinymce/skins/ui/oxide/skin.min.css'\n// import 'tinymce/skins/ui/oxide/content.min.css'\n\n// 主题\nimport 'tinymce/themes/silver/theme'\nimport 'tinymce/icons/default/icons'\n\nimport 'tinymce/plugins/advlist'\nimport 'tinymce/plugins/anchor'\nimport 'tinymce/plugins/autolink'\nimport 'tinymce/plugins/autosave'\nimport 'tinymce/plugins/autoresize'\n\nimport 'tinymce/plugins/charmap'\nimport 'tinymce/plugins/code'\nimport 'tinymce/plugins/codesample'\nimport 'tinymce/plugins/colorpicker'\nimport 'tinymce/plugins/contextmenu'\nimport 'tinymce/plugins/directionality'\nimport 'tinymce/plugins/emoticons'\nimport 'tinymce/plugins/fullscreen' // 全屏插件\nimport 'tinymce/plugins/help'\nimport 'tinymce/plugins/hr'\n\nimport 'tinymce/plugins/image' // 图片插件\nimport 'tinymce/plugins/imagetools'\nimport 'tinymce/plugins/insertdatetime'\n\nimport 'tinymce/plugins/link' // 链接插件\nimport 'tinymce/plugins/lists'\nimport 'tinymce/plugins/media' // 媒体插件\nimport 'tinymce/plugins/noneditable'\nimport 'tinymce/plugins/nonbreaking'\nimport 'tinymce/plugins/quickbars' // 快速栏插件\n\nimport 'tinymce/plugins/table' // 表格插件\nimport 'tinymce/plugins/template'\nimport 'tinymce/plugins/textcolor'\nimport 'tinymce/plugins/textpattern'\nimport 'tinymce/plugins/wordcount'\nimport 'tinymce/plugins/searchreplace'\n\nimport 'tinymce/plugins/pagebreak'\nimport 'tinymce/plugins/paste'\nimport 'tinymce/plugins/preview'\nimport 'tinymce/plugins/print'\nimport 'tinymce/plugins/visualblocks'\nimport 'tinymce/plugins/visualchars'\n\nimport 'tinymce/plugins/importword'\nimport 'tinymce/plugins/indent2em'\nimport 'tinymce/plugins/formatpainter'\n\nexport default {\n  name: 'ZEditor',\n  components: {\n    TinymceEditor\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    setting: {\n      type: Object,\n      default: () => {}\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      defaultSetting: {\n        language_url: '/admin_jzm/tinymce/langs/zh_CN.js',\n        language: 'zh_CN',\n        // theme: 'silver',\n        // theme_url: '/admin_jzm/tinymce/mytheme.js',\n        // skin: 'oxide',\n        skin_url: 'http://127.0.0.1:8001/admin_jzm/tinymce/skins/ui/oxide',\n        // skin_url: '/admin_jzm/tinymce/skins/ui/oxide',\n        min_height: 250,\n        max_height: 600,\n        selector: 'textarea',\n        plugins:\n          'print preview searchreplace autolink directionality visualblocks visualchars fullscreen image link media template code codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount imagetools textpattern help noneditable autosave indent2em autoresize formatpainter importword quickbars paste',\n\n        toolbar: `code undo redo restoredraft | cut copy paste pastetext | forecolor backcolor bold italic underline strikethrough link anchor | alignleft aligncenter alignright alignjustify outdent indent | \\\n        styleselect formatselect fontselect fontsizeselect | bullist numlist | blockquote subscript superscript removeformat | \\\n        table image media charmap hr pagebreak insertdatetime print preview | codesample fullscreen | indent2em lineheight formatpainter importword restoredraft`,\n        toolbar_sticky: false, // 粘性工具栏\n        quickbars_insert_toolbar: '', // quickimage quicktable\n        quickbars_selection_toolbar:\n          'removeformat | bold italic underline strikethrough | fontsizeselect forecolor backcolor',\n        branding: false, // 隐藏右下角技术支持\n        menubar: true, // 隐藏最上方menu\n        statusbar: false, // 隐藏编辑器底部的状态栏\n        convert_urls: false,\n        toolbar_mode: 'wrap', // sliding & wrap\n        // 字号\n        // fontsize_formats: '12px 14px 16px 18px 24px 36px 48px 56px 72px',\n        // 字体\n        font_formats:\n          '微软雅黑=Microsoft YaHei,Helvetica Neue,PingFang SC,sans-serif;苹果苹方=PingFang SC,Microsoft YaHei,sans-serif;宋体=simsun,serif;仿宋体=FangSong,serif;黑体=SimHei,sans-serif;Arial=arial,helvetica,sans-serif;Arial Black=arial black,avant garde;Book Antiqua=book antiqua,palatino;',\n        link_list: [{ title: '预置链接1', value: 'http://www.baidu.com' }],\n        image_list: [{ title: '预置图片1', value: 'https://www.baidu.com/img/bd_logo1.png' }],\n        // importcss_append: true, // 配合插件 importcss\n        // content_security_policy: \"script-src *;\", //内容安全策略\n        // extended_valid_elements: 'script[src]', // 扩展有效元素\n        // 为内容模板插件提供预置模板\n        templates: [\n          {\n            title: '模板文档',\n            description: '介绍文字',\n            content:\n              '<div class=\"mceTmpl\"><span class=\"cdate\">CDATE</span>，<span class=\"mdate\">MDATE</span>，我的内容</div>'\n          }\n        ],\n        insertdatetime_formats: ['%Y年%m月%d日', '%H点%M分%S秒', '%Y-%m-%d', '%H:%M:%S'],\n        paste_data_images: true, // 配合插件 paste 允许粘贴图像\n        autosave_ask_before_unload: true, // 当关闭或跳转URL时，弹出提示框提醒用户仍未保存变更内容。默认开启提示。\n        // images_upload_base_path: '/', // 给返回的相对路径指定它所相对的基本路径。\n        images_upload_handler: (blobInfo, success, failFun) => {\n          const img = 'data:image/jpeg;base64,' + blobInfo.base64()\n          success(img)\n        }\n      },\n      myValue: this.value\n    }\n  },\n  computed: {\n    completeSetting () {\n      return Object.assign(this.defaultSetting, this.setting)\n    }\n  },\n  watch: {\n    myValue (newValue) {\n      this.$emit('input', newValue)\n    },\n    value (newValue) {\n      this.myValue = newValue\n    }\n  },\n  mounted () {\n    // tinymce.init({})\n  },\n  beforeDestroy () {\n    tinymce.get('editor-tinymce').destroy()\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n::v-deep .tox-tinymce {\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n}\n</style>\n```",
      "data": {
        "title": "Tinymce demo",
        "date": "2021-01-27 13:43:36",
        "tags": [
          "editor"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "tinymce-demo"
    },
    {
      "content": "```js\nconsole.log('*** app start ***');\nconsole.log('***      module.filename = ' + module.filename + ' ***');\nconsole.log('***           __filename = ' + __filename + ' ***');\nconsole.log('***            __dirname = ' + __dirname + ' ***');\nconsole.log('***        process.cwd() = ' + process.cwd() + ' ***');\nconsole.log('*** require.main.filename= ' + require.main.filename + ' ***');\nconsole.log('*** app end ***');\n\n    module.filename：开发期间，该行代码所在的文件。\n    __filename：始终等于 module.filename。\n    __dirname：开发期间，该行代码所在的目录。\n    process.cwd()：运行node的工作目录，可以使用  cd /d 修改工作目录。\n    require.main.filename：用node命令启动的module的filename, 如 node xxx，这里的filename就是这个xxx。\n\n    require()方法的坐标路径是：module.filename；fs.readFile()的坐标路径是：process.cwd()。\n```\n",
      "data": {
        "title": "node path",
        "date": "2021-01-27 10:06:19",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "node-path"
    },
    {
      "content": "https://juejin.cn/post/6844903612993241101\n## 防止内容被切分\n",
      "data": {
        "title": "html转PDF文件",
        "date": "2021-01-21 19:05:15",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "html-zhuan-pdf-wen-jian"
    },
    {
      "content": "```js\nwindow.open('url')\n```\n```js\n<a href='url' download='文件名'>点击下载PDF</a>\n```\n### 额外\n这种需求的解决方式就是将PDF文件的 MIME type 改为 `application/octet-stream` 并加入 `Content-Disposition:attachment header`，原本的 pdf 文件 MIME type 为 `application/pdf`，浏览器识别到这个 type 之后会自动在浏览器打开，所以说我们在这里修改 type 即可。\n\n修改的方法有两种，一种是在后端进行修改，上传文件或者返回文件的时候进行操作，但是绝大多数情况下文件都是存储到 cdn 服务器中的，后端也不方便对其进行操作，这个时候就需要前端来修改了。\n```js\n/**\n * @deprecated 下载文件\n * @param {string} url \n * @param {string} filename\n */\nhandleFileDownload = (url, filename) => {\n  // 创建 a 标签\n  let a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  a.click();\n}\n\n/**\n * @deprecated 处理 pdf url，使其不在浏览器打开\n * @param {string} url\n */\nhandlePdfLink = (url, filename) => {\n  fetch(url, {\n    method: 'get',\n    responseType: 'arraybuffer',\n  })\n    .then(function (res) {\n      if (res.status !== 200) {\n        return res.json()\n      }\n      return res.arrayBuffer()\n    })\n    .then((blobRes) => {\n    \t// 生成 Blob 对象，设置 type 等信息\n      const e = new Blob([blobRes], {\n        type: 'application/octet-stream',\n        'Content-Disposition':'attachment'\n      })\n      // 将 Blob 对象转为 url\n      const link = window.URL.createObjectURL(e)\n      handleFileDownload(link, filename)\n    }).catch(err => {\n      console.error(err)\n    })\n}\n```\n网友解决方案\n```js\n我的做法是直接在nginx里面配置，拦截掉所有.pdf后缀的路径\nproxy_hide_header 'Content-Type';\nadd_header Content-Type application/octet-stream;\n这样子 无需任何代码改动\n```\nhttps://www.cnblogs.com/Jacob98/p/directly-download-pdf.html",
      "data": {
        "title": "如何使 pdf 文件在浏览器里面直接下载而不是打开",
        "date": "2021-01-20 09:14:46",
        "tags": [
          "pdf"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ru-he-shi-pdf-wen-jian-zai-liu-lan-qi-li-mian-zhi-jie-xia-zai-er-bu-shi-da-kai"
    },
    {
      "content": "```js\n<template>\n          <el-table\n            border\n            size=\"mini\"\n            height=\"100%\"\n            :span-method=\"cellMerge\"\n            :data=\"tableData\"\n          >\n            <el-table-column\n              label=\"设备\"\n              align=\"center\"\n              prop=\"a\"\n            />\n            <el-table-column\n              label=\"参数\"\n              align=\"center\"\n              prop=\"b\"\n            />\n            <el-table-column\n              label=\"数值\"\n              align=\"num\"\n              prop=\"c\"\n            />\n          </el-table>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      tableData: [\n        { a: '2222', b: '1', c: '2' },\n        { a: '111', b: '1', c: '2' },\n        { a: '111', b: '2', c: '3' },\n        { a: '111', b: '2', c: '3' },\n        { a: '111', b: '2', c: '3' },\n        { a: '2222', b: '1', c: '2' },\n        { a: '2222', b: '1', c: '2' },\n        { a: '111', b: '2222', c: '3333' },\n        { a: '111', b: '2222', c: '3333' }\n      ],\n      spanArr: []\n    }\n  },\n  methods: {\n    // groupBy 数组\n    groupBy (data, params) {\n      const groups = {}\n      data.forEach(v => {\n        const group = JSON.stringify(v[params])\n        groups[group] = groups[group] || []\n        groups[group].push(v)\n      })\n      return Object.values(groups)\n    },\n    // 计算 数据合并 索引\n    getSpanArr (data, params) {\n      // 接收重构数组\n      let arr = []\n\n      // 设置索引\n      let pos = 0\n\n      // 控制合并的数组\n      this.spanArr = []\n\n      // arr 处理\n      this.groupBy(data, params).map(v => (arr = arr.concat(v)))\n      \n      // this.tableData = arr\n      arr.map(res => {\n        data.shift()\n        data.push(res)\n      })\n\n      // spanArr 处理\n      const redata = arr.map(v => v[params])\n      redata.reduce((old, cur, i) => {\n        if (i === 0) {\n          this.spanArr.push(1)\n          pos = 0\n        } else {\n          if (cur === old) {\n            this.spanArr[pos] += 1\n            this.spanArr.push(0)\n          } else {\n            this.spanArr.push(1)\n            pos = i\n          }\n        }\n        return cur\n      }, {})\n    },\n\n    // 合并 tableData 数据\n    cellMerge ({ row, column, rowIndex, columnIndex }) {\n      if (columnIndex === 0) {\n        const _row = this.spanArr[rowIndex]\n        const _col = _row > 0 ? 1 : 0\n        return {\n          rowspan: _row,\n          colspan: _col\n        }\n      }\n    }\n  },\n  created () {\n    this.getSpanArr(this.tableData, 'a')\n  }\n}\n</script>\n\n```",
      "data": {
        "title": "Vue+Element-UI 中 el-table 动态合并单元格 :span-method 方法",
        "date": "2021-01-18 17:26:02",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vueelement-ui-zhong-el-table-dong-tai-he-bing-dan-yuan-ge-span-method-fang-fa"
    },
    {
      "content": "```js\n/**\n *\n * author: jiabinbin\n * Email: 425605679@qq.com\n * Desc:\n * version: 1.0.0\n */\n\nimport permissionRoutes from './modules/permission-routes'\nimport NProgress from \"nprogress\";\nimport store from \"@/store\";\nimport router from \"@/router/index\";\n\n/**\n * 菜单数组转树\n * @param list\n * @returns {[]}\n */\nexport const listToTree = list => {\n  list.sort((a, b) => {\n    return a.sort - b.sort\n  })\n  const map = {}\n  let node\n  const tree = []\n\n  for (let i = 0; i < list.length; i++) {\n    map[list[i].name] = i;\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    node = list[i];\n    if (node.parent) {\n      const children = list[map[node.parent]].children || []\n      list[map[node.parent]].children = [...children, node]\n    } else {\n      tree.push(node)\n    }\n  }\n  return tree\n}\n\n/**\n * 跟据后端返回的权限路由 树 生成vue-router所需要的路由树\n * 注: component这里不加载。因为生成的路由树，除了菜单使用外, 还需要在vue-router中做为动态路由使用\n * @param menuList\n * @returns {*}\n */\nexport const generatorUserMenuForTree = (menuList) => {\n  const userRoutes = menuList.map(menu => {\n    const {parent, icon, name, children = [], path, hidden = false, title} = menu\n    const i18nTitle = parent ? `${parent}.${name}` : `${name}` // name不一定为中文，如果用到i18n，则可以跟据name去做\n    // key是唯一的，防止重复，所以拼上父级菜单\n    const key = parent ? `${parent}-${name}` : `${name}`\n    // todo: 如果后端返回的父级菜单的路径为不带'/'号，则需要拼上 '/', 子菜单不需要，因为vue-router会自动跟据路径拼\n    const currentMenu = {\n      path,\n      name,\n      hidden,\n      parent,\n      meta: {\n        key: key,\n        title,\n        i18nTitle,\n        icon\n      },\n      children: children.length === 0 ? [] : generatorUserMenuForTree(children)\n    }\n    if (children.length <= 0) {\n      delete currentMenu.children\n    }\n    return currentMenu\n  })\n  return userRoutes\n}\n\n/**\n * 跟据后端返回的权限路由 数组 生成vue-router所需要的路由树\n * @param menuList\n * @returns {*}\n */\nexport const generatorUserMenuForList = menuList => {\n  // 如果后端返回的是纯数组的菜单（即：没有转换成菜单树结构的，要先转化成树结构）\n  const tree = listToTree(menuList)\n  const routes = generatorUserMenuForTree(tree)\n  // 最后添加404页面\n  routes.push({\n    path: '/:pathMatch(.*)*',\n    hidden: true,\n    redirect: '/error/404'\n  })\n  return routes\n}\n\n/**\n * 为所有路由添加component视图\n * @param routes\n */\nexport const setUserRouteComponent = routes => {\n  routes.forEach(r => {\n    r.component = !r.parent ? permissionRoutes.Layout : permissionRoutes[r.name]\n    if (r.children && r.children.length > 0) {\n      setUserRouteComponent(r.children)\n    }\n  })\n}\n\n/**\n * 用户权限路由中是否包含当前访问路由的路径，如有则可以添加\n * @param routes\n * @param path\n * @returns {boolean}\n */\nexport const findRouteForUserRoutes = (routes, path) => {\n  let hasRoute = false\n  const routeArr = path.split('/')\n  const routePath = routeArr[routeArr.length - 1]\n  for (let i = 0; i < routes.length; i++) {\n    const { path, children = [] } = routes[i]\n    if (path === routePath) {\n      hasRoute = true\n    } else if (children.length > 0) {\n      hasRoute = findRouteForUserRoutes(children, routePath)\n    }\n    if (hasRoute) {\n      break\n    }\n  }\n  return hasRoute\n}\n\nconst setDocumentTitle = title => {\n  // 如有i18n在这里修改\n  document.title = `pear-admin-ant-${title}`\n}\n/**\n * 权限控制\n * @param to\n * @param from\n * @param next\n * @returns {Promise<void>}\n */\nexport const permissionController = async (to, from, next) => {\n  //配置路由加载动画效果\n  NProgress.start();\n  const { meta: { title = '' } } = to\n  setDocumentTitle(title)\n  // 取消未完成的http请求\n  await store.dispatch('app/execCancelToken')\n  //这里也可以验证权限\n  // 前往页面不是登陆，且没有登陆的情况，统一重定向到登陆\n  if (!to.fullPath.includes('login') && !localStorage.getItem('pear_admin_ant_token')) {\n    next({path: '/login'})\n  } else {\n    // 如果基本路由中不包含页面前往的路径\n    if (!router.getRoutes().map(it => it.path).includes(to.fullPath)) {\n      console.log('========== 开始加载用户权限菜单 ==========')\n      // 后端返回的为一维数组菜单列表，如果返回的是树结构的菜单用 'user/addUserRouteForTree'\n      await store.dispatch('user/addUserRouteForArray')\n      // 用户权限菜单保存在vuex中。vuex是不允许在mutations外部改变state中的属性。所以这里简单的深拷贝一份，用于改变component属性的值\n      const userRoutes = JSON.parse(JSON.stringify(store.getters.menu))\n      // 如果url被改变\n      const hasRoute = findRouteForUserRoutes(userRoutes, to.fullPath)\n      if (hasRoute) {\n        // 为解决刷新页面后页面不显示将用户的权限菜单缓存于LocalStorage。而存放于storage中必然要将数组字符串化，那么对应的() => import('@/views/xx/xx')\n        // 异步加载会失效，所以在使用真正添加路由时再生成component的值\n        setUserRouteComponent(userRoutes)\n        userRoutes.forEach(r => {\n          router.addRoute(r)\n        })\n        next(to.fullPath)\n      } else {\n        next('/error/404')\n      }\n    } else {\n      next()\n    }\n  }\n}\n```",
      "data": {
        "title": "vue3.0 permission.js",
        "date": "2020-12-30 13:13:35",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue30-permissionjs"
    },
    {
      "content": "```js\n/**\n * 格式化日期\n * @param {string | number | Date} value 指定日期\n * @param {string} format 格式化的规则\n * @example\n * ```js\n * formatDate();\n * formatDate(1603264465956);\n * formatDate(1603264465956, \"h:m:s\");\n * formatDate(1603264465956, \"Y年M月D日\");\n * ```\n */\nfunction formatDate(value = Date.now(), format = \"Y-M-D h:m:s\") {\n    const formatNumber = n => `0${n}`.slice(-2);\n    const date = new Date(value);\n    const formatList = [\"Y\", \"M\", \"D\", \"h\", \"m\", \"s\"];\n    const resultList = [];\n    resultList.push(date.getFullYear().toString());\n    resultList.push(formatNumber(date.getMonth() + 1));\n    resultList.push(formatNumber(date.getDate()));\n    resultList.push(formatNumber(date.getHours()));\n    resultList.push(formatNumber(date.getMinutes()));\n    resultList.push(formatNumber(date.getSeconds()));\n    for (let i = 0; i < resultList.length; i++) {\n        format = format.replace(formatList[i], resultList[i]);\n    }\n    return format;\n}\n\n\n/**\n * 获取指定日期时间戳\n * @param {number} time 毫秒数\n */\nexport function getDateFormat (time = Date.now()) {\n  if (!time) return ''\n  const date = new Date(time)\n  return `${date.toLocaleDateString()} ${date.toTimeString().slice(0, 8)}`\n}\n```",
      "data": {
        "title": "格式化日期",
        "date": "2020-12-28 14:48:49",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ge-shi-hua-ri-qi"
    },
    {
      "content": "```js\n/**\n * 数字运算（主要用于小数点精度问题）\n * @param {number} a 前面的值\n * @param {\"+\"|\"-\"|\"*\"|\"/\"} type 计算方式\n * @param {number} b 后面的值\n * @example \n * ```js\n * // 可链式调用\n * const res = computeNumber(1.3, \"-\", 1.2).next(\"+\", 1.5).next(\"*\", 2.3).next(\"/\", 0.2).result;\n * console.log(res);\n * ```\n */\nfunction computeNumber(a, type, b) {\n    /**\n     * 获取数字小数点的长度\n     * @param {number} n 数字\n     */\n    function getDecimalLength(n) {\n        const decimal = n.toString().split(\".\")[1];\n        return decimal ? decimal.length : 0;\n    }\n    /** 倍率 */\n    const power = Math.pow(10, Math.max(getDecimalLength(a), getDecimalLength(b)));\n    let result = 0;\n    \n    // 防止出现 `33.33333*100000 = 3333332.9999999995` && `33.33*10 = 333.29999999999995` 这类情况做的暴力处理\n    a = Math.round(a * power);\n    b = Math.round(b * power);\n\n    switch (type) {\n        case \"+\":\n            result = (a + b) / power;\n            break;\n        case \"-\":\n            result = (a - b) / power;\n            break;\n        case \"*\":\n            result = (a * b) / (power * power);\n            break;\n        case \"/\":\n            result = a  / b ;\n            break;\n    }\n    \n    return {\n        /** 计算结果 */\n        result,\n        /**\n         * 继续计算\n         * @param {\"+\"|\"-\"|\"*\"|\"/\"} nextType 继续计算方式\n         * @param {number} nextValue 继续计算的值\n         */\n        next(nextType, nextValue) {\n            return computeNumber(result, nextType, nextValue);\n        }\n    };\n}\n\n```",
      "data": {
        "title": "JavaScript小数精度计算",
        "date": "2020-12-28 14:47:32",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "javascript-xiao-shu-jing-du-ji-suan"
    },
    {
      "content": "```js\n// 这里我做的不是用 window 的滚动事件，而是用最外层的绑定触摸下拉事件去实现\n// 好处是我用在Vue这类单页应用的时候，组件销毁时不用去解绑 window 的 scroll 事件\n// 但是滑动到底部事件就必须要用 window 的 scroll 事件，这点需要注意\n\n/**\n * 下拉刷新组件\n * @param {object} option 配置\n * @param {HTMLElement} option.el 下拉元素（必选）\n * @param {number} option.distance 下拉距离[px]（可选）\n * @param {number} option.deviation 顶部往下偏移量[px]（可选）\n * @param {string} option.loadIcon 下拉中的 icon html（可选）\n */\nfunction dropDownRefresh(option) {\n    const doc = document;\n    /** 整体节点 */\n    const page = option.el;\n    /** 下拉距离 */\n    const distance = option.distance || 88;\n    /** 顶部往下偏移量 */\n    const deviation = option.deviation || 0;\n    /** 顶层节点 */\n    const topNode = doc.createElement(\"div\");\n    /** 下拉时遮罩 */\n    const maskNode = doc.createElement(\"div\");\n\n    topNode.innerHTML = `<div refresh-icon style=\"transition: .2s all;\"><svg style=\"transform: rotate(90deg); display: block;\" t=\"1570593064555\" viewBox=\"0 0 1575 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"26089\" width=\"48\" height=\"48\"><path d=\"M1013.76 0v339.968H484.115692V679.778462h529.644308v339.968l529.644308-485.612308v-48.600616L1013.76 0zM243.396923 679.857231h144.462769V339.968H243.396923V679.778462z m-240.797538 0h144.462769V339.968H2.599385V679.778462z\" fill=\"#000000\" fill-opacity=\".203\" p-id=\"26090\"></path></svg></div><div refresh-loading style=\"display: none; animation: refresh-loading 1s linear infinite;\">${option.loadIcon || '<p style=\"font-size: 15px; color: #666;\">loading...</p>'}</div>`;\n    topNode.style.cssText = `width: 100%; height: ${distance}px; position: fixed; top: ${-distance + deviation}px; left: 0; z-index: 10; display: flex; flex-wrap: wrap; align-items: center; justify-content: center; box-sizing: border-box; margin: 0; padding: 0;`;\n    maskNode.style.cssText = \"position: fixed; top: 0; left: 0; width: 100%; height: 100vh; box-sizing: border-box; margin: 0; padding: 0; background-color: rgba(0,0,0,0); z-index: 999;\";\n    page.parentNode.insertBefore(topNode, page);\n\n    /**\n     * 设置动画时间\n     * @param {number} n 秒数 \n     */\n    function setAnimation(n) {\n        page.style.transition = topNode.style.transition = n + \"s all\";\n    }\n\n    /**\n     * 设置滑动距离\n     * @param {number} n 滑动的距离（像素）\n     */\n    function setSlide(n) {\n        page.style.transform = topNode.style.transform = `translate3d(0px, ${n}px, 0px)`;\n    }\n    \n    /** 下拉提示 icon */\n    const icon = topNode.querySelector(\"[refresh-icon]\");\n    /** 下拉 loading 动画 */\n    const loading = topNode.querySelector(\"[refresh-loading]\");\n\n    return {\n        /**\n         * 监听开始刷新\n         * @param {Function} callback 下拉结束回调\n         * @param {(n: number) => void} rangeCallback 下拉状态回调\n         */\n        onRefresh(callback, rangeCallback = null) {\n            /** 顶部距离 */\n            let scrollTop = 0;\n            /** 开始距离 */\n            let startDistance = 0;\n            /** 结束距离 */\n            let endDistance = 0;\n            /** 最后移动的距离 */\n            let range = 0;\n\n            // 触摸开始\n            page.addEventListener(\"touchstart\", function (e) {\n                startDistance = e.touches[0].pageY;\n                scrollTop = 1;\n                setAnimation(0);\n            });\n\n            // 触摸移动\n            page.addEventListener(\"touchmove\", function (e) {\n                scrollTop = doc.documentElement.scrollTop === 0 ? doc.body.scrollTop : doc.documentElement.scrollTop;\n                // 没到达顶部就停止\n                if (scrollTop != 0) return;\n                endDistance = e.touches[0].pageY;\n                range = Math.floor(endDistance - startDistance);\n                // 判断如果是下滑才执行\n                if (range > 0) {\n                    // 阻止浏览自带的下拉效果\n                    e.preventDefault();\n                    // 物理回弹公式计算距离\n                    range = range - (range * 0.5);\n                    // 下拉时icon旋转\n                    if (range > distance) {\n                        icon.style.transform = \"rotate(180deg)\";\n                    } else {\n                        icon.style.transform = \"rotate(0deg)\";\n                    }\n                    setSlide(range);\n                    // 回调距离函数 如果有需要\n                    if (typeof rangeCallback === \"function\") rangeCallback(range);\n                }\n            });\n\n            // 触摸结束\n            page.addEventListener(\"touchend\", function () {\n                setAnimation(0.3);\n                // console.log(`移动的距离：${range}, 最大距离：${distance}`);\n                if (range > distance && range > 1 && scrollTop === 0) {\n                    setSlide(distance);\n                    doc.body.appendChild(maskNode);\n                    // 阻止往上滑动\n                    maskNode.ontouchmove = e => e.preventDefault();\n                    // 回调成功下拉到最大距离并松开函数\n                    if (typeof callback === \"function\") callback();\n                    icon.style.display = \"none\";\n                    loading.style.display = \"block\";\n                } else {\n                    setSlide(0);\n                }\n            });\n\n        },\n        /** 结束下拉 */\n        end() {\n            maskNode.parentNode.removeChild(maskNode);\n            setAnimation(0.3);\n            setSlide(0);\n            icon.style.display = \"block\";\n            loading.style.display = \"none\";\n        }\n    }\n}\n\n```\n```js\n(function () {\n    let items = '';\n    for (let i = 0; i < 10; i++) {\n        items += '<div class=\"item\"></div>';\n    }\n    document.querySelector('.page').innerHTML = items;\n\n    /** 旋转的圈圈 */\n    const icon = document.getElementById('loading-icon').innerHTML;\n\n    const drop = dropDownRefresh({\n        el: document.querySelector('.page'),\n        loadIcon: icon,\n        distance: 100\n    });\n\n    drop.onRefresh(() => {\n        setTimeout(() => {\n            drop.end();\n        }, 3000);\n    }, n => {\n        console.log('下拉的距离：', n);\n    });\n\n})();\n\n```",
      "data": {
        "title": "下拉刷新组件",
        "date": "2020-12-28 14:45:01",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "xia-la-shua-xin-zu-jian"
    },
    {
      "content": "```js\n/**\n * 懒加载\n * @description 可加载`<img>`、`<video>`、`<audio>`等一些引用资源路径的标签\n * @param {object} params 传参对象\n * @param {string?} params.lazyAttr 自定义加载的属性（可选）\n * @param {\"src\"|\"background\"} params.loadType 加载的类型（默认为`src`）\n * @param {string?} params.errorPath 加载失败时显示的资源路径，仅在`loadType`设置为`src`中可用（可选）\n */\nfunction lazyLoad(params) {\n    const attr = params.lazyAttr || \"lazy\";\n    const type = params.loadType || \"src\";\n\n    /** 更新整个文档的懒加载节点 */\n    function update() {\n        const els = document.querySelectorAll(`[${attr}]`);\n        for (let i = 0; i < els.length; i++) {\n            const el = els[i];\n            observer.observe(el);\n        }\n    }\n\n    /**\n     * 加载图片\n     * @param {HTMLImageElement} el 图片节点\n     */\n    function loadImage(el) {\n        const cache = el.src; // 缓存当前`src`加载失败时候用\n        el.src = el.getAttribute(attr);\n        el.onerror = function () {\n            el.src = params.errorPath || cache;\n        }\n    }\n\n    /**\n     * 加载单个节点\n     * @param {HTMLElement} el \n     */\n    function loadElement(el) {\n        switch (type) {\n            case \"src\":\n                loadImage(el);\n                break;\n            case \"background\":\n                el.style.backgroundImage = `url(${el.getAttribute(attr)})`;\n                break;\n        }\n        el.removeAttribute(attr);\n        observer.unobserve(el);\n    }\n\n    /** \n     * 监听器 \n     * [MDN说明](https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver)\n    */\n    const observer = new IntersectionObserver(function(entries) {\n        for (let i = 0; i < entries.length; i++) {\n            const item = entries[i];\n            if (item.isIntersecting) {\n                loadElement(item.target);\n            }\n        }\n    })\n\n    update();\n\n    return {\n        observer,\n        update\n    }\n}\n\n```",
      "data": {
        "title": "图片懒加载",
        "date": "2020-12-28 14:42:34",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "tu-pian-lan-jia-zai"
    },
    {
      "content": "```js\n/**\n * 轮播组件\n * @param {object} params 配置传参\n * @param {string} params.el 组件节点 class|id|<label>\n * @param {number} params.moveTime 过渡时间（毫秒）默认 300\n * @param {number} params.interval 自动播放间隔（毫秒）默认 3000\n * @param {boolean} params.loop 是否需要回路\n * @param {boolean} params.vertical 是否垂直滚动\n * @param {boolean} params.autoPaly 是否需要自动播放\n * @param {boolean} params.pagination 是否需要底部圆点\n * @param {(index: number) => void} params.slideCallback 滑动/切换结束回调\n * @author https://github.com/Hansen-hjs\n * @description \n * 移动端`swiper`组件，如果需要兼容`pc`自行修改对应的`touch`到`mouse`事件即可。现成效果预览：https://huangjingsheng.gitee.io/hjs/cv/demo/face/\n */\nfunction swiper(params) {\n    /**\n     * css class 命名列表\n     * @dec [\"滑动列表\",\"滑动item\",\"圆点容器\",\"底部圆点\",\"圆点高亮\"]\n     */\n    const classNames = [\".swiper_list\", \".swiper_item\", \".swiper_pagination\", \".swiper_dot\", \".swiper_dot_active\"];\n    /** 滑动结束函数 */\n    const slideEnd = params.slideCallback || function() {};\n    /**\n     * 组件节点\n     * @type {HTMLElement}\n     */\n    let node = null;\n    /**\n     * item列表容器\n     * @type {HTMLElement}\n     */\n    let nodeItem = null;\n    /**\n     * item节点列表\n     * @type {Array<HTMLElement>}\n     */\n    let nodeItems = [];\n    /**\n     * 圆点容器\n     * @type {HTMLElement}\n     */\n    let nodePagination = null;\n    /**\n     * 圆点节点列表\n     * @type {Array<HTMLElement>}\n     */\n    let nodePaginationItems = [];\n    /** 是否需要底部圆点 */\n    let pagination = false;\n    /** 是否需要回路 */\n    let isLoop = false;\n    /** 方向 `X => true` | `Y => false` */\n    let direction = false;\n    /** 是否需要自动播放 */\n    let autoPaly = false;\n    /** 自动播放间隔（毫秒）默认 3000 */\n    let interval = 3000;\n    /** 过渡时间（毫秒）默认 300 */\n    let moveTime = 300;\n\n    /** 设置动画 */\n    function startAnimation() {\n        nodeItem.style.transition = `${moveTime / 1000}s all`; \n    }\n\n    /** 关闭动画 */\n    function stopAnimation() {\n        nodeItem.style.transition = \"0s all\";\n    }\n\n    /**\n     * 属性样式滑动\n     * @param {number} n 移动的距离\n     */\n    function slideStyle(n) {\n        let x = 0, y = 0;\n        if (direction) {\n            y = n;\n        } else {\n            x = n;\n        }\n        nodeItem.style.transform = `translate3d(${x}px, ${y}px, 0px)`;\n    }\n\n    /**\n     * 事件开始\n     * @param {number} width 滚动容器的宽度\n     * @param {number} height 滚动容器的高度\n     */\n    function main(width, height) {\n        /**\n         * 动画帧\n         * @type {requestAnimationFrame}\n         */\n        const animation = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n        /** 触摸开始时间 */\n        let startTime = 0;\n        /** 触摸结束时间 */\n        let endTime = 0;\n        /** 开始的距离 */\n        let startDistance = 0;\n        /** 结束的距离 */\n        let endDistance = 0;\n        /** 结束距离状态 */\n        let endState = 0;\n        /** 移动的距离 */\n        let moveDistance = 0;\n        /** 圆点位置 && 当前 item 索引 */\n        let index = 0;\n        /** 动画帧计数 */\n        let count = 0;\n        /** loop 帧计数 */\n        let loopCount = 0;\n        /** 移动范围 */\n        let range = direction ? height : width;\n\n        /** 获取拖动距离 */\n        function getDragDistance() {\n            /** 拖动距离 */\n            let dragDistance = 0;\n            // 默认这个公式\n            dragDistance = moveDistance + (endDistance - startDistance);\n            // 判断最大正负值\n            if ((endDistance - startDistance) >= range) {\n                dragDistance = moveDistance + range;\n            } else if ((endDistance - startDistance) <= -range) {\n                dragDistance = moveDistance - range;\n            }\n            // 没有 loop 的时候惯性拖拽\n            if (!isLoop) {\n                if ((endDistance - startDistance) > 0 && index === 0) {\n                    // console.log(\"到达最初\");\n                    dragDistance = moveDistance + ((endDistance - startDistance) - ((endDistance - startDistance) * 0.6));\n                } else if ((endDistance - startDistance) < 0 && index === nodeItems.length - 1) {\n                    // console.log(\"到达最后\");\n                    dragDistance = moveDistance + ((endDistance - startDistance) - ((endDistance - startDistance) * 0.6));\n                }\n            }\n            return dragDistance;\n        }\n\n        /**\n         * 判断触摸处理函数 \n         * @param {number} slideDistance 滑动的距离\n         */\n        function judgeTouch(slideDistance) {\n            //\t这里我设置了200毫秒的有效拖拽间隔\n            if ((endTime - startTime) < 200) return true;\n            // 这里判断方向（正值和负值）\n            if (slideDistance < 0) {\n                if ((endDistance - startDistance) < (slideDistance / 2)) return true;\n                return false;\n            } else {\n                if ((endDistance - startDistance) > (slideDistance / 2)) return true;\n                return false;\n            }\n        }\n\n        /** 返回原来位置 */\n        function backLocation() {\n            startAnimation();\n            slideStyle(moveDistance);\n        }\n\n        /**\n         * 滑动\n         * @param {number} slideDistance 滑动的距离\n         */\n        function slideMove(slideDistance) {\n            startAnimation();\n            slideStyle(slideDistance);\n            loopCount = 0;\n            // 判断 loop 时回到第一张或最后一张\n            if (isLoop && index < 0) {\n                // 我这里是想让滑块过渡完之后再重置位置所以加的延迟 (之前用setTimeout，快速滑动有问题，然后换成 requestAnimationFrame解决了这类问题)\n                function loopMoveMin() {\n                    loopCount += 1;\n                    if (loopCount < moveTime / 1000 * 60) return animation(loopMoveMin);\n                    stopAnimation();\n                    slideStyle(range * -(nodeItems.length - 3));\n                    // 重置一下位置\n                    moveDistance = range * -(nodeItems.length - 3);\n                }\n                loopMoveMin();\n                index = nodeItems.length - 3;\n            } else if (isLoop && index > nodeItems.length - 3) {\n                function loopMoveMax() {\n                    loopCount += 1;\n                    if (loopCount < moveTime / 1000 * 60) return animation(loopMoveMax);\n                    stopAnimation();\n                    slideStyle(0);\n                    moveDistance = 0;\n                }\n                loopMoveMax();\n                index = 0;\n            }\n            // console.log(`第${ index+1 }张`);\t// 这里可以做滑动结束回调\n            if (pagination) {\n                nodePagination.querySelector(classNames[4]).className = classNames[3].slice(1);\n                nodePaginationItems[index].classList.add(classNames[4].slice(1));\n            }\n        }\n\n        /** 判断移动 */\n        function judgeMove() {\n            // 判断是否需要执行过渡\n            if (endDistance < startDistance) {\n                // 往上滑动 or 向左滑动\n                if (judgeTouch(-range)) {\n                    // 判断有loop的时候不需要执行下面的事件\n                    if (!isLoop && moveDistance === (-(nodeItems.length - 1) * range)) return backLocation();\n                    index += 1;\n                    slideMove(moveDistance - range);\n                    moveDistance -= range;\n                    slideEnd(index);\n                } else {\n                    backLocation();\n                }\n            } else {\n                // 往下滑动 or 向右滑动\n                if (judgeTouch(range)) {\n                    if (!isLoop && moveDistance === 0) return backLocation();\n                    index -= 1;\n                    slideMove(moveDistance + range);\n                    moveDistance += range;\n                    slideEnd(index)\n                } else {\n                    backLocation();\n                }\n            }\n        }\n\n        /** 自动播放移动 */\n        function autoMove() {\n            // 这里判断 loop 的自动播放\n            if (isLoop) {\n                index += 1;\n                slideMove(moveDistance - range);\n                moveDistance -= range;\n            } else {\n                if (index >= nodeItems.length - 1) {\n                    index = 0;\n                    slideMove(0);\n                    moveDistance = 0;\n                } else {\n                    index += 1;\n                    slideMove(moveDistance - range);\n                    moveDistance -= range;\n                }\n            }\n            slideEnd(index);\n        }\n\n        /** 开始自动播放 */\n        function startAuto() {\n            count += 1;\n            if (count < interval / 1000 * 60) return animation(startAuto);\n            count = 0;\n            autoMove();\n            startAuto();\n        }\n\n        // 判断是否需要开启自动播放\n        if (autoPaly && nodeItems.length > 1) startAuto();\n\n        // 开始触摸\n        nodeItem.addEventListener(\"touchstart\", ev => {\n            startTime = Date.now();\n            count = 0;\n            loopCount = moveTime / 1000 * 60;\n            stopAnimation();\n            startDistance = direction ? ev.touches[0].clientY : ev.touches[0].clientX;\n        });\n\n        // 触摸移动\n        nodeItem.addEventListener(\"touchmove\", ev => {\n            ev.preventDefault();\n            count = 0;\n            endDistance = direction ? ev.touches[0].clientY : ev.touches[0].clientX;\n            slideStyle(getDragDistance());\n        });\n\n        // 触摸离开\n        nodeItem.addEventListener(\"touchend\", () => {\n            endTime = Date.now();\n            // 判断是否点击\n            if (endState !== endDistance) {\n                judgeMove();\n            } else {\n                backLocation();\n            }\n            // 更新位置 \n            endState = endDistance;\n            // 重新打开自动播\n            count = 0;\n        });\n    }\n\n    /**\n     * 输出回路：如果要回路的话前后增加元素\n     * @param {number} width 滚动容器的宽度\n     * @param {number} height 滚动容器的高度\n     */\n    function outputLoop(width, height) {\n        const first = nodeItems[0].cloneNode(true), last = nodeItems[nodeItems.length - 1].cloneNode(true);\n        nodeItem.insertBefore(last, nodeItems[0]);\n        nodeItem.appendChild(first);\n        nodeItems.unshift(last);\n        nodeItems.push(first);\n        if (direction) {\n            nodeItem.style.top = `${-height}px`;\n        } else {\n            nodeItem.style.left = `${-width}px`;\n        }\n    }\n\n    /**\n     * 输出动态布局\n     * @param {number} width 滚动容器的宽度\n     * @param {number} height 滚动容器的高度\n     */\n    function outputLayout(width, height) {\n        if (direction) {\n            for (let i = 0; i < nodeItems.length; i++) {\n                nodeItems[i].style.height = `${height}px`;\n            }\n        } else {\n            nodeItem.style.width = `${width * nodeItems.length}px`;\n            for (let i = 0; i < nodeItems.length; i++) {\n                nodeItems[i].style.width = `${width}px`;\n            }\n        }\n    }\n\n    /** 输出底部圆点 */\n    function outputPagination() {\n        let paginations = \"\";\n        nodePagination = node.querySelector(classNames[2]);\n        // 如果没有找到对应节点则创建一个\n        if (!nodePagination) {\n            nodePagination = document.createElement(\"div\");\n            nodePagination.className = classNames[2].slice(1);\n            node.appendChild(nodePagination);\n        }\n        for (let i = 0; i < nodeItems.length; i++) {\n            paginations += `<div class=\"${classNames[3].slice(1)}\"></div>`;\n        }\n        nodePagination.innerHTML = paginations;\n        nodePaginationItems = [...nodePagination.querySelectorAll(classNames[3])];\n        nodePagination.querySelector(classNames[3]).classList.add(classNames[4].slice(1));\n    }\n\n    /** 初始化动态布局 */\n    function initLayout() {\n        node = document.querySelector(params.el);\n        if (!node) return console.warn(\"没有可执行的节点！\");\n        nodeItem = node.querySelector(classNames[0]);\n        if (!nodeItem) return console.warn(`缺少\"${classNames[0]}\"节点！`);\n        nodeItems = [...node.querySelectorAll(classNames[1])];\n        if (nodeItems.length == 0) return console.warn(\"滑动节点个数必须大于0！\");\n        const moveWidth = node.offsetWidth, moveHeight = node.offsetHeight;\n        if (pagination) outputPagination();\n        if (isLoop) outputLoop(moveWidth, moveHeight);\n        outputLayout(moveWidth, moveHeight);\n        main(moveWidth, moveHeight);\n    }\n\n    /** 初始化参数 */\n    function initParams() {\n        if (typeof params !== \"object\") return console.warn(\"传参有误\");\n        pagination = params.pagination || false;\n        direction = params.vertical || false;\n        autoPaly = params.autoPaly || false;\n        isLoop = params.loop || false;\n        moveTime = params.moveTime || 300;\n        interval = params.interval || 3000;\n        initLayout();\n    }\n    initParams();\n}\n\n```",
      "data": {
        "title": "swiper轮播图组件",
        "date": "2020-12-28 14:40:46",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "swiper-lun-bo-tu-zu-jian"
    },
    {
      "content": "## v-action:edit\n```js\n           customRender: (text, record) => {\n             const directives = [{ name: 'action', value: null, arg: 'edit' }]\n             return (\n               <router-link {...{ directives }} to={{ name: 'operation_news_edit', params: { id: record.id } }}>\n                 {text}\n               </router-link>\n             )\n           }\n```\n```js\nconst directives = [\n  { name: 'my-directive', value: 123, modifiers: { stop: true },arg: 'edit' }\n]\nreturn <div {...{ directives }}/>\n```",
      "data": {
        "title": "vue jsx directives 指令",
        "date": "2020-12-22 14:20:13",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-jsx-directives-zhi-ling"
    },
    {
      "content": "```\nexport default {\n  bind (el, binding, vNode) {\n    const dialogHeaderEl = el.querySelector('.el-dialog__header')\n    const dragDom = el.querySelector('.el-dialog')\n    dialogHeaderEl.style.cssText += ';cursor:move;'\n    dragDom.style.cssText += ';top:0px;'\n\n    // 获取原有属性 ie dom元素.currentStyle 火狐谷歌 window.getComputedStyle(dom元素, null);\n    const getStyle = (function () {\n      if (window.document.currentStyle) {\n        return (dom, attr) => dom.currentStyle[attr]\n      } else {\n        return (dom, attr) => getComputedStyle(dom, false)[attr]\n      }\n    })()\n\n    dialogHeaderEl.onmousedown = (e) => {\n      // 鼠标按下，计算当前元素距离可视区的距离\n      const disX = e.clientX - dialogHeaderEl.offsetLeft\n      const disY = e.clientY - dialogHeaderEl.offsetTop\n\n      const dragDomWidth = dragDom.offsetWidth\n      const dragDomHeight = dragDom.offsetHeight\n\n      const screenWidth = document.body.clientWidth\n      const screenHeight = document.body.clientHeight\n\n      const minDragDomLeft = dragDom.offsetLeft\n      const maxDragDomLeft = screenWidth - dragDom.offsetLeft - dragDomWidth\n\n      const minDragDomTop = dragDom.offsetTop\n      const maxDragDomTop = screenHeight - dragDom.offsetTop - dragDomHeight\n\n      // 获取到的值带px 正则匹配替换\n      let styL = getStyle(dragDom, 'left')\n      let styT = getStyle(dragDom, 'top')\n\n      if (styL.includes('%')) {\n        styL = +document.body.clientWidth * (+styL.replace(/\\%/g, '') / 100)\n        styT = +document.body.clientHeight * (+styT.replace(/\\%/g, '') / 100)\n      } else {\n        styL = +styL.replace(/\\px/g, '')\n        styT = +styT.replace(/\\px/g, '')\n      }\n\n      document.onmousemove = function (e) {\n        // 通过事件委托，计算移动的距离\n        let left = e.clientX - disX\n        let top = e.clientY - disY\n\n        // 边界处理\n        if (-(left) > minDragDomLeft) {\n          left = -minDragDomLeft\n        } else if (left > maxDragDomLeft) {\n          left = maxDragDomLeft\n        }\n\n        if (-(top) > minDragDomTop) {\n          top = -minDragDomTop\n        } else if (top > maxDragDomTop) {\n          top = maxDragDomTop\n        }\n\n        // 移动当前元素\n        dragDom.style.cssText += `;left:${left + styL}px;top:${top + styT}px;`\n\n        // emit onDrag event\n        vNode.child.$emit('dragDialog')\n      }\n\n      document.onmouseup = function (e) {\n        document.onmousemove = null\n        document.onmouseup = null\n      }\n    }\n  }\n}\n\n```",
      "data": {
        "title": "Vue.directive.dragDialog",
        "date": "2020-12-17 09:58:02",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vuedirectivedragdialog"
    },
    {
      "content": "```js\nconst list = [{ \"menuId\" : \"5f50c5fb8f0d74536bbfb7a4\", \"menuName\" : \"菜单管理\", \"parentMenuId\" : null },\n{ \"menuId\" : \"5f524416ff216c2cbc554907\", \"menuName\" : \"频道管理\", \"parentMenuId\" : \"5f50c5fb8f0d74536bbfb7a4\" },\n{ \"menuId\" : \"5f576677d9588f3d78fbdb74\", \"menuName\" : \"分类管理\", \"parentMenuId\" : \"5f524416ff216c2cbc554907\" },\n{ \"menuId\" : \"5f588b22499cd2538411b98a\", \"menuName\" : \"发布管理\", \"parentMenuId\" : \"5f50c5fb8f0d74536bbfb7a4\" },\n{ \"menuId\" : \"5f588b85499cd2538411b98b\", \"menuName\" : \"权限管理\", \"parentMenuId\" : \"5f50c5fb8f0d74536bbfb7a4\" },\n{ \"menuId\" : \"5f588f8358bc0d3e647403a1\", \"menuName\" : \"菜单管理\", \"parentMenuId\" : \"5f588b85499cd2538411b98b\" }\n...\n]\n```\n## list2tree1\n递归遍历children\n```js\nconst list = [...]\n// 递归 161202 次 5ms左右时间\nconst list2tree1 = (list, parentMenuId) => {\n    return list.filter(item => {\n        if (item.parentMenuId === parentMenuId) {\n            item.children = list2tree1(list, item.menuId)\n            return true\n        }\n        return false\n    })\n}\nlist2tree1(list, null)\n```\n## list2tree2\n因为方法1是查询的children，所以每次必须全部遍历。\n我们换个思路，查询每个节点的parent，查到paret之后，内部循环就可以截止了。（使用find方法）\n```js\nconst list = [...]\n// 68976 次 3.6ms左右\nconst list2tree2 = (list, parentMenuId) => {\n    return list.filter(item => {\n        if (item.parentMenuId !== parentMenuId) {\n            let parent = list.find(parent => parent.menuId === item.parentMenuId)\n            if (!parent.children) parent.children = []\n            parent.children.push(item)\n            return false\n        }\n        return true\n    })\n}\nlist2tree2(list, null)\n```\n\n## list2tree3\n在方法2的基础上，将每次find的parentNode缓存起来，减少相同parent的查询次数\n\n```js\nconst list = [...]\n// 15337 次 1.8ms左右 cache parent\nconst list2tree3 = (list, parentMenuId) => {\n    let parentObj = {}\n    return list.filter(item => {\n        if (item.parentMenuId !== parentMenuId) {\n            if (!parentObj[item.parentMenuId]) {\n                parentObj[item.parentMenuId] = list.find(parent => parent.menuId === item.parentMenuId)\n                parentObj[item.parentMenuId].children = []\n            }\n            parentObj[item.parentMenuId].children.push(item)\n            return false\n        }\n        return true\n    })\n}\nlist2tree3(list, null)\n```\n##list2tree4\n遍历tree之前，先遍历一遍数组，将数据缓存到object中。\n\n二次遍历，直接使用object中的缓存\n```js\nconst list = [...]\n// 802 次 0.2ms左右\nconst list2tree4 = (list, parentMenuId) => {\n    let menuObj = {}\n    list.forEach(item => {\n        item.children = []\n        menuObj[item.menuId] = item\n    })\n    return list.filter(item => {\n        if (item.parentMenuId !== parentMenuId) {\n            menuObj[item.parentMenuId].children.push(item)\n            return false\n        }\n        return true\n    })\n}\n```",
      "data": {
        "title": "js将list转化为tree格式的 4 种写法",
        "date": "2020-11-27 10:18:11",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-jiang-list-zhuan-hua-wei-tree-ge-shi-de-4-chong-xie-fa"
    },
    {
      "content": "#  防抖\n### 在当前点击完成后，我们等wait这么长的时间，看是否还会触发第二次，如果没有触发第二次，属于非频繁操作，我们直接执行想要执行的函数func：如果触发了第二次，则以前的不算了，从当前这次再开始等待...\n```js\n/*\n      防抖:\n        @params:\n          func[function]:最后要触发执行的函数\n          wait[number]:频繁设定的界限\n          immediate[boolean]:默认多次操作，我们识别的是最后一次，但是immediate=true，让其识别第一次\n        @return\n          可以被调用执行的函数\n */\nfunction debounce(func,wait = 300,immediate = false){\n      let timer = null;\n      return function anonymous(...params){\n        let now = immediate && !timer;\n\n        //每次点击都把之前设置的定时器清除掉\n        clearInterval(timer)\n        //重新设置一个新的定时器监听wait事件内是否触发第二次\n        timer = setTimeout(() => {\n          timer = null;//垃圾回收机制\n          //wait这么久的等待中，没有触发第二次\n          !immediate ? func.call(this,...params) : null;\n        }, wait);\n\n        //如果是立即执行\n        now ? func.call(this,...params) : null;\n      }\n}\n```\n## 节流\n### 函数节流：在一段频繁操作中，可以触发多次，但是触发的频率由自己指定\n```js\n/*\n      @params:\n          func[function]:最后要触发执行的函数\n          wait[number]:触发的频率\n        @return\n          可以被调用执行的函数\n*/\nfunction throttle(func,wait = 300){\n      let timer = null,\n          previous = 0;//记录上一次操作时间\n      return function anonymouse(...params){\n        let now = new Date(),//记录当前时间\n            remaining = wait - (now - previous);//记录还差多久达到我们一次触发的频率\n        if(remaining <= 0){\n          //两次操作的间隔时间已经超过wait了\n          window.clearInterval(timer);\n          timer = null;\n          previous = now;\n          func.call(this,...params);\n        }else if(!timer){\n          //两次操作的间隔时间还不符合触发的频率\n          timer = setTimeout(() => {\n            timer = null;\n            previous = new Date();\n            func.call(this,...params);\n          }, remaining);\n        }\n      }\n}\n\n```",
      "data": {
        "title": "防抖-节流",
        "date": "2020-11-17 19:02:33",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "fang-dou-jie-liu"
    },
    {
      "content": "```js\nbeforeCreate  ->inject -> Props ->  Methods ->  Data -> Computed -> Watch ->provide-> created\n```\n```js\n      console.log('🚀  this', this)\n      Object.assign(this.$data, this.$options.data.call(this))\n      console.log('🚀  this', this)\n```",
      "data": {
        "title": "vue组件 props、data 初始化的执行顺序",
        "date": "2020-11-16 13:33:17",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-zu-jian-propsdata-chu-shi-hua-de-zhi-xing-shun-xu"
    },
    {
      "content": "```js\n<template>\n  <div class=\"tinymce-editor\">\n    <Editor\n      v-model=\"myValue\"\n      :init=\"init\"\n      :disabled=\"disabled\"\n      @onClick=\"onClick\">\n    </Editor>\n  </div>\n</template>\n\n<script>\nimport tinymce from 'tinymce/tinymce'\nimport Editor from '@tinymce/tinymce-vue'\nimport 'tinymce/themes/silver'\n// 更多插件参考：https://www.tiny.cloud/docs/plugins/\nimport 'tinymce/plugins/lists'\nimport 'tinymce/plugins/image'\nimport 'tinymce/plugins/media'\nimport 'tinymce/plugins/table'\nimport 'tinymce/plugins/wordcount'\nimport 'tinymce/plugins/code'\nimport 'tinymce/plugins/paste'\nimport 'tinymce/plugins/hr'\nimport 'tinymce/plugins/emoticons'\n\nexport default {\n  name: 'Tinymce',\n  components: {\n    Editor\n  },\n  props: {\n    // 传入一个value，使组件支持v-model绑定\n    value: {\n      type: String,\n      default: ''\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 统一配置cdn前缀，如果不用cdn就把skins包整个复制到public/tinymce下\n    cdnOrigin: {\n      type: String,\n      default: 'https://cdn.jsdelivr.net/npm/tinymce@5.2.0'\n    },\n    plugins: {\n      type: [String, Array],\n      default: 'lists image media table wordcount code paste hr emoticons'\n    },\n    toolbar: {\n      type: [String, Array],\n      default: 'undo redo | forecolor backcolor  | bold italic | alignleft aligncenter alignright alignjustify  | bullist numlist outdent indent hr | lists image media table code emoticons paste| removeformat'\n    }\n  },\n  data () {\n    return {\n      // 初始化配置\n      init: {\n        language_url: 'https://cdn.jsdelivr.net/npm/tinymce-langs/langs/zh_CN.js', // 语言包的路径\n        language: 'zh_CN', // 语言\n        skin_url: `${this.cdnOrigin}/skins/ui/oxide`, // skin路径\n        content_css: `${this.cdnOrigin}/skins/ui/oxide/content.css`,\n        height: 300, // 编辑器高度\n        plugins: this.plugins,\n        toolbar: this.toolbar,\n        branding: false, // 是否禁用“Powered by TinyMCE”\n        menubar: false, // 顶部菜单栏显示\n        emoticons_database_url: `${this.cdnOrigin}/plugins/emoticons/js/emojis.js`,\n        // 此处为图片上传处理函数，这个直接用了base64的图片形式上传图片，\n        // 如需ajax上传可参考https://www.tiny.cloud/docs/configure/file-image-upload/#images_upload_handler\n        images_upload_handler: (blobInfo, success, failure) => {\n          const img = 'data:image/jpeg;base64,' + blobInfo.base64()\n          success(img)\n        }\n      },\n      myValue: this.value\n    }\n  },\n  mounted () {\n    tinymce.init({})\n  },\n  methods: {\n    // 添加相关的事件，可用的事件参照文档=> https://github.com/tinymce/tinymce-vue => All available events\n    // 需要什么事件可以自己增加\n    onClick (e) {\n      this.$emit('onClick', e, tinymce)\n    },\n    // 可以添加一些自己的自定义事件，如清空内容\n    clear () {\n      this.myValue = ''\n    }\n  },\n  watch: {\n    value (newValue) {\n      this.myValue = newValue\n    },\n    myValue (newValue) {\n      this.$emit('input', newValue)\n    }\n  }\n}\n\n</script>\n```",
      "data": {
        "title": "tinymce.vue",
        "date": "2020-11-09 09:08:56",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "tinymcevue"
    },
    {
      "content": "```js\n<template>\n  <div style=\"width:100%\">\n    <editor v-model=\"myValue\" :init=\"init\" :disabled=\"disabled\" @onClick=\"onClick\"></editor>\n  </div>\n</template>\n<script>\nimport tinymce from \"tinymce/tinymce\";\nimport Editor from \"@tinymce/tinymce-vue\";\nimport \"tinymce/themes/silver\";\n// 编辑器插件plugins\n// 更多插件参考：https://www.tiny.cloud/docs/plugins/\n//--------------------插入引入--------------------\nimport \"tinymce/plugins/image\"; // 插入上传图片插件\nimport \"tinymce/plugins/media\"; // 插入视频插件\nimport \"tinymce/plugins/table\"; // 插入表格插件\nimport \"tinymce/plugins/link\"; //超链接插件\nimport \"tinymce/plugins/code\"; //代码块插件\nimport \"tinymce/plugins/lists\"; // 列表插件\nimport \"tinymce/plugins/contextmenu\"; //右键菜单插件\nimport \"tinymce/plugins/wordcount\"; // 字数统计插件\nimport \"tinymce/plugins/colorpicker\"; //选择颜色插件\nimport \"tinymce/plugins/textcolor\"; //文本颜色插件\nimport \"tinymce/plugins/fullscreen\"; //全屏\nimport \"tinymce/plugins/help\";\nimport \"tinymce/plugins/charmap\";\nimport \"tinymce/plugins/paste\";\nimport \"tinymce/plugins/print\";\nimport \"tinymce/plugins/preview\";\nimport \"tinymce/plugins/hr\";\nimport \"tinymce/plugins/anchor\";\nimport \"tinymce/plugins/pagebreak\";\nimport \"tinymce/plugins/spellchecker\";\nimport \"tinymce/plugins/searchreplace\";\nimport \"tinymce/plugins/visualblocks\";\nimport \"tinymce/plugins/visualchars\";\nimport \"tinymce/plugins/insertdatetime\";\nimport \"tinymce/plugins/nonbreaking\";\nimport \"tinymce/plugins/autosave\";\nimport \"tinymce/plugins/fullpage\";\nimport \"tinymce/plugins/toc\";\n//必须引用\nimport \"tinymce/icons/default/icons.min.js\";\nimport \"@/assets/langs/zh_CN.js\";\nimport \"tinymce/skins/ui/oxide/skin.css\";\nexport default {\n  components: {\n    Editor,\n  },\n  props: {\n    value: {\n      type: String,\n      default: \"\",\n    },\n    // 基本路径，默认为空根目录，如果你的项目发布后的地址为目录形式，\n    // 即abc.com/tinymce，baseUrl需要配置成tinymce，不然发布后资源会找不到\n    baseUrl: {\n      type: String,\n      default: \"\",\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      myValue: this.value,\n      web:'http://api.euiadmin.com',//网站链接，与返回文件地址拼接形成完整地址\n      url: \"/upload/image\",//上传api\n      init: {\n        selector: \"Editor\", //选择HTML元素\n        language_url: \"@/assets/langs/zh_CN.js\", //导入语言文件\n        language: \"zh_CN\", //语言设置\n        //disabled:true, //禁用\n        skin_url: \"/tinymce/skins/ui/oxide\", //主题样式\n        height: 300, //高度\n        menubar: false, // 隐藏最上方menu菜单\n        // toolbar: true,//false禁用工具栏（隐藏工具栏）\n        browser_spellcheck: true, // 拼写检查\n        branding: false, // 去水印\n        statusbar: false, // 隐藏编辑器底部的状态栏\n        elementpath: false, //禁用下角的当前标签路径\n        paste_data_images: true, // 允许粘贴图像\n        plugins:\n          \"lists image media table wordcount code fullscreen help  toc fullpage autosave nonbreaking insertdatetime visualchars visualblocks searchreplace spellchecker pagebreak link charmap paste print preview hr anchor\",\n\n        toolbar: [\n          \"newdocument undo redo | formatselect visualaid|cut copy paste selectall| bold italic underline strikethrough |codeformat blockformats| superscript subscript  | forecolor backcolor | alignleft aligncenter alignright alignjustify | outdent indent |  removeformat \",\n          \"code  bullist numlist | lists image media table link |fullscreen help toc fullpage restoredraft nonbreaking insertdatetime visualchars visualblocks searchreplace spellchecker pagebreak anchor charmap  pastetext print preview hr\",\n        ],\n        // 此处为图片上传处理函数，这个直接用了base64的图片形式上传图片，\n        // 如需ajax上传可参考https://www.tiny.cloud/docs/configure/file-image-upload/#images_upload_handler\n        images_upload_handler: (blobInfo, success, failure) => {\n          console.log(blobInfo + success + failure);\n            let formData = new FormData();\n            // 服务端接收文件的参数名，文件数据，文件名\n            formData.append(\"file\", blobInfo.blob(), blobInfo.filename());\n            this.$axios({\n              method: \"POST\",\n              url: this.url,// 这里是你的上传地址\n              data: formData\n            })\n              .then(res => {\n                // 这里返回的是你图片的地址\n                // console.log(this.web+res.data)\n                success(this.web+res.data);\n              })\n              .catch(() => {\n                failure(\"上传失败\");\n              });\n        },\n      },\n    };\n  },\n  mounted() {\n    tinymce.init({});\n  },\n  methods: {\n    // 添加相关的事件，可用的事件参照文档=> https://github.com/tinymce/tinymce-vue => All available events\n    // 需要什么事件可以自己增加\n    onClick(e) {\n      this.$emit(\"onClick\", e, tinymce);\n    },\n    // 可以添加一些自己的自定义事件，如清空内容\n    clear() {\n      this.myValue = \"\";\n    },\n  },\n  watch: {\n    value(newValue) {\n      this.myValue = newValue;\n    },\n    myValue(newValue) {\n      this.$emit(\"input\", newValue);\n    },\n  },\n};\n</script>\n```",
      "data": {
        "title": "tinymceEditor.vue",
        "date": "2020-11-08 17:02:39",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "tinymceeditorvue"
    },
    {
      "content": "```css\n选中前5个 ------------------------------ :nth-child(-n+5)\n选中第5个元素开始的后面的孩子 ----------- :nth-child(n+5)\n选中第 5-10 个孩子 ---------------------- :nth-child(n+5):nth-child(-n+9)\n\n```",
      "data": {
        "title": "伪类 :nth-child",
        "date": "2020-10-26 10:09:12",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "wei-lei-nth-child"
    },
    {
      "content": "①touchstart：当手指触碰到屏幕的时候触发\n②touchmove：当手指在屏幕上滑动的时候触发\n③touchend：当手指离开屏幕的时候时候触发\n④touchcancel事件：当系统停止跟踪触摸的时候触发(这个事件很少会用，一般不做深入研究)。 电话接入或者弹出信息等其他事件切入\nevent：\n\ntouches：表示当前跟踪的触摸操作的touch对象的数组。\ntargetTouches：特定于事件目标的Touch对象的数组。\nchangeTouches：表示自上次触摸以来发生了什么改变的Touch对象的数组。\n\n每个touch对象包含的属性\n\nclientX：触摸目标在视口中的x坐标。\nclientY：触摸目标在视口中的y坐标。\nidentifier：标识触摸的唯一ID。\npageX：触摸目标在页面中的x坐标。\npageY：触摸目标在页面中的y坐标。\nscreenX：触摸目标在屏幕中的x坐标。\nscreenY：触摸目标在屏幕中的y坐标。\ntarget：触目的DOM节点目标。\n\n作者：信心\n链接：https://juejin.im/post/6844903673009553416\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。",
      "data": {
        "title": "移动端触摸事件",
        "date": "2020-10-16 09:04:59",
        "tags": [],
        "published": false,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "yi-dong-duan-hong-mo-shi-jian"
    },
    {
      "content": "```js\n//写一个重置路由的方法，切换用户后，或者退出时清除动态加载的路由\nexport function resetRouter() {\n    const newRouter = createRouter()\n    router.matcher = newRouter.matcher // 新路由实例matcer，赋值给旧路由实例的matcher，（相当于replaceRouter）\n}\n```\n```\nimport Vue from 'vue'\nimport Router from 'vue-router'\nVue.use(Router)\nconst createRouter = () => new Router({\n mode: 'history',\n routes: []\n})\nconst router = createRouter()\nexport function resetRouter () {\n const newRouter = createRouter()\n router.matcher = newRouter.matcher\n}\nexport default router\n```\n```js\nRouter.prototype.resetRouter=function resetRouter(routes) {\nlet newRouter = new Router({\nroutes: routes\n})\nthis.matcher = newRouter.matcher ;\n}\n\n//把自己定义的方法挂载在 router下。 通过传参 给路由赋值。\n\nthis.$router.resetRouter(routes);\n```\n```js\nconst createRouter = () => new VueRouter({\n    linkActiveClass: 'active',\n    mode: 'hash',\n    base: './',\n    routes: constantRouterMap\n});\nconst router = createRouter()\n \n \n//在addRoutes之前重置matcher\nrouter.matcher = createRouter().matcher;\nrouter.addRoutes(store.getters.addRouters);\n```",
      "data": {
        "title": "resetRouter",
        "date": "2020-10-15 17:56:01",
        "tags": [
          "vue-router"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "resetrouter"
    },
    {
      "content": "## 数组扁平化\n```js\nfunction flatDeep(arr) {\n    return arr.reduce((res, cur) => {\n        if(Array.isArray(cur)){\n            return [...res, ...flatDeep(cur)]\n        }else{\n            return [...res, cur]\n        }\n    },[])\n}\n\n```\n## 手写bind函数\n```js\nFunction.prototype.mybind = function(context, ...args) {\n    return (...newArgs) => {\n        return this.call(context, ...args, ...newArgs)\n    }\n}\n```\n## 实现call\n```js\nFunction.prototype.mycall = function (context, ...args) {\n    context = Object(context) || window\n    let fn = Symbol(1)\n    context[fn] = this\n    let result = context[fn](...args)\n    delete context[fn]\n    return result\n}\n\n```\n## 实现一个快排\n```js\nfunction quickSort(arr){\n\n    if (arr.length <= 1) return arr;\n    let index = Math.floor(arr.length / 2)\n    let pivot = arr.splice(index, 1)[0],\n        left = [],\n        right = [];\n    for(let i = 0; i < arr.length; i++){\n        if(pivot > arr[i]){\n            left.push(arr[i])\n        }else{\n            right.push(arr[i])\n        }\n    }\n    return quickSort(left).concat([pivot],quickSort(right))\n}\n\n```\n```js\nfunction deepClone(obj, hash = new WeakMap()) {\n    if (obj instanceof RegExp) return new RegExp(obj)\n    if (obj instanceof Date) return new Date(obj)\n\n    if (obj === null || typeof obj !== 'object') return obj\n\n    if (hash.has(obj)) return obj\n\n    let res = new obj.constructor();\n    hash.set(obj, res)\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            res[key] = deepClone(obj[key],hash)\n        }\n    }\n    return res\n}\n\n```",
      "data": {
        "title": "bind call 快排 数组的扁平化",
        "date": "2020-10-15 15:01:31",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "bind-call-kuai-pai-shu-zu-de-bian-ping-hua"
    },
    {
      "content": "```js\n微信公众号：世界上有意思的事\n\nvar DragDrop = function(){\n  var dragging = null; \n  function handleEvent(event){\n    \n    //获取事件和目标\n    event = EventUtil.getEvent(event);\n    var target = EventUtil.getTarget(event);\n    \n    //确定事件类型 \n    switch(event.type){\n      case \"mousedown\":\n        if (target.className.indexOf(\"draggable\") > -1){\n          dragging = target; \n        }\n        break;\n      case \"mousemove\":\n        if (dragging !== null){ \n          //指定位置\n          dragging.style.left = event.clientX + \"px\";\n          dragging.style.top = event.clientY + \"px\";\n        }\n        break;\n      case \"mouseup\": \n        dragging = null;\n        break; \n    }\n  };\n  //公共接口 \n  return {\n    enable: function(){\n      EventUtil.addHandler(document, \"mousedown\", handleEvent);\n      EventUtil.addHandler(document, \"mousemove\", handleEvent);\n      EventUtil.addHandler(document, \"mouseup\", handleEvent);\n    },\n    disable: function(){\n      EventUtil.removeHandler(document, \"mousedown\", handleEvent);\n      EventUtil.removeHandler(document, \"mousemove\", handleEvent);\n      EventUtil.removeHandler(document, \"mouseup\", handleEvent);\n    }\n  }\n}();\n\n```\n\n1.DragDrop 对象封装了拖放的所有基本功能。这是一个单例对象，并使用了模块模式来隐藏某些实 现细节。dragging 变量起初是 null，将会存放被拖动的元素，所以当该变量不为 null 时，就知道正 在拖动某个东西。handleEvent()函数处理拖放功能中的所有的三个鼠标事件。它首先获取 event 对 象和事件目标的引用。之后，用一个 switch 语句确定要触发哪个事件样式。当 mousedown 事件发生 时，会检查 target 的 class 是否包含\"draggable\"类，如果是，那么将 target 存放到 dragging 中。这个技巧可以很方便地通过标记语言而非 JavaScript 脚本来确定可拖动的元素。\n\n\n2.handleEvent()的 mousemove 情况和前面的代码一样，不过要检查 dragging 是否为 null。当 它不是 null，就知道 dragging 就是要拖动的元素，这样就会把它放到恰当的位置上。mouseup 情况 就仅仅是将 dragging 重置为 null，让 mousemove 事件中的判断失效。\n\n\n3.DragDrop 还有两个公共方法:enable()和 disable()，它们只是相应添加和删除所有的事件处 理程序。这两个函数提供了额外的对拖放功能的控制手段。\n\n\n4.要使用 DragDrop 对象，只要在页面上包含这些代码并调用 enable()。拖放会自动针对所有包含 \"draggable\"类的元素启用，如下例所示:\n```<div class=\"draggable\" style=\"position:absolute; background:red\"> </div>```\n复制代码注意为了元素能被拖放，它必须是绝对定位的。\n\n作者：何时夕\n链接：https://juejin.im/post/6844904121380667399\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```html\n<div id=\"xxx\"></div>\n```\n```js\nvar dragging = false\nvar position = null\n\nxxx.addEventListener('mousedown',function(e){\n  dragging = true\n  position = [e.clientX, e.clientY]\n})\n\n\ndocument.addEventListener('mousemove', function(e){\n  if(dragging === false) return null\n  console.log('hi')\n  const x = e.clientX\n  const y = e.clientY\n  const deltaX = x - position[0]\n  const deltaY = y - position[1]\n  const left = parseInt(xxx.style.left || 0)\n  const top = parseInt(xxx.style.top || 0)\n  xxx.style.left = left + deltaX + 'px'\n  xxx.style.top = top + deltaY + 'px'\n  position = [x, y]\n})\ndocument.addEventListener('mouseup', function(e){\n  dragging = false\n})\n\n```",
      "data": {
        "title": "实现一个可以拖拽的DIV",
        "date": "2020-10-15 14:57:45",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "shi-xian-yi-ge-ke-yi-tuo-zhuai-de-div"
    },
    {
      "content": "var d = new Date(2017,2,0);\nconsole.log(d.getDate());",
      "data": {
        "title": "js获取当前月份的天数",
        "date": "2020-10-15 14:55:51",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-huo-qu-dang-qian-yue-fen-de-tian-shu"
    },
    {
      "content": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n  </head>\n  <body>\n    <p>Works on firefox, chrome , opera &gt;= 15 and IE &gt;= 10 (but NOT in compatibility view).</p>\n    <button id=\"zip\" class=\"btn btn-primary\">click to zip</button>\n    <button id=\"unzip\" class=\"btn btn-primary\">click to unzip</button>\n    <div id=\"result_block\" class=\"hidden\">\n      <h3>Content :</h3>\n      <div id=\"result\"></div>\n      <div id=\"fileContent\"></div>\n    </div>\n  </body>\n  <script src=\"./node_modules/jquery/dist/jquery.min.js\"></script>\n  <script src=\"./node_modules/jszip/dist/jszip.js\" ></script>\n  <script src=\"./node_modules/file-saver/dist/FileSaver.js\" ></script>\n  \n  <!-- 导入这个插件，可以不用使用下面的 download 函数 -->\n  <script type=\"text/javascript\">\n\n    // 创建一个zip 对象，将文件名和内容读到文件中\n    var zip = new JSZip();\n    zip.file(\"readme.md\", \"#### hello\\nMichael 测试文件\"); // 直接把一个文件放在根目录下面\n    zip.folder(\"media\").file(\"image1.jpg\", \"#### hello\\nMichael 测试文件\").file(\"image2.png\", \"#### hello\\nMichael 测试文件\"); // 在根目录下放一个文件夹 media，内部包含两个模拟图片文件\n    zip.folder(\"template\").file(\"index.html\", \"<html><h3>Hello</h3></html>\"); // 在根目录下放一个文件夹 template 内部是一个HTML文件。\n    window.result = '';\n\n    // 将文本压缩zip 并下载\n    $(\"#zip\").on(\"click\", function () {\n        // type: \"string\"\n        zip.generateAsync({type:\"blob\"}).then(function (blob) {\n        // 1) generate the zip file\n            // console.log(blob);\n            window.result = blob; // 绑定到全局组件上，使用另一个按钮下载\n            // // 2) trigger the download\n            saveAs(blob, \"hello.zip\");\n            \n        }, function (err) {\n            $(\"#blob\").text(err);\n        });\n    });\n\n\n    // 将 zip 文件解压缩成内容读取。\n    $(\"#unzip\").on(\"click\", function () {\n      JSZip.loadAsync(window.result)\n      // 1) read the Blob\n        .then(function(zip) {\n            console.log(zip);\n            zip.forEach(function (relativePath, zipEntry) {\n            // 2) print entries\n                $(\"#fileContent\").append($(\"<li>\", {\n                    text : zipEntry.name\n                }));\n            });\n        }, function (e) {\n            $('#result').append($(\"<div>\", {\n                \"class\" : \"alert alert-danger\",\n                text : \"Error reading \" + window.result.name + \": \" + e.message\n            }));\n        });\n    });\n\n    // 模拟点击，下载文件\n    // fake_click(save_link);\n    function fake_click(obj) {\n      var ev = document.createEvent(\"MouseEvents\");\n      ev.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n      obj.dispatchEvent(ev);\n    }\n\n    // 下载文件\n    // download(\"save.txt\",\"hello world\");\n    function download(name, data) {\n      var urlObject = window.URL || window.webkitURL || window;\n      var downloadData = new Blob([data]);\n      var save_link = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n      save_link.href = urlObject.createObjectURL(downloadData);\n      save_link.download = name;\n      fake_click(save_link);\n    }\n  </script>\n</html>\n\n```",
      "data": {
        "title": "前端实现导出文件夹并打包压缩",
        "date": "2020-10-15 13:34:02",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "qian-duan-shi-xian-dao-chu-wen-jian-jia-bing-da-bao-ya-suo"
    },
    {
      "content": "```js\nimport axios from 'axios'\nimport JSZip from 'jszip'\nimport FileSaver from 'file-saver'\nconst getFile = (url) => {\n      return new Promise((resolve, reject) => {\n        axios({\n          method: 'get',\n          url,\n          responseType: 'arraybuffer'\n        }).then(data => {\n          resolve(data.data)\n        }).catch(error => {\n          reject(error.toString())\n        })\n      })\n    };\n// 批量下载\nconst handleBatchDownload = async (selectImgList) => {\n      const data = selectImgList;\n      const zip = new JSZip()\n      const cache = {}\n      const promises = []\n      await data.forEach(item => {\n          const promise =  getFile(item).then(data => { // 下载文件, 并存成ArrayBuffer对象\n          const arr_name = item.split(\"/\");\n          let file_name = arr_name[arr_name.length - 1] // 获取文件名\n          // if (file_name.indexOf('.png') == -1) {\n         //    file_name = file_name + '.png'\n         // }\n          zip.file(file_name, data, {\n            binary: true\n          }) // 逐个添加文件\n          cache[file_name] = data\n        })\n        promises.push(promise)\n      })\n      Promise.all(promises).then(() => {\n        zip.generateAsync({\n          type: \"blob\"\n        }).then(content => { // 生成二进制流\n          FileSaver.saveAs(content, \"photo.zip\") // 利用file-saver保存文件\n        })\n      })\n    \n};\n\nconst listPic = [\n  \"http://127.0.0.1:5500/img/1.png\",\n  \"http://127.0.0.1:5500/img/2.png\",\n]\n\nhandleBatchDownload(listPic)\n```\n",
      "data": {
        "title": "前端实现批量导出图片并打包压缩功能",
        "date": "2020-10-15 13:32:32",
        "tags": [
          "jszip",
          "file-saver"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "qian-duan-shi-xian-pi-liang-dao-chu-tu-pian-bing-da-bao-ya-suo-gong-neng"
    },
    {
      "content": "除了 Vue 内置的一些指令比如 v-model、v-if 等，Vue 还允许我们自定义指令。在 Vue2.0 中，代码复用和抽象的主要形式是组件。然而，有的情况下，你仍然需要对普通 DOM 元素进行底层操作，这时候就会用到自定义指令。比如我们可以通过自定义一个指令来控制按钮的权限。我们期望设计一个如下形式的指令来控制按钮权限：\n\n```js\n<button v-auth=\"['user']\">提交</button>\n```\n通过在按钮的指令里传入一组权限，如果该按钮只有 admin 权限才可以提交，而我们传入一个别的权限，比如 user，那这个按钮就不应该显示了。接下来我们去注册一个全局的指令：\n```js\n// auth.js\nconst AUTH_LIST = ['admin']\n\nfunction checkAuth(auths) {\n    return AUTH_LIST.some(item => auths.includes(item))\n}\n\nfunction install(Vue, options = {}) {\n    Vue.directive('auth', {\n        inserted(el, binding) {\n            if (!checkAuth(binding.value)) {\n                el.parentNode && el.parentNode.removeChild(el)\n            }\n        }\n    })\n}\n\nexport default { install }\n```\n然后我们需要在 main.js 里通过安装插件的方式来启用这个指令：\n```js\nimport Auth from './utils/auth'\nVue.use(Auth)\n```",
      "data": {
        "title": "权限指令 v-auth",
        "date": "2020-10-09 10:54:31",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "quan-xian-zhi-ling-v-auth"
    },
    {
      "content": "这里将使用渲染函数实现上面介绍过的的权限按钮。使用方式如下，把需要控制权限的按钮包在权限组件 authority 里面，如果有该权限就显示，没有就不显示。\n```js\n<authority :auth=\"['admin']\">\n    <button>提交</button>\n</authority>\n```\n然后我们用渲染函数去实现一个 authority 组件：\n```js\n<script>\nconst AUTH_LIST = ['admin', 'user', 'org']\n\nfunction checkAuth(auths) {\n    return AUTH_LIST.some(item => auths.includes(item))\n}\nexport default {\n    functional: true,\n    props: {\n        auth: {\n            type: Array,\n            required: true\n        }\n    },\n    render(h, context) {\n        const { props,  scopedSlots} = context\n        return checkAuth(props.auth) ? scopedSlots.default() : null\n    }\n}\n</script>\n```\n全局注册这个组件：\n```js\n// main.js\nimport Authority from './components/authority'\nVue.component('authority', Authority)\n```",
      "data": {
        "title": "权限组件 authority",
        "date": "2020-10-09 10:52:53",
        "tags": [
          "权限组件"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "quan-xian-zu-jian-authority"
    },
    {
      "content": "TODO 在该注释处有功能代码待编写，待实现的功能在说明中会简略说明\nFIXME 在该注释处代码需要修正，甚至代码是错误的，不能工作，需要修复，如何修正会在说明中简略说明\nXXX 在该注释处代码虽然实现了功能，但是实现的方法有待商榷，希望将来能改进，要改进的地方会在说明中简略说明\nNOTE 在该注释处说明代码如何工作\nHACK 在该注释处编写得不好或格式错误，需要根据自己的需求去调整程序代码\nBUG 在该注释处有 Bug\n\n作者：政采云前端团队\n链接：https://juejin.im/post/6877155538430328845\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。",
      "data": {
        "title": "一目了然的注释",
        "date": "2020-09-29 14:08:35",
        "tags": [
          "注释"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "yi-mu-liao-ran-de-zhu-shi"
    },
    {
      "content": "```js\n// src/utils/index.js\nconst { pathToRegexp } = require('path-to-regexp');\n\nexport function getAuthRouters(authMenu) {\n    let authRouters = [];\n    (authMenu || []).forEach((item) => {\n        const { resourceUrl, childMenu } = item;\n        resourceUrl && authRouters.push(resourceUrl);\n        if (childMenu && childMenu.length > 0) {\n            // 合并子级菜单\n            authRouters = [...authRouters, ...getAuthRouters(childMenu)];\n        }\n    });\n    return authRouters;\n}\n/**\n *\n * @param { Array } authRouters\n */\nexport function createAuthRouters(authRouters) {\n    const isAuthUrl = (url) => {\n        return (authRouters || []).some((cUrl) => {\n            return pathToRegexp(url).toString() === pathToRegexp(cUrl).toString();\n        });\n    };\n    return function createRouters(routers, upperPath) {\n        let nRouters = [];\n        (routers || []).forEach((item) => {\n            const { children, path, name } = item;\n            let isMatched = false,\n                nItem = { ...item },\n                fullPath = `${upperPath || ''}/${path}`.replace(/\\/{2,}/, '/'),\n                nChildren = null;\n            children && (nChildren = createRouters(children, fullPath));\n            // 1.当前路由匹配\n            if (isAuthUrl(fullPath)) {\n                isMatched = true;\n            }\n            // 2.存在子路由匹配\n            if (nChildren && nChildren.length > 0) {\n                nItem.children = nChildren;\n                isMatched = true;\n            }\n            // 特殊处理\n            if(name === \"home\"){\n                isMatched = true;\n            }\n            // nItem\n            isMatched && nRouters.push(nItem);\n        });\n        return nRouters;\n    };\n}\n\n// src/router.js\n\nimport Vue from 'vue';\nimport Store from '@/store';\nimport Router from 'vue-router';\nimport Cookie from 'js-cookie';\n\nconst openRouters = [];\nconst authRouters = [{\n    path : \"order/list\",\n    // ...\n    meta : {\n        // 是否身份验证(至于默认定义false还是true由开发者自定义)\n        isAuth : true\n    }\n}];\n\n/* 动态注册路由 */\nasync function AddRoutes() {\n    // 获取用户路由权限\n    let res = await POST(API.AUTH_RESOURCE_LISTSIDEMENU);\n    try {\n        const { code, data } = res || {};\n        if (code === '000') {\n            let newAuthRoutes = createAuthRouters(getAuthRouters(data))(authRouters, routes.options.base);\n            // 注册路由\n            routes.addRoutes([].concat(newAuthRoutes, openRouters));\n            // 设置已注册\n            Store.commit('UPDATE_IS_ADD_ROUTERS', true);\n            // 保存菜单信息\n            Store.commit('UPDATE_MENU_INFO', data);\n        }\n    } catch (error) {\n        console.error('>>> AddRoutes() - error:', error);\n    }\n}\n\n\n/* 路由前置 */\nlet { origin } = window.location || {};\nroutes.beforeEach((to, from, next) => {\n    const { meta, matched, path } = to;\n    let isMatched = matched && matched.length > 0; // 是否匹配\n    let isAuth = (meta || {}).isAuth; // 是否授权访问\n    let { isAddRoutes } = Store.state; // 注册路由\n    let isLogin = Cookie.get('token') || null; // 是否登录\n    if ((isMatched && !isAuth) || (isMatched && isAuth && isLogin)) {\n        // next()\n        // 1.匹配路由 && 未登录访问\n        // 2.匹配路由 && 登录访问 && 登录\n        next();\n    } else if ((isMatched && isAuth && !isLogin) || (!isMatched && !isLogin)) {\n        // 登录\n        // 1.匹配路由 && 登录访问 && 未登录\n        // 2.未匹配路由 && 未登录\n        next(`/login?r=${origin}/e-lottery${path}`);\n    } else if (!isMatched && isLogin && isAddRoutes) {\n        // 404\n        // 1.未匹配路由 && 登录 && 动态注册路由\n        next('/404');\n    } else if (!isMatched && isLogin && !isAddRoutes) {\n        // 注册路由\n        // 1.未匹配路由 && 登录 && 未动态注册路由\n        AddRoutes();\n        next();\n    }\n});\n\n```",
      "data": {
        "title": "vue-router 控制路由权限",
        "date": "2020-09-24 10:19:02",
        "tags": [
          "递归",
          "vue-router"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-router-kong-zhi-lu-you-quan-xian"
    },
    {
      "content": "```js\nlet res = []        // 用于存储递归结果（扁平数据）\n// 递归函数\nconst fn = (source)=>{\n    source.forEach(el=>{\n        res.push(el)\n        el.children && el.children.length>0 ? fn(el.children) : \"\"        // 子级递归\n    })\n}\n \n// 树形数据\nconst arr = [\n    { id: \"1\", rank: 1 },\n    { id: \"2\", rank: 1,\n        children:[ \n            { id: \"2.1\", rank: 2 },\n            { id: \"2.2\", rank: 2 } \n        ] \n    },\n    { id: \"3\", rank:1,\n        children:[ \n            { id: \"3.1\", rank:2, \n                children: [ \n                    { id:'3.1.1', rank:3,\n                        children:[ \n                            { id: \"3.1.1.1\", rank: 4, \n                                children:[\n                                    { id: \"3.1.1.1.1\", rank: 5 }\n                                ] \n                            } \n                        ] \n                    } \n                ] \n            } \n        ] \n    }\n]\n \nfn(arr)             // 执行递归函数\nconsole.log(res)    // 查看结果\n```\n![https://img-blog.csdnimg.cn/20191107094651823.png](https://img-blog.csdnimg.cn/20191107094651823.png)\n",
      "data": {
        "title": "treeData 2 flatData",
        "date": "2020-08-26 17:46:04",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "treedata-2-flatdata"
    },
    {
      "content": "```html\n<html lang=\"zh-CN\" buildTime=\"<%= (new Date()).toLocaleString() %>\">\n```",
      "data": {
        "title": "打包编译时间 buildTime",
        "date": "2020-08-20 08:42:45",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "da-bao-bian-yi-shi-jian-buildtime"
    },
    {
      "content": "```html\n<html lang=\"zh-CN\" buildTime=\"<%= (new Date()).toLocaleString() %>\">\n```",
      "data": {
        "title": "vue cli & create-react-app 打包编译时间 buildTime",
        "date": "2020-08-20 08:42:45",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-cli-and-create-react-app-da-bao-bian-yi-shi-jian-buildtime"
    },
    {
      "content": "## 七种基本数据类型\n`null，undefined，string，number，boolean，symbol（es6新增），bigInt（es10新增）`\n## 一种特殊类型\n`Object`",
      "data": {
        "title": "js 七种基本数据类型 一种特殊类型",
        "date": "2020-08-06 16:37:27",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-qi-chong-ji-ben-shu-ju-lei-xing-yi-chong-te-shu-lei-xing"
    },
    {
      "content": "```js\n// 设置跨域\napp.use(cors({\n    origin: function (ctx) {\n        if (ctx.url.indexOf(config.API_VERSION_PATH) > -1) {\n          return isDev ? 'http://192.xxx.1.3:8000' : 'http://qutanqianduan.cn'; // 允许来自指定域名请求, 如果设置为*，前端将获取不到错误的响应头\n        }\n    },\n    exposeHeaders: ['WWW-Authenticate', 'Server-Authorization', 'x-show-msg'],\n    maxAge: 5,  //  该字段可选，用来指定本次预检请求的有效期，单位为秒\n    credentials: true,  // 允许携带用户凭证\n    allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'], // 允许的请求方法\n    allowHeaders: ['Content-Type', 'Authorization', 'Accept', 'X-Requested-With'] // 允许接收的头部字段\n}))\n\n```",
      "data": {
        "title": "node cors 跨域设置",
        "date": "2020-08-04 11:01:05",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "node-cors-kua-yu-she-zhi"
    },
    {
      "content": "## Vue的生命周期（四季轮回）\n```js\n# src/core/shared/constants.js\n# 定义生命周期钩子函数\nexport const LIFECYCLE_HOOKS = [  'beforeCreate', // 是new Vue()之后触发的第一个钩子，在当前阶段data、methods、computed以及watch上的数据和方法都不能被访问。 \n 'created', // 在实例创建完成后发生，当前阶段已经完成了数据观测，也就是可以使用数据，更改数据，在这里更改数据不会触发updated函数。可以做一些初始数据的获取，在当前阶段无法与Dom进行交互，如果非要想，可以通过vm.$nextTick来访问Dom。  \n'beforeMount', // 发生在挂载之前，在这之前template模板已导入渲染函数编译。而当前阶段虚拟Dom已经创建完成，即将开始渲染。在此时也可以对数据进行更改，不会触发updated。 \n 'mounted', // 在挂载完成后发生，在当前阶段，真实的Dom挂载完毕，数据完成双向绑定，可以访问到Dom节点，使用$refs属性对Dom进行操作。 \n 'beforeUpdate', // 发生在更新之前，也就是响应式数据发生更新，虚拟dom重新渲染之前被触发，你可以在当前阶段进行更改数据，不会造成重渲染。 \n 'updated', // 发生在更新完成之后，当前阶段组件Dom已完成更新。要注意的是避免在此期间更改数据，因为这可能会导致无限循环的更新。 \n 'beforeDestroy', // 发生在实例销毁之前，在当前阶段实例完全可以被使用，我们可以在这时进行善后收尾工作，比如清除计时器。 \n 'destroyed', // 发生在实例销毁之后，这个时候只剩下了dom空壳。组件已被拆解，数据绑定被卸除，监听被移出，子实例也统统被销毁。  \n'activated', // 钩子函数是专门为 `keep-alive` 组件定制的钩子，结合 `keep-alive` 组件，可以实现从其他页面跳转到这个页面时会请求数据，当从下级页面返回这个页面时就不会重新请求数据  \n 'deactivated',  // 钩子函数是专门为 `keep-alive` 组件定制的钩子   'errorCaptured',  \n'serverPrefetch']\n```",
      "data": {
        "title": "Vue的生命周期",
        "date": "2020-08-04 09:33:53",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-de-sheng-ming-zhou-qi"
    },
    {
      "content": "```js\n<template>\n  <div class=\"echarts\"></div>\n</template>\n<script>\nexport default {\n  mounted() {\n    this.chart = echarts.init(this.$el)\n    // 请求数据，赋值数据 等等一系列操作...\n    // 监听窗口发生变化，resize组件\n    window.addEventListener('resize', this.$_handleResizeChart)\n  },\n  updated() {\n    // 干了一堆活\n  },\n  created() {\n    // 干了一堆活\n  },\n  beforeDestroy() {\n    // 组件销毁时，销毁监听事件\n    window.removeEventListener('resize', this.$_handleResizeChart)\n  },\n  methods: {\n    $_handleResizeChart() {\n      this.chart.resize()\n    },\n    // 其他一堆方法\n  }\n}\n</script>\n```\n## 优化\n```js\nexport default {\n  mounted() {\n    this.chart = echarts.init(this.$el)\n    // 请求数据，赋值数据 等等一系列操作...\n    \n    // 监听窗口发生变化，resize组件\n    window.addEventListener('resize', this.$_handleResizeChart)\n    // 通过hook监听组件销毁钩子函数，并取消监听事件\n    this.$once('hook:beforeDestroy', () => {\n      window.removeEventListener('resize', this.$_handleResizeChart)\n    })\n  },\n  updated() {},\n  created() {},\n  methods: {\n    $_handleResizeChart() {\n      // this.chart.resize()\n    }\n  }\n}\n```",
      "data": {
        "title": "echarts vue封装",
        "date": "2020-07-31 15:58:45",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "echarts-vue-feng-zhuang"
    },
    {
      "content": "## 提高Vue渲染性能，了解一下Object.freeze\n当一个 Vue 实例被创建时，它将 data 对象中的所有的 property 加入到 Vue 的响应式系统中。当这些 property 的值发生改变时，视图将会产生“响应”，即匹配更新为新的值。但是这个过程实际上是比较消耗性能的，所以对于一些有大量数据但只是展示的界面来说，并不需要将property加入到响应式系统中，这样可以提高渲染性能，怎么做呢，你需要了解一下Object.freeze。\n在Vue官网中，有这样一段话：这里唯一的例外是使用 Object.freeze()，这会阻止修改现有的 property，也意味着响应系统无法再追踪变化。这段话的意思是，如果我们的数据使用了Object.freeze，就可以让数据脱离响应式系统，那么该如何做呢?\n比如下面这个表格，因为只是渲染数据，这时候我们就可以通过Object.freeze来优化性能\n \n ```js\n <template>\n  <el-table :data=\"tableData\" style=\"width: 100%\">\n    <el-table-column prop=\"date\" label=\"日期\" width=\"180\" />\n    <el-table-column prop=\"name\" label=\"姓名\" width=\"180\" />\n    <el-table-column prop=\"address\" label=\"地址\" />\n  </el-table>\n</template>\n<script>\nexport default {\n  data() {\n    const data = Array(1000)\n      .fill(1)\n      .map((item, index) => {\n        return {\n          date: '2020-07-11',\n          name: `子君${index}`,\n          address: '大西安'\n        }\n      })\n    return {\n      // 在这里我们用了Object.freeze\n      tableData: Object.freeze(data)\n    }\n  }\n}\n</script>\n ```\n 有的同学可能会有疑问，如果我这个表格的数据是滚动加载的，你这样写我不就没法再给tableData添加数据了吗？是，确实没办法去添加数据了，但还是有办法解决的，比如像下面这样\n ```js\n export default {\n  data() {\n    return {\n      tableData: []\n    }\n  },\n  created() {\n    setInterval(() => {\n      const data = Array(1000)\n        .fill(1)\n        .map((item, index) => {\n          // 虽然不能冻结整个数组，但是可以冻结每一项数据\n          return Object.freeze({\n            date: '2020-07-11',\n            name: `子君${index}`,\n            address: '大西安'\n          })\n        })\n      this.tableData = this.tableData.concat(data)\n    }, 2000)\n  }\n}\n```",
      "data": {
        "title": "Object.freeze",
        "date": "2020-07-31 15:54:00",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "objectfreeze"
    },
    {
      "content": "浏览器内的内容即然可以滚动，那么我们就可以获取到浏览器滚动的距离思考一个问题？浏览器真的滚动了吗？其实我们的浏览器是没有滚动的，是一直在那里滚动的是什么？是我们的页面所以说，其实浏览器没有动，只不过是页面向上走了所以，这个已经不能单纯的算是浏览器的内容了，而是我们页面的内容所以不是在用 window 对象了，而是使用 document 对象\n\n```js\nwindow.onscroll = function () {\n console.log(document.body.scrollTop)\n console.log(document.documentElement.scrollTop)\n  console.log(window.pageYOffset)\n}\n```\n两个都是获取页面向上滚动的距离区别：IE 浏览器没有 DOCTYPE 声明的时候，用这两个都行有 DOCTYPE 声明的时候，只能用 document.documentElement.scrollTop Chrome 和 FireFox没有 DOCTYPE 声明的时候，用 document.body.scrollTop有 DOCTYPE 声明的时候，用 document.documentElement.scrollTop Safari两个都不用，使用一个单独的方法 window.pageYOffset\n",
      "data": {
        "title": "浏览器滚动的距离",
        "date": "2020-07-31 09:37:28",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "liu-lan-qi-gun-dong-de-ju-chi"
    },
    {
      "content": "## 金额格式化\n```js\n      var money = 1200;\n      var MoneyFormat = (money) => {\n        const moneyStr = money.toLocaleString(\"en-IN\", {\n          style: \"currency\",\n          currency: \"CNY\",\n          currencyDisplay: \"symbol\",\n          minimumFractionDigits: 2,\n        })\n        console.log(\"MoneyFormat -> moneyStr\", moneyStr)\n        return moneyStr.replace('CN','')\n      };\n      console.log(MoneyFormat(money)); ￥1,200.00\n```",
      "data": {
        "title": "MoneyFormat",
        "date": "2020-07-28 09:55:13",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "moneyformat"
    },
    {
      "content": "## url参数反序列化\n一般会通过location.search拿到路由传递的参数，并进行反序列化得到对象\n```js\nfunction parseUrlSearch() {\n  const search = '?age=25&name=TYJ'\n  return search.replace(/(^\\?)|(&$)/g, \"\").split(\"&\").reduce((t, v) => {\n    const [key, val] = v.split(\"=\");\n    t[key] = decodeURIComponent(val);\n    return t;\n  }, {});\n}\n\nconsole.log(parseUrlSearch()); // { age: \"25\", name: \"TYJ\" }\n\n```\n## url参数序列化\n将对象序列化成url参数传递\n```js\nfunction stringifyUrl(search = {}) {\n  return Object.entries(search).reduce(\n    (t, v) => `${t}${v[0]}=${encodeURIComponent(v[1])}&`,\n    Object.keys(search).length ? \"?\" : \"\"\n  ).replace(/&$/, \"\");\n}\n\nconsole.log(stringifyUrl({ age: 27, name: \"YZW\" })); // \"?age=27&name=YZW\"\n\n```",
      "data": {
        "title": "url参数 序列化 反序列化",
        "date": "2020-07-21 10:44:21",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "url-can-shu-xu-lie-hua-fan-xu-lie-hua"
    },
    {
      "content": "当一个 Vue 实例被创建时，它将 data 对象中的所有的 property 加入到 Vue 的响应式系统中。当这些 property 的值发生改变时，视图将会产生“响应”，即匹配更新为新的值。但是这个过程实际上是比较消耗性能的，所以对于一些有大量数据但只是展示的界面来说，并不需要将property加入到响应式系统中，这样可以提高渲染性能，怎么做呢，你需要了解一下Object.freeze。\n在Vue官网中，有这样一段话：这里唯一的例外是使用 Object.freeze()，这会阻止修改现有的 property，也意味着响应系统无法再追踪变化。这段话的意思是，如果我们的数据使用了Object.freeze，就可以让数据脱离响应式系统，那么该如何做呢?\n比如下面这个表格，因为只是渲染数据，这时候我们就可以通过Object.freeze来优化性能\n\n```js\n<template>\n  <el-table :data=\"tableData\" style=\"width: 100%\">\n    <el-table-column prop=\"date\" label=\"日期\" width=\"180\" />\n    <el-table-column prop=\"name\" label=\"姓名\" width=\"180\" />\n    <el-table-column prop=\"address\" label=\"地址\" />\n  </el-table>\n</template>\n<script>\nexport default {\n  data() {\n    const data = Array(1000)\n      .fill(1)\n      .map((item, index) => {\n        return {\n          date: '2020-07-11',\n          name: `子君${index}`,\n          address: '大西安'\n        }\n      })\n    return {\n      // 在这里我们用了Object.freeze\n      tableData: Object.freeze(data)\n    }\n  }\n}\n</script>\n\n```\n有的同学可能会有疑问，如果我这个表格的数据是滚动加载的，你这样写我不就没法再给tableData添加数据了吗？是，确实没办法去添加数据了，但还是有办法解决的，比如像下面这样\n```js\nexport default {\n  data() {\n    return {\n      tableData: []\n    }\n  },\n  created() {\n    setInterval(() => {\n      const data = Array(1000)\n        .fill(1)\n        .map((item, index) => {\n          // 虽然不能冻结整个数组，但是可以冻结每一项数据\n          return Object.freeze({\n            date: '2020-07-11',\n            name: `子君${index}`,\n            address: '大西安'\n          })\n        })\n      this.tableData = this.tableData.concat(data)\n    }, 2000)\n  }\n}\n\n```\n合理的使用Object.freeze，是可以节省不少渲染性能，特别对于IE浏览器，效果还是很明显的，赶快去试试吧。",
      "data": {
        "title": "提高Vue渲染性能，了解一下Object.freeze",
        "date": "2020-07-21 09:42:29",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ti-gao-vue-xuan-ran-xing-neng-liao-jie-yi-xia-objectfreeze"
    },
    {
      "content": "# https://github.com/saucxs/watermark-dom",
      "data": {
        "title": "canvas 图片文字水印",
        "date": "2020-07-21 09:35:21",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "canvas-tu-pian-wen-zi-shui-yin"
    },
    {
      "content": "网页可见区域宽：document.body.clientWidth\n网页可见区域高：document.body.clientHeight\n网页可见区域宽：document.body.offsetWidth (包括边线的宽)\n网页可见区域高：document.body.offsetHeight (包括边线的宽)\n网页正文全文宽：document.body.scrollWidth\n网页正文全文高：document.body.scrollHeight\n网页被卷去的高：document.body.scrollTop\n网页被卷去的左：document.body.scrollLeft\n网页正文部分上：`window.screenTop`\n网页正文部分左：`window.screenLeft`\n屏幕分辨率的高：`window.screen.height`\n屏幕分辨率的宽：`window.screen.width`\n屏幕可用工作区高度：`window.screen.availHeight`\n屏幕可用工作区宽度：`window.screen.availWidth`\n\n \n\nHTML精确定位:scrollLeft,scrollWidth,clientWidth,offsetWidth\nscrollHeight: 获取对象的滚动高度。\nscrollLeft:设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离\nscrollTop:设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离\nscrollWidth:获取对象的滚动宽度\noffsetHeight:获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度\noffsetLeft:获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置\noffsetTop:获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置\nevent.clientX 相对文档的水平座标\nevent.clientY 相对文档的垂直座标\nevent.offsetX 相对容器的水平坐标\nevent.offsetY 相对容器的垂直坐标\ndocument.documentElement.scrollTop 垂直方向滚动的值\nevent.clientX+document.documentElement.scrollTop 相对文档的水平座标+垂直方向滚动的量",
      "data": {
        "title": "js获取屏幕的高宽度",
        "date": "2020-07-21 09:07:34",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-huo-qu-ping-mu-de-gao-kuan-du"
    },
    {
      "content": "```js\n/**\n * \n * @param {Element} dom \n * @param {String} text \n * @param {Number} rotate 标准坐标轴角度\n * @param {String} color \n * @param {Number} fontSize \n * @param {Number} gap 水平间距\n * by https://github.com/intbingbing\n */\nconst drawWaterMark = (\n    dom = document.getElementsByTagName('canvas')[0],\n    text = '我是水印',\n    rotate = -45,\n    color = '#CCCDCF',\n    fontSize = 17,\n    gap = 20\n) => {\n\n    const ctx = dom.getContext('2d')\n    ctx.font = `${fontSize}px 'PingFang SC'`\n    ctx.fillStyle = color;\n    let horizontalWidth = ctx.measureText(text).width\n    horizontalWidth = Math.sqrt(horizontalWidth * horizontalWidth / 2) + fontSize\n\n    const draw = (x, y) => {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(-rotate / 180 * Math.PI);\n        ctx.fillText(text, 0, 0);\n        ctx.restore();\n    }\n\n    const width = dom.width\n    const height = dom.height\n    for (let i = 0; i < width; i += horizontalWidth + gap) {\n        for (let j = 0; j < height; j += horizontalWidth + gap) {\n            draw(i, j)\n        }\n    }\n\n}\n\ndrawWaterMark()\n```",
      "data": {
        "title": "canvas 文字水印 2",
        "date": "2020-07-21 08:39:08",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "canvas-wen-zi-shui-yin-2"
    },
    {
      "content": "```js\n/**\n* 为网页添加文字水印\n* @param {String} str 要添加的字符串\n*/\nfunction addWaterMarker(str){\n\nvar can = document.createElement('canvas');\nvar body = document.body;\n\nbody.appendChild(can);\n\ncan.width=400;\ncan.height=200;\ncan.style.display='none';\n\n\nvar cans = can.getContext('2d');\ncans.rotate(-20*Math.PI/180);\ncans.font = \"16px Microsoft JhengHei\";\ncans.fillStyle = \"rgba(17, 17, 17, 0.50)\";\ncans.textAlign = 'left';\ncans.textBaseline = 'Middle';\ncans.fillText(str,can.width/3,can.height/2);\n\nbody.style.backgroundImage=\"url(\"+can.toDataURL(\"image/png\")+\")\";\n\n}\n```",
      "data": {
        "title": "canvas 文字水印",
        "date": "2020-07-21 08:37:32",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "canvas-wen-zi-shui-yin"
    },
    {
      "content": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title>Static Template</title>\n  </head>\n  <body>\n    <h1>金额格式化</h1>\n    <h2></h2>\n    <script>\n      function formatNum(val) {\n        // 金额格式化\n        var rt = null;\n\n        if (val <= 999) {\n          rt = { val: val.toString().substr(0, 3), unit: \"\" };\n          substrNum(rt);\n        } else if (val < 9999999) {\n          val = Math.round(val / 1000) / 10;\n          console.log(val);\n          rt = { val: val, unit: \"万\" };\n          substrNum(rt);\n        } else if (val < 99999999) {\n          val = Math.round(val / 1000000) / 10;\n          rt = { val: val, unit: \"千万\" };\n          substrNum(rt);\n        } else if (val < 99999999999) {\n          val = Math.round(val / 10000000) / 10;\n          rt = { val: val, unit: \"亿\" };\n          substrNum(rt);\n        } else {\n          val = Math.round(val / 10000000) / 10;\n          rt = { val: val, unit: \"亿\" };\n        }\n        return rt;\n      }\n\n      function substrNum(rt) {\n        rt.val = rt.val.toString().substr(0, 3);\n        console.log(rt.val);\n        console.log(rt.val.charAt(rt.val.length - 1));\n        if (rt.val.charAt(rt.val.length - 1) == \".\") {\n          //判断末尾是否 \".\"\n          rt.val = rt.val.substr(0, 2);\n        }\n      }\n      var result = formatNum(51696991);\n      console.log(result);\n      document.querySelector(\"h2\").innerHTML = result.val + result.unit;\n    </script>\n  </body>\n</html>\n\n```",
      "data": {
        "title": "金额格式化",
        "date": "2020-07-17 09:39:17",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jin-e-ge-shi-hua"
    },
    {
      "content": "```js\nexport default {  \n    200: '请求被正确处理并返回了结果',  \n    201: '新增或修改数据成功',  \n    202: '请求已进入任务队列，被异步处理',\n    203: '令牌或登录状态失效',\n    204: '删除数据成功',  \n    301: '请求的资源被永久重定向到新的位置，将从新的地址重新请求',  \n    302: '请求的资源被临时重定向到新的位置',  \n    304: '表示，客户端有缓存文件并向服务器发送了一个options请求，服务器返回304 Not Modified,告诉客户端，原来缓存的文件没有修改过，可以继续使用原来缓存的文件。'\n    400: '请求参数错误，服务器没有对数据做新建或修改',  \n    401: '无访问权限，用户名、密码、令牌错误',  \n    403: '得到访问授权，但访问是被禁止',  \n    404: '访问的是不存在的资源',  \n    405: '请求方式不正确',  \n    406: '请求的数据格式不是服务接收的类型',  \n    410: '请求的资源被永久删除',  \n    422: '服务器创建对象时发生错误',  \n    500: '服务器不可用，未返回正确的数据',  \n    502: '服务器网关错误',  \n    503: '服务器过载或维护中',  \n    504: '服务器响应超时',\n}\n\n作者：gejumona\n链接：https://juejin.im/post/5f0d10e5e51d45347c1b86a0\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n```",
      "data": {
        "title": "HTTP常见请求状态码及解释",
        "date": "2020-07-16 14:14:14",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "http-chang-jian-qing-qiu-zhuang-tai-ma-ji-jie-shi"
    },
    {
      "content": "```js\n//后台数据的模拟：\n    let dataList = [\n        {id: '1', name: '小狗', age: 5},\n        {id: '2', name: '小羊', age: 8},\n        {id: '3', name: '小猪', age: 10},\n        {id: '4', name: '小牛', age: 12}\n    ];\n    //前台数据的模拟：\n    let myList = [\n        {myId: '1001', age: 18, myName: '张三'},\n        {myId: '1001', age: 18, myName: '李四'}\n    ];\n    //数据中，数据的属性名称不同。\n\n    //1.声明两个数组： 要求两个数组中的属性，一一对应；\n    let myArr = ['myId', 'age', 'myName'];\n    let dataArr = ['id', 'age', 'name'];\n    // 2.调用适配函数，进行数据的转换；\n    // console.log('没有转换的前台的数据:',myList);\n    let data = myDataAdaptor(myList, dataList, myArr, dataArr);\n    // console.log('转换后的前台的数据:',data);\n    // 3. 自己页面逻辑中，如渲染一个table。\n\n//封装的适配函数：\n    function myDataAdaptor(myList, dataList, myArr, dataArr) {\n        let newList = [];  //存储函数转换后的数据\n//每循环一次，把后台数组中，一个对象中的指定的属性的值，赋值给前台模拟数据中对象指定的属性。\n        for (let i = 0; i < dataList.length; i++) {\n            let tempObj = dataList[i]; //后台返回的某一条数据，{id: '1', name: '肖明亚', age: 28}；\n            let newObj = {};//一定是一个新的空对象。\n            let j = 0;\n            //for--in循环完成后，就把后台的一个对象的数据，变成前台的对象数据\n            for (let key in tempObj) {\n                // myArr[j] 去换 myArr数组中的值； j是0时， 'myId'\n                // dataArr[j] 去换 dataArr数组中的值；j是0时， 'id'\n                // 这儿实现对象数据的转换；\n                newObj[   myArr[j]  ] = tempObj[  dataArr[j]  ]\n                // newObj[  'myId' ] = tempObj[  'id'  ]\n                // newObj.myId = 1;\n/*\n                 拿对象中的属性名：\n                let q = myArr[j];  //'myId', 'age', 'myName'\n                let h = dataArr[j];// 'id', 'age', 'name'\n                newObj[q] = tempObj[h]\n                j=0  newObj['myId'] = tempObj['id']\n                j=1  newObj['age'] = tempObj['age']\n                j=2  newObj['myName'] = tempObj['name']\n*/\n                j++;\n            }\n            newList.push(newObj)\n        }\n        return newList;\n    }\n————————————————\n版权声明：本文为CSDN博主「李@@」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/weixin_44571638/java/article/details/107007629\n```",
      "data": {
        "title": "实现前后端键名不一致的数据交换",
        "date": "2020-07-16 14:11:23",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "shi-xian-qian-hou-duan-jian-ming-bu-yi-zhi-de-shu-ju-jiao-huan"
    },
    {
      "content": "https://juejin.im/post/5eb7fc626fb9a0436a7c6af1\n```js\nimport Vue from 'vue'\n\nconst preventReClick = Vue.directive('preventReClick', {\n  inserted: function(el, binding) {\n    el.addEventListener('click', () => {\n      if (!el.disabled) {\n        el.disabled = true\n        setTimeout(() => {\n          el.disabled = false\n        }, binding.value || 3000) // 传入绑定值就使用，默认3000毫秒内不可重复触发\n      }\n    })\n  }\n})\n\nexport { preventReClick }\n\n```\n```js\nimport preventReClick from './plugins/directives.js' //防多次点击，重复提交\n```\n```js\n// 指定延迟1000ms\n<el-button  size=\"small\" type=\"primary\" @click=\"handleSave()\" v-preventReClick=\"1000\">保 存</el-button>\n\n// 默认延迟时间3000\n<el-button  size=\"small\" type=\"primary\" @click=\"handleSave()\" v-preventReClick>保 存</el-button>\n\n```",
      "data": {
        "title": "自定义指令directive 表单按钮重复提交",
        "date": "2020-05-12 20:21:32",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "zi-ding-yi-zhi-ling-directive-biao-dan-an-niu-chong-fu-ti-jiao"
    },
    {
      "content": "https://juejin.im/post/5eb7fc626fb9a0436a7c6af1\n```js\nimport Vue from 'vue'\n\nconst preventReClick = Vue.directive('preventReClick', {\n  inserted: function(el, binding) {\n    el.addEventListener('click', () => {\n      if (!el.disabled) {\n        el.disabled = true\n        setTimeout(() => {\n          el.disabled = false\n        }, binding.value || 3000) // 传入绑定值就使用，默认3000毫秒内不可重复触发\n      }\n    })\n  }\n})\n\nexport { preventReClick }\n\n```\n```js\nimport preventReClick from './plugins/directives.js' //防多次点击，重复提交\n```\n```js\n// 指定延迟1000ms\n<el-button  size=\"small\" type=\"primary\" @click=\"handleSave()\" v-preventReClick=\"1000\">保 存</el-button>\n\n// 默认延迟时间3000\n<el-button  size=\"small\" type=\"primary\" @click=\"handleSave()\" v-preventReClick>保 存</el-button>\n\n```",
      "data": {
        "title": "自定义指令directive",
        "date": "2020-05-12 20:21:32",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "zi-ding-yi-zhi-ling-directive"
    },
    {
      "content": "## 方法1\nhttps://blog.csdn.net/Mr_JavaScript/article/details/82817177\n```js\n     let source = [\n          {id:1,parentId:0,name:\"一级菜单A\",rank:1},\n          {id:2,parentId:0,name:\"一级菜单B\",rank:1},\n          {id:3,parentId:0,name:\"一级菜单C\",rank:1},\n          {id:4,parentId:1,name:\"二级菜单A-A\",rank:2},\n          {id:5,parentId:1,name:\"二级菜单A-B\",rank:2},\n          {id:6,parentId:2,name:\"二级菜单B-A\",rank:2},\n          {id:7,parentId:4,name:\"三级菜单A-A-A\",rank:3},\n          {id:8,parentId:7,name:\"四级菜单A-A-A-A\",rank:4},\n          {id:9,parentId:8,name:\"五级菜单A-A-A-A-A\",rank:5},\n          {id:10,parentId:9,name:\"六级菜单A-A-A-A-A-A\",rank:6},\n          {id:11,parentId:10,name:\"七级菜单A-A-A-A-A-A-A\",rank:7},\n          {id:12,parentId:11,name:\"八级菜单A-A-A-A-A-A-A-A\",rank:8},\n          {id:13,parentId:12,name:\"九级菜单A-A-A-A-A-A-A-A-A\",rank:9},\n          {id:14,parentId:13,name:\"十级菜单A-A-A-A-A-A-A-A-A-A\",rank:10},\n      ];\n\nfunction setTreeData(source) {\n    let cloneData = JSON.parse(JSON.stringify(source))\n    // 对源数据深度克隆\n    return cloneData.filter(father=>{\n        // 循环所有项，并添加children属性\n        let branchArr = cloneData.filter(child=>father.id == child.parentId);\n        // 返回每一项的子级数组\n        branchArr.length > 0 ? father.children = branchArr : ''\n        //给父级添加一个children属性，并赋值\n        return father.parentId == 0;\n        //返回第一层\n    }\n    );\n}\nconsole.log(setTreeData(source), 1111111)\n// 树形数据\n\n/* 封装函数 */\n/* 字段名以字符串的形式传入 */\nfunction treeData(source, id, parentId, children) {\n    let cloneData = JSON.parse(JSON.stringify(source))\n    return cloneData.filter(father=>{\n        let branchArr = cloneData.filter(child=>father[id] == child[parentId]);\n        branchArr.length > 0 ? father[children] = branchArr : ''\n        return father[parentId] == 0\n    }\n    )\n}\n// 调用2\nconsole.table(treeData(source, 'id', 'parentId', 'children'), 22222222222)\n\nlet nest = (items,id=null,link='parent_id')=>items.filter(item=>item[link] === id).map(item=>({\n    ...item,\n    children: nest(items, item.id)\n}));\n\n// 调用 3\nconsole.log(nest(source, 0, 'parentId'), 33333)\n\n```\n## 方法2\n```js\nvar models = [\n {id: 1, title: 'hello-0', parent: 0},\n {id: 3, title: 'hello-1', parent: 1},\n {id: 4, title: 'hello-3', parent: 3},\n {id: 5, title: 'hello-4', parent: 4},\n {id: 2, title: 'hello-0', parent: 0},\n {id: 6, title: 'hello-4', parent: 4},\n {id: 7, title: 'hello-2', parent: 2},\n {id: 8, title: 'hello-10', parent: 10}\n];\nvar nestedStructure = getNestedChildren(models, 0);\nconsole.log(nestedStructure);\n\nfunction getNestedChildren(arr, parent) {\n    var out = []\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i].parent == parent) {\n            var children = getNestedChildren(arr, arr[i].id)\n            if (children.length) {\n                arr[i].children = children\n            }\n            out.push(arr[i])\n        }\n    }\n    return out\n}\n\n```",
      "data": {
        "title": "treeNest",
        "date": "2020-05-07 11:16:25",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "treenest"
    },
    {
      "content": "File API使得我们在浏览器端可以访问文件的数据,比如预览文件,获取文件信息(比如文件名,文件内容,文件大小等), 并且可以在前端实现文件下载(可以借助canvas和 window.URL.revokeObjectURL的一些能力).当然我们还可以实现拖拽上传文件这样高用户体验的操作.接下来我们来看看几个实际例子.\n\n```js\nfunction previewFiles(files, previewBox) {\n    for (var i = 0; i < files.length; i++) {\n      var file = files[i];\n      var imageType = /^image\\//;\n      \n      if (!imageType.test(file.type)) {\n        continue;\n      }\n      \n      var img = document.createElement(\"img\");\n      previewBox.appendChild(img); // 假设\"preview\"就是用来显示内容的div\n      \n      var reader = new FileReader();\n      reader.onload = (function(imgEl) { \n        return function(e) { imgEl.src = e.target.result; }; \n      })(img);\n      reader.readAsDataURL(file);\n    }\n  }\n\n```",
      "data": {
        "title": "fileReader 图片预览",
        "date": "2020-04-20 14:43:06",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "filereader-tu-pian-yu-lan"
    },
    {
      "content": "接口响应的拦截主要是对接口返回的数据进行提取、封装使用，以及对请求异常进行统一配置处理。\n```js\nrequest.interceptors.response.use(\n  response => {\n    const data = response.data || {};\n    return data;\n  },\n  error => {\n    const code = error.response.status;\n    if (code) {\n      let msg = '';\n      switch (code) {\n        case 400:\n          msg = '请求错误';\n          break;\n        case 401:\n          msg = '未授权，请登录';\n          break;\n        case 403:\n          msg = '拒绝访问';\n          break;\n        case 404:\n          msg = `请求${error.response.config.url}出现404错误`;\n          break;\n        case 408:\n          msg = '请求超时';\n          break;\n        case 500:\n          msg = '服务器内部错误';\n          break;\n        case 501:\n          msg = '服务未实现';\n          break;\n        case 502:\n          msg = '网关错误';\n          break;\n        case 503:\n          msg = '服务不可用';\n          break;\n        case 504:\n          msg = '网关超时';\n          break;\n        case 505:\n          msg = 'HTTP版本不受支持';\n          break;\n      }\n      Message.error(msg);\n    }\n    return Promise.reject(error);\n  }\n)\n\n```\n#### API方法封装\n单独封装接口请求方法， GET方法的参数为params，POST方法的参数为data。\n```js\n// api.js\nimport request from '@/utils/request';\n\nexport function APIPostMethod(data) { // 自定义接口方法\n  return request({\n    url: '/url1',\n    method: 'post',\n    data\n  });\n}\nexport function APIGetMethod(params) { // 自定义接口方法\n  return request({\n    url: '/url2',\n    method: 'get',\n    params\n  });\n}\n\n```\n在业务中调用API方法\n```js\nimport { APIGetMethod, APIPostMethod } from '@/utils/request';\nconst params = {}\nAPIGetMethod(params).then(res => {\n//...\n//对数据处理\n})\n\n```",
      "data": {
        "title": "Axios 接口响应拦截处理",
        "date": "2020-04-13 15:53:09",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "axios-jie-kou-xiang-ying-lan-jie-chu-li"
    },
    {
      "content": "## prerender-spa-plugin\n### webpack配置\n```js\n        new PrerenderSPAPlugin({\n            staticDir: path.join(__dirname, '../dist'),\n            //需要进行渲染的的页面路由\n            routes: ['/', '/aaa'],\n            renderer: new Renderer({\n                // 触发渲染的时间，用于获取数据后再保存渲染结果\n                renderAfterTime: 10000,\n                // 是否打开浏览器，false 是打开。可用于 debug 检查渲染结果\n                headless: false,\n                // 在项目的main.js入口中使用 `document.dispatchEvent(new Event('render-event'))` \n                renderAfterDocumentEvent: 'render-event', // render-event: 声明的方法名 \n            })\n        })\n        })\n\n```\n### main.js配置\n```js\nnew Vue({\n    el: '#app',\n    router,\n    components: { App },\n    template: '<App/>',\n    render: h => h(App),\n    mounted() {\n        document.dispatchEvent(new Event('render-event'))\n    },\n})\n\n```\nhttps://juejin.im/post/5e8bedb9f265da47a741253f",
      "data": {
        "title": "prerender-spa-plugin",
        "date": "2020-04-10 11:59:50",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "prerender-spa-plugin"
    },
    {
      "content": "[网易新闻移动端布局](https://static.ws.126.net/163/wap/f2e/milk-channel/common.a68191b4.css)\n```css\n/**\n * view-port list:\n320x480\n320x568\n320x570\n360x592\n360x598\n360x604\n360x640\n360x720\n375x667\n375x812\n393x699\n412x732\n414x736\n480x854\n540x960\n640x360\n720x1184\n720x1280\n800x600\n1024x768\n1080x1812\n1080x1920\n */\nhtml {\n  font-size: -webkit-calc(13.33333333vw);\n  font-size: calc(13.33333333vw);\n}\n@media screen and (max-width: 320px) {\n  html {\n    font-size: 42.667px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 321px) and (max-width: 360px) {\n  html {\n    font-size: 48px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 361px) and (max-width: 375px) {\n  html {\n    font-size: 50px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 376px) and (max-width: 393px) {\n  html {\n    font-size: 52.4px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 394px) and (max-width: 412px) {\n  html {\n    font-size: 54.93px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 413px) and (max-width: 414px) {\n  html {\n    font-size: 55.2px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 415px) and (max-width: 480px) {\n  html {\n    font-size: 64px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 481px) and (max-width: 540px) {\n  html {\n    font-size: 72px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 541px) and (max-width: 640px) {\n  html {\n    font-size: 85.33px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 641px) and (max-width: 720px) {\n  html {\n    font-size: 96px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 721px) and (max-width: 768px) {\n  html {\n    font-size: 102.4px;\n    font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw);\n  }\n}\n@media screen and (min-width: 769px) {\n  html {\n    font-size: 102.4px;\n    /* font-size: -webkit-calc(13.33333333vw);\n    font-size: calc(13.33333333vw); */\n  }\n}\n```",
      "data": {
        "title": "vw+rem 移动端布局",
        "date": "2020-01-14 09:39:04",
        "tags": [
          "CSS3"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vwrem-yi-dong-duan-bu-ju"
    },
    {
      "content": "在组件中使用 route 会使之与其对应路由形成高度耦合，从而使组件只能在某些特定的 URL 上使用，限制了其灵活性。\n简单滴说，就是解耦后你便可以在任何地方使用该组件，使得该组件更易于重用和测试，而不再依赖于this.$route来获取参数。[点击了解](https://router.vuejs.org/zh/guide/essentials/passing-props.html)\n```json\n// router.js\n  {\n    path: '/lesson/:id',\n    props: true,    // 解耦\n    component: () => import ('@/views/Lesson.vue') \n  },\n```\n```\n<!-- Lesson.vue -->\n<p> 解耦前id: {{ $route.params.id }} </p>\n<p> 解耦后id: {{ id }} </p>\n```\n```js\nexport default {\n  // 解耦必须加props\n  props: ['id']  // 接收\n}\n```",
      "data": {
        "title": "Vue-router 路由解耦",
        "date": "2020-01-08 14:15:45",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-router-lu-you-jie-ou"
    },
    {
      "content": "\n     我们经常会去实现那种圆角的按钮，图片等等，但是想要实现这种内凹的圆角形状的块状还是比较复杂，我先讲讲思路：\n-  第一，需要一个大块进行包裹，需要设置宽度和高度等；\n-  第二，需要四个小块，来使用圆角的属性border-radius，进行不同方向的圆角设置；\n-  第三，为这些块加上border属性。\n![](https://img-blog.csdn.net/20170803151329578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxNDIzMDE5OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n```html\n<html>\n<head>\n<meta charset=\"utf-8\"/>\n<title>内凹圆角</title>\n<style type=\"text/css\">\n    .cro {\n        width: 100px;\n        height: 100px;\n        border: 1px solid #58C4E6;\n        position: relative;\n    }\n \n    .cro_left_top, .cro_right_top, .cro_left_bottom, .cro_right_bottom {\n        position: absolute;\n        width: 20px;\n        height: 20px;\n        border: 1px solid #fff;\n        z-index: 1;\n        background: #fff;\n    }\n \n    .cro_left_top {\n        top: -1px;\n        left: -1px;\n        border-radius: 0 0 20px 0;\n        border-bottom: 1px solid #58C4E6;\n        border-right: 1px solid #58C4E6;\n    }\n \n    .cro_right_top {\n        top: -1px;\n        right: -1px;\n        border-radius: 0 0 0 20px;\n        border-bottom: 1px solid #58C4E6;\n        border-left: 1px solid #58C4E6;\n    }\n \n    .cro_left_bottom {\n        left: -1px;\n        bottom: -1px;\n        border-radius: 0 20px 0 0;\n        border-top: 1px solid #58C4E6;\n        border-right: 1px solid #58C4E6;\n    }\n \n    .cro_right_bottom {\n        right: -1px;\n        bottom: -1px;\n        border-radius: 20px 0 0 0;\n        border-top: 1px solid #58C4E6;\n        border-left: 1px solid #58C4E6;\n    }\n</style>\n</head>\n<body>\n<div class=\"cro\">\n    <div class=\"cro_left_top\"></div>\n    <div class=\"cro_right_top\"></div>\n    <div class=\"cro_left_bottom\"></div>\n    <div class=\"cro_right_bottom\"></div>\n</div>\n</body>\n</html>\n```",
      "data": {
        "title": "css 实现内凹圆角",
        "date": "2020-01-07 13:41:29",
        "tags": [
          "CSS3"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css-shi-xian-nei-ao-yuan-jiao"
    },
    {
      "content": "## iframe常用属性:\n```\n1. frameborder:是否显示边框，1(yes),0(no)\n2. height:框架作为一个普通元素的高度，建议在使用css设置。\n3. width:框架作为一个普通元素的宽度，建议使用css设置。\n4. name:框架的名称，window.frames[name]时专用的属性。\n5. scrolling:框架的是否滚动。yes,no,auto。\n6. src：内框架的地址，可以使页面地址，也可以是图片的地址。\n7. srcdoc , 用来替代原来HTML body里面的内容。但是IE不支持, 不过也没什么卵用\n8. sandbox: 对iframe进行一些列限制，IE10+支持\n```\n---\n## 获取iframe里的内容\n```\n var iframe = document.getElementById(\"iframe1\");\n var iwindow = iframe.contentWindow;\n var idoc = iwindow.document;\n        console.log(\"window\",iwindow);//获取iframe的window对象\n        console.log(\"document\",idoc);  //获取iframe的document\n        console.log(\"html\",idoc.documentElement);//获取iframe的html\n        console.log(\"head\",idoc.head);  //获取head\n        console.log(\"body\",idoc.body);  //获取body\n```\n```\n<iframe src =\"/index.html\" id=\"ifr1\" name=\"ifr1\" scrolling=\"yes\">\n  <p>Your browser does not support iframes.</p>\n</iframe>\n<script type=\"text/javascript\">\n\tconsole.log(window.frames['ifr1'].window);\nconsole.dir(document.getElementById(\"ifr1\").contentWindow);\n</script>\n```\n## 在iframe中获取父级内容\n```\nwindow.parent 获取上一级的window对象，如果还是iframe则是该iframe的window对象\nwindow.top 获取最顶级容器的window对象，即，就是你打开页面的文档\nwindow.self 返回自身window的引用。可以理解 window===window.self(脑残)\n```",
      "data": {
        "title": "iframe",
        "date": "2020-01-01 11:04:02",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "iframe"
    },
    {
      "content": "## CSS单行文字居中，多行文字居左的实现方式\n### 1.父级`text-align:center`，子级`inline-block+text-align:left`\n\n```css\n.content{\n    text-align: center;\n}\n.text{\n    display: inline-block;\n    text-align: left;\n}\n```\n### 2.`width:fit-content` + `margin:auto`\n块级block元素可以在设置宽度后直接通过margin:0 auto来实现居中，但是必须指明宽度，不然就水平填充了，这两者的关系很微妙，有没有什么办法能够让块级block元素的宽度像inline-block元素跟随内部元素呢？\n>width:fit-content可以实现元素收缩效果的同时，保持原本的block水平状态，于是，就可以直接使用margin:auto实现元素向内自适应同时的居中效果了。\n```html\n<p class=\"text\">这段文字能不能这样判断一下，当文字不足一行时，让它居中显示，当文字超过一行就让它居左</p>\n```\n```css\n.text{\n    width: fit-content;\n    width: -moz-fit-content;//火狐需要-moz-前缀\n    margin: 0 auto;\n}\n```",
      "data": {
        "title": "CSS单行文字居中，多行文字居左的实现方式",
        "date": "2019-12-25 15:42:11",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css-dan-xing-wen-zi-ju-zhong-duo-xing-wen-zi-ju-zuo-de-shi-xian-fang-shi"
    },
    {
      "content": "```js\njQuery.fn.serializeJSON = function () {\n    var json = {};\n    jQuery.map(jQuery(this).serializeArray(), function (n, i) {\n        var _ = n.name.indexOf('[');\n        if (_ > -1) {\n            var o = json;\n            _name = n.name.replace(/\\]/gi, '').split('[');\n            for (var i = 0, len = _name.length; i < len; i++) {\n                if (i == len - 1) {\n                    if (o[_name[i]]) {\n                        if (typeof o[_name[i]] == 'string') {\n                            o[_name[i]] = [o[_name[i]]];\n                        }\n                        o[_name[i]].push(n.value);\n                    }\n                    else o[_name[i]] = n.value || '';\n                }\n                else o = o[_name[i]] = o[_name[i]] || {};\n            }\n        }\n        else {\n            if (json[n.name] !== undefined) {\n                if (!json[n.name].push) {\n                    json[n.name] = [json[n.name]];\n                }\n                json[n.name].push(n.value || '');\n            }\n            else json[n.name] = n.value || '';\n        }\n    });\n    return json;\n};\n```",
      "data": {
        "title": "jQ serializeJSON 表单格式化，支持数组",
        "date": "2019-12-19 08:50:16",
        "tags": [
          "表单"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jq-serializejson-biao-dan-ge-shi-hua-zhi-chi-shu-zu"
    },
    {
      "content": "## JS正则表达式获取指定字符之后指定字符之前的字符串\n```js\nvar bgImg = \"url(\\\"https://img30.360buyimg.com/sku/jfs/t26203/262/100869187/204098/1d1479e9/5b84b80bNf39db45f.jpg\\\")\";\n```\n### 方法1\n```js\nvar backgroundImageRegex=/(?<=url\\(\").+(?=\"\\))/;\nvar matchResult=bgImg.match(backgroundImageRegex);\nif(matchResult.length>0){\n  alert(matchResult[0]);\n}\n```\n### 方法2\n```js\nvar backgroundImageRegex=/\\((.*)\\)/;\nvar matchResult=bgImg.match(backgroundImageRegex);\n```\nhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions",
      "data": {
        "title": "js 正则获取指定字符之后指定字符之前",
        "date": "2019-12-18 13:38:01",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-zheng-ze-huo-qu-zhi-ding-zi-fu-zhi-hou-zhi-ding-zi-fu-zhi-qian"
    },
    {
      "content": "### 三个函数的作用都是将函数绑定到上下文中，用来改变函数中this的指向；三者的不同点在于语法的不同。\n```js\nfun.call(thisArg[, arg1[, arg2[, ...]]])\nfun.apply(thisArg, [argsArray])\n```\n所以apply和call的区别是call方法接受的是若干个参数列表，而apply接收的是一个包含多个参数的数组。\n而bind()方法创建一个新的函数, 当被调用时，将其this关键字设置为提供的值，在调用新函数时，在任何提供之前提供一个给定的参数序列。\n```js\nvar bindFn = fun.bind(thisArg[, arg1[, arg2[, ...]]])\nbindFn()\n```\n## Demos\n```js\nvar name = 'window';\nvar sayName = function (param) {\n    console.log('my name is:' + this.name + ',my param is ' + param)\n};\n//my name is:window,my param is window param\nsayName('window param')\n\nvar callObj = {\n    name: 'call'\n};\n//my name is:call,my param is call param\nsayName.call(callObj, 'call param');\n\n\nvar applyObj = {\n    name: 'apply'\n};\n//my name is:apply,my param is apply param\nsayName.apply(applyObj, ['apply param']);\n\nvar bindObj = {\n    name: 'bind'\n}\nvar bindFn = sayName.bind(bindObj, 'bind param')\n//my name is:bind,my param is bind param\nbindFn();\n\n```",
      "data": {
        "title": "call,apply和bind区别",
        "date": "2019-12-13 14:44:31",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "callapply-he-bind-qu-bie"
    },
    {
      "content": "btoa和atob是window对象的两个函数，其中btoa是binary to ascii，用于将binary的数据用ascii码表示，即Base64的编码过程，而atob则是ascii to binary，用于将ascii码解析成binary数据，看一个例子：\n```js\n// Define the string\nvar string = 'Hello World!';\n\n// Encode the String\nvar encodedString = btoa(string);\nconsole.log(encodedString); // Outputs: \"SGVsbG8gV29ybGQh\"\n\n// Decode the String\nvar decodedString = atob(encodedString);\nconsole.log(decodedString); // Outputs: \"Hello World!\"\n```\natob和btoa不能编码Unicode字符：\n```js\nvar string = \"Hello, 中国！\";\nwindow.btoa(string);\n```\n那如何用这种方式支持汉字呢？这里我们可以先将带有非Latin1字符的串先用encodeURIComponent编码：\n```\nvar string = \"Hello, 中国！\";\n//\"SGVsbG8lMkMlMjAlRTQlQjglQUQlRTUlOUIlQkQlRUYlQkMlODE=\"\nvar encodedString = btoa(encodeURIComponent(string));\nvar decodedString = decodeURIComponent(atob(encodedString));\nconsole.log(decodedString); //\"Hello, 中国！\"\n```\nhttps://my.oschina.net/itblog/blog/1613977\nhttps://scotch.io/tutorials/how-to-encode-and-decode-strings-with-base64-in-javascript",
      "data": {
        "title": "用 btoa 和 atob 来编码解码Base64",
        "date": "2019-12-13 10:50:33",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "yong-btoa-he-atob-lai-bian-ma-jie-ma-base64"
    },
    {
      "content": "## 子组件替换/合并已有的特性\n在Vue中对于绝大多数特性来说，从外部提供给组件的值会替换掉组件内部设置好的值。所以如果传入type=\"text\"就会替换掉 type=\"date\"并把它破坏！庆幸的是，class和 style特性会稍微智能一些，即两边的值会被合并起来，从而得到最终的值，举个例子：\n\n```html\n<div id=\"app\">\n  <base-input type=\"text\" class=\"out\"></base-input>\n</div>\n```\n```js\nVue.component('base-input', {\n  template: `<input type=\"date\" placeholder=\"replace\" class=\"default\">`\n})\nnew Vue({\n  el: '#app',\n})\n```\n在上例中input的type值为date，class为deafault，在使用子组件时，向`子组件`中传入`type=\"text\" class=\"out\"`，此时input的type值会被替换为text，class值会被合并为\"default out\"，那么如果想要禁用属性继承怎么办呢？可以在组件的选项中设置`inheritAttrs: false`，举个例子：\n\n```js\nVue.component('base-input', {\n  inheritAttrs: false,\n  template: `<input type=\"date\" placeholder=\"replace\" class=\"default\">`\n})\n```\n但是`inheritAttrs: false`选项不会影响style和class的绑定，因此style和class还是会合并",
      "data": {
        "title": "Vue -- inheritAttrs",
        "date": "2019-12-10 16:01:11",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-inheritattrs"
    },
    {
      "content": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title>Document</title>\n  </head>\n  <body>\n    <!--飘窗-->\n    <div id=\"roll\">\n      <div class=\"title\">\n        通知\n      </div>\n      <div class=\"content\">\n        自2019年9月29日起，取消 <span>河南省二级建造师临时执业证书</span> ，不再办理临时二级建造师各项注册业务。临时二级建造师申请的安管人员证书不再延续，不需进行继续教育。\n      </div>\n    </div>\n    <style>\n      #roll {\n        /* height: 460px; */\n        width: 460px;\n        position: fixed; /*fixed实现绝对定位*/\n        cursor: pointer;\n        background-color: aliceblue;\n        padding: 20px 20px 30px 20px;\n        box-shadow: 0 0 20px #ccc;\n        z-index: 99;\n      }\n      #roll .title{ text-align: center; font-size: 24px; margin-bottom: 20px; }\n      #roll .content{  font-size: 18px; text-indent: 2em; line-height: 1.6; text-align: justify; } \n      #roll .content span{ color: #f33;  font-style: italic;  } \n    </style>\n    <script>\n      var ggRoll = {\n        //创建对象直接量\n        roll: document.getElementById(\"roll\"), //获取id属性为roll的对象\n        speed: 20, //飘动速度，即为定时器函数多长时间执行一次\n        statusX: 1, //规定每执行一次函数，left属性值变化的幅度\n        statusY: 1, //规定每执行一次函数，top属性值变化的幅度\n        x: 100, //规定初始状态下left属性的值\n        y: 300, //规定初始状态下top属性的值\n        //差值用来测算left属性值的极限\n        winW: function(){  \n         return document.documentElement.clientWidth -\n         this.roll.offsetWidth\n        },\n        //差值用来测算top属性值的极限\n        winH:function(){\n         return document.documentElement.clientHeight -\n         this.roll.offsetHeight\n        },\n        //声明函数\n        Go: function() {\n          //设置div的left属性值\n          this.roll.style.left = this.x + \"px\";\n          //设置div的top属性值\n          this.roll.style.top = this.y + \"px\";\n          //如果statusX=1则每次减少1px,否则减少1px\n          this.x = this.x + (this.statusX ? -1 : 1);\n          //如果left属性值小于0，也就是div要超出左边界了，就将statusX设置为0\n          if (this.x < 0) {\n            this.statusX = 0;\n          }\n          //如果top属性值大于winW，也就是div要超出右边界了，就将statusX设置为1\n          if (this.x > this.winW()) {\n            this.statusX = 1;\n          }\n\n          this.y = this.y + (this.statusY ? -1 : 1);\n          if (this.y < 0) {\n            this.statusY = 0;\n          }\n          if (this.y > this.winH()) {\n            this.statusY = 1;\n          }\n        }\n      };\n\n      var interval = setInterval(\"ggRoll.Go()\", ggRoll.speed); \n      ggRoll.roll.onmouseover = function() { \n        clearInterval(interval);\n      }; //onmouseover属性：鼠标移动到元素上时触发\n      ggRoll.roll.onmouseout = function() {\n        interval = setInterval(\"ggRoll.Go()\", ggRoll.speed);\n      }; //onmouseout属性:鼠标离开元素时触发\n      // window.onresize = function(){ \n      //   clearInterval(interval);\n      //   interval = setInterval(\"ggRoll.Go()\", ggRoll.speed); \n      // }\n    </script>\n  </body>\n</html>\n\n```\n```js\n      class PiaoChuang {\n        constructor(id) {\n          this.interval = null;\n          this.id = id;\n          this.roll = document.getElementById(this.id);\n          this.speed = 20; //飘动速度，即为定时器函数多长时间执行一次\n          this.statusX = 1; //规定每执行一次函数，left属性值变化的幅度\n          this.statusY = 1; //规定每执行一次函数，top属性值变化的幅度\n          this.x = 100; //规定初始状态下left属性的值\n          this.y = 300; //规定初始状态下top属性的值\n        }\n        init(){\n          this.interval = setInterval(this.Go.bind(this), this.speed);\n          //onmouseover属性：鼠标移动到元素上时触发\n          this.roll.onmouseover = ()=>{\n            clearInterval(this.interval);\n          };\n          //onmouseout属性:鼠标离开元素时触发\n          this.roll.onmouseout = ()=>{\n            this.interval = setInterval(this.Go.bind(this), this.speed);\n          };\n        }\n        //差值用来测算left属性值的极限\n        winW() {\n          return document.documentElement.clientWidth - this.roll.offsetWidth;\n        }\n        //差值用来测算top属性值的极限\n        winH() {\n          return document.documentElement.clientHeight - this.roll.offsetHeight;\n        }\n        Go() {\n          //设置div的left属性值\n          this.roll.style.left = this.x + \"px\";\n          //设置div的top属性值\n          this.roll.style.top = this.y + \"px\";\n          //如果statusX=1则每次减少1px,否则减少1px\n          this.x = this.x + (this.statusX ? -1 : 1);\n          //如果left属性值小于0，也就是div要超出左边界了，就将statusX设置为0\n          if (this.x < 0) {\n            this.statusX = 0;\n          }\n          //如果top属性值大于winW，也就是div要超出右边界了，就将statusX设置为1\n          if (this.x > this.winW()) {\n            this.statusX = 1;\n          }\n\n          this.y = this.y + (this.statusY ? -1 : 1);\n          if (this.y < 0) {\n            this.statusY = 0;\n          }\n          if (this.y > this.winH()) {\n            this.statusY = 1;\n          }\n        }\n      }\n      const piaochuang = new PiaoChuang(\"roll\"); \n      piaochuang.init()\n```",
      "data": {
        "title": "飘窗",
        "date": "2019-11-21 11:15:30",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "piao-chuang"
    },
    {
      "content": "[https://juejin.im/post/5dc81ea36fb9a04a6f0fec28](https://juejin.im/post/5dc81ea36fb9a04a6f0fec28)",
      "data": {
        "title": "前端SKU算法的实现",
        "date": "2019-11-12 08:41:51",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "qian-duan-sku-suan-fa-de-shi-xian"
    },
    {
      "content": "```\nimport {notification} from 'ant-design-vue';\n\nconst codeMessage = {\n    200: '服务器成功返回请求的数据。',\n    201: '新建或修改数据成功。',\n    202: '一个请求已经进入后台排队（异步任务）。',\n    204: '删除数据成功。',\n    400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n    401: '用户没有权限（令牌、用户名、密码错误）。',\n    403: '用户得到授权，但是访问是被禁止的。',\n    404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n    406: '请求的格式不可得。',\n    410: '请求的资源被永久删除，且不会再得到的。',\n    422: '当创建一个对象时，发生一个验证错误。',\n    500: '服务器发生错误，请检查服务器。',\n    502: '网关错误。',\n    503: '服务不可用，服务器暂时过载或维护。',\n    504: '网关超时。'\n};\nfunction checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response;\n    }\n    const errortext = codeMessage[response.status] || response.statusText;\n    notification.error({\n        message: `请求错误 ${response.status}: ${response.url}`,\n        description: errortext\n    });\n    const error = new Error(errortext);\n    error.name = response.status;\n    error.response = response;\n    throw error;\n}\n\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\nexport default function request(url, options) {\n    const defaultOptions = {\n        // credentials: 'include',\n    };\n    const newOptions = {...defaultOptions, ...options};\n    if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\n        if (!(newOptions.body instanceof FormData)) {\n            newOptions.headers = {\n                Accept: 'application/json',\n                'Content-Type': 'application/json; charset=utf-8',\n                ...newOptions.headers\n            };\n            newOptions.body = JSON.stringify(newOptions.body);\n        } else {\n            // newOptions.body is FormData\n            newOptions.headers = {\n                Accept: 'application/json',\n                ...newOptions.headers\n            };\n        }\n    }\n\n    return fetch(url, newOptions)\n        .then(checkStatus)\n        .then(response => {\n            if (newOptions.method === 'DELETE' || response.status === 204) {\n                return response.text();\n            }\n            return response.json();\n        })\n        .catch(e => {\n            const status = e.name;\n            if (status === 401) {\n                window.location.hash = '#/user/login';\n                return;\n            }\n            if (status === 403) {\n                window.location.hash = '#/exception/403';\n                return;\n            }\n            if (status <= 504 && status >= 500) {\n                window.location.hash = '#/exception/500';\n                return;\n            }\n            if (status >= 404 && status < 422) {\n                window.location.hash = '#/exception/404';\n                return;\n            }\n        });\n}\n\n```",
      "data": {
        "title": "Myrequest.js",
        "date": "2019-11-06 16:39:12",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "myrequestjs"
    },
    {
      "content": "## videojs 使用\n### 安装 npm 包\n#### vue-video-player\n#### videojs-contrib-hls\n### main.js 引用\n### 查看 videojs api\n```html\n<template>\n  <section class=\"demo\">\n    <video-player\n      ref=\"videoPlayer\"\n      class=\"video-player vjs-custom-skin\"\n      :playsinline=\"true\"\n      :options=\"playerOptions\"\n      @play=\"onPlayerPlay($event)\"\n      @pause=\"onPlayerPause($event)\"\n    />\n  </section>\n</template>\n\n<script>\n// vue-video-player\n// import VideoPlayer from 'vue-video-player'\n// require('video.js/dist/video-js.css')\n// require('vue-video-player/src/custom-theme.css')\n// const hls = require('videojs-contrib-hls')\n// Vue.use(hls)\n// Vue.use(VideoPlayer)\n// vue-video-player end\nexport default {\n  name: 'Demo',\n  components: { },\n  data() {\n    return {\n      playerOptions: {\n        // playbackRates: [0.7, 1.0, 1.5, 2.0], //播放速度\n        autoplay: false, // 如果true,浏览器准备好时开始回放。\n        muted: false, // 默认情况下将会消除任何音频。\n        loop: false, // 导致视频一结束就重新开始。\n        preload: 'auto', // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        language: 'zh-CN',\n        aspectRatio: '16:9', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n        sources: [\n          {\n            type: 'application/x-mpegURL', // 这里的种类支持很多种：基本视频格式、直播、流媒体等，具体可以参看git网址项目\n            src:\n              'https://node.imgio.in/demo/birds.m3u8' // url地址，从别的博主那看来的地址，亲测可用\n          }\n          // {\n          //   type: 'video/mp4', // 这里的种类支持很多种：基本视频格式、直播、流媒体等，具体可以参看git网址项目\n          //   src: 'https://cdn.theguardian.tv/webM/2015/07/20/150716YesMen_synd_768k_vp8.webm' // url地址\n          // }\n        ],\n        hls: true,\n        poster: 'http://pic33.nipic.com/20131007/13639685_123501617185_2.jpg', // 你的封面地址\n        width: document.documentElement.clientWidth, // 播放器宽度\n        notSupportedMessage: '此视频暂无法播放，请稍后再试', // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\n        controlBar: {\n          timeDivider: true,\n          durationDisplay: true,\n          remainingTimeDisplay: false,\n          fullscreenToggle: true // 全屏按钮\n        }\n      }\n    }\n  },\n  computed: {\n    player() {\n      return this.$refs.videoPlayer.player// 自定义播放\n    }\n  },\n  watch: {},\n  mounted() {},\n  methods: {\n    onPlayerPlay() {\n\n    },\n    onPlayerPause() {\n\n    }\n  }\n}\n</script>\n\n<style scoped  >\n\n</style>\n\n```\n[参考](https://segmentfault.com/a/1190000020149370)",
      "data": {
        "title": "videojs-vue",
        "date": "2019-11-04 18:30:52",
        "tags": [
          "video"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "videojs-vue"
    },
    {
      "content": "## 将\"激活时的CSS类名\"应用在外层元素\n\n有时候我们要让 \"激活时的CSS类名\" 应用在外层元素，而不是 `<a>` 标签本身，那么可以用 `<router-link> `渲染外层元素，包裹着内层的原生`<a>` 标签：\n```\n<router-link tag=\"li\" to=\"/foo\"> \n  <a>/foo</a>\n</router-link>\n```\n在这种情况下，`<a> `将作为真实的链接（它会获得正确的 href 的），而 \"激活时的CSS类名\" 则设置到外层的 `<li>`。 \n\n原文链接：https://blog.csdn.net/qq_35624642/article/details/78910194",
      "data": {
        "title": "vue-router",
        "date": "2019-10-31 10:35:20",
        "tags": [
          "vue-router"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-router"
    },
    {
      "content": "[从WebPack 4.X 到 Vue-Cli 3.X 一篇就够](https://juejin.im/post/5dab320851882565f7660c5e)\n```js\n/* \n    在这个文件中设置我们自定义的打包规则\n        1. 所有的规则都写在module.exports={}中\n*/\nlet path = require('path');\nlet HtmlWebpackPlugin = require('html-webpack-plugin');\nlet MiniCssExtractPlugin = require('mini-css-extract-plugin'), //把css单独分离出来\n    OptimizeCssAssetsWebpackPlugin = require('optimize-css-assets-webpack-plugin'), //压缩css\n    UglifyjsWebpackPlugin = require('uglifyjs-webpack-plugin'); //压缩js\nlet webpack = require('webpack');\n//导入进来的插件都是一个类  new HtmlWebpackPlugin({});\n\nmodule.exports = {\n    //配置优化规则\n    optimization: {\n        //设置压缩方式\n        minimizer: [\n            //压缩css  (产生问题：JS压缩不在执行自己默认的压缩方式了，也走的是这个插件，从而导致无法压缩，所以必须设置JS的压缩方式)\n            new OptimizeCssAssetsWebpackPlugin(),\n            //压缩js\n            new UglifyjsWebpackPlugin({\n                cache: true, //是否使用缓存\n                parallel: true, //是否是兵法编译\n                sourceMap: true, //启动源码映射（方便调试）\n            })\n        ]\n    },\n    //配置环境 开发环境development  生产环境production(默认)\n    mode: 'production',\n    //入口\n    entry: ['@babel/polyfill', './src/index-my.js'],\n    //出口\n    output: {\n        //输出文件的文件名\n        //bundle.min.[hash].js 让每一次生成的文件名都带着hash值\n        filename: 'bundle.min.js',\n        // filename: 'bundle.min.[hash].js',\n        //输出的目录必须是绝对路径,__dirname当前目录\n        path: path.resolve(__dirname, 'dist'),\n        publicPath: './' //给编译后引入资源地址前面设置的前缀\n    },\n    //关于webpack-dev-server的一些配置  执行命令：webpack-dev-server --config xxx.js (特点：服务启动后，默认是不关闭的，当我们修改src中的源文件，他会自动进行编译，然后自动刷新浏览器,类似于vscode中的Live Server插件，实时刷新)\n    devServer: {\n        //创建服务指定的端口号\n        port: 3000,\n        //显示打包编译进度\n        progress: true,\n        //指定当前服务处理资源的目录\n        contentBase: './dist',\n        //编译完成后，自动打开浏览器\n        open: true\n    },\n    //使用插件 (数组)\n    plugins: [\n        new HtmlWebpackPlugin({\n            //不指定模版会按照默认模版创建一个html页面，当然真实项目中一般都是把自己写好的html进行编译\n            template: './src/index.html',\n            //输出的文件名\n            filename: 'index.html',\n            //让我们引入js后面加上hash戳（清除缓存）,但是真实项目中我们一般都是每一次编译生成不同的js文件引入\n            hash: true,\n            //控制压缩\n            minify: {\n                collapseWhitespace: true,\n                removeComments: true,\n                removeAttributeQuotes: true,\n                removeEmptyAttributes: true\n            }\n        }),\n        new MiniCssExtractPlugin({\n            //指定输出的文件名\n            filename: 'main.min.css'\n        }),\n        //在每个模块中都注入$\n        new webpack.ProvidePlugin({\n            '$': 'jquery'\n        }),\n    ],\n    //使用加载器loader处理规则\n    module: {\n        rules: [{\n            //基于正则匹配处理哪些文件\n            test: /\\.(css|less)$/,\n            //使用哪一个加载器，控制使用的loader（有顺序的：从右到左执行）\n            use: [\n                // \"style-loader\", //把编译好的css插入到页面的head中（内嵌式）\n                MiniCssExtractPlugin.loader, //使用插件中的loader代替style方式\n                \"css-loader\", //编译解析@import/URL()这种语法\n                // \"postcss-loader\",//设置前缀的加载器\n                {\n                    loader: \"postcss-loader\",\n                    options: {\n                        ident: 'postcss',\n                        plugins: [\n                            require('autoprefixer')\n                        ]\n                    }\n                },\n                {\n                    loader: \"less-loader\", //编译less\n                    options: {\n                        //加载额外的配置\n                    }\n                }\n            ]\n        }, {\n            test: /\\.js$/,\n            //处理编译JS的loader\n            use: [{\n                loader: 'babel-loader',\n                options: {\n                    //转换的语法预设（ES6->ES5)\n                    presets: [\n                        \"@babel/preset-env\"\n                    ],\n                    //=>基于插件处理ES6/ES7中CLASS的特殊语法\n                    plugins: [\n                        [\"@babel/plugin-proposal-decorators\", {\n                            \"legacy\": true //处理装饰器\n                        }],\n                        [\"@babel/plugin-proposal-class-properties\", {\n                            \"loose\": true //处理属性\n                        }],\n                        \"@babel/plugin-transform-runtime\"\n                    ]\n                }\n            }],\n            //设置编译时忽略的文件和指定编译目录\n            include: path.resolve(__dirname, 'src'), //编译的\n            exclude: /node_modules/ //忽略的·\n        }, {\n            //图片处理\n            test: /\\.(png|jpg|gif|jpeg|ico|webp|bpm)$/i,\n            use: [{\n                loader: 'url-loader',\n                options: {\n                    //只要图片小于200KB,在处理的时候直接base64\n                    limit: 2 * 1024,\n                    //控制打包后图片所在的目录\n                    outputPath: 'images'\n                }\n            }]\n        }, {\n            //处理HTML文件中导入的img文件\n            test: /\\.(html|htm|xml)$/i,\n            use: ['html-withimg-loader']\n        }]\n    }\n}\n\n```",
      "data": {
        "title": "Webpack",
        "date": "2019-10-21 09:55:18",
        "tags": [
          "Webpack"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "webpack"
    },
    {
      "content": "[Exif.js+Canvas实现移动端图片压缩、旋转、上传预览功能小结](https://www.xinran001.com/frontend/278.html)",
      "data": {
        "title": "Exif.js+Canvas实现移动端图片压缩、旋转、上传预览功能小结",
        "date": "2019-10-10 17:12:24",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "exifjscanvas-shi-xian-yi-dong-duan-tu-pian-ya-suo-xuan-zhuan-shang-chuan-yu-lan-gong-neng-xiao-jie"
    },
    {
      "content": "分辨率比较低的屏幕下显示1px的边框会显得模糊，通过::before或::after和transform模拟细腻的1px边框\n```scss\n.onepx-border {\n\tmargin-top: 10px;\n\twidth: 200px;\n\theight: 80px;\n\tcursor: pointer;\n\tline-height: 80px;\n\ttext-align: center;\n\tfont-weight: bold;\n\tfont-size: 50px;\n\tcolor: $red;\n\t&:first-child {\n\t\tmargin-top: 0;\n\t}\n}\n.normal {\n\tborder: 1px solid $red;\n}\n.thin {\n\tposition: relative;\n\t&::after {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\twidth:200%;\n\t\theight:200%;\n\t\tborder: 1px solid $red;\n\t\tcontent: \"\";\n\t\ttransform: scale(.5);\n\t\ttransform-origin: left top;\n\t}\n}\n```",
      "data": {
        "title": "使用transform描绘1px边框",
        "date": "2019-10-10 17:11:13",
        "tags": [
          "scss"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "shi-yong-transform-miao-hui-1px-bian-kuang"
    },
    {
      "content": "[javascript判断IE浏览器版本和Edge代码](https://www.xinran001.com/frontend/284.html)\n\n## IE不标准的地方，unshift方法会返回新数组的长度，但IE6与IE7则返回undefined。\n```js\nconsole.log([1].unshift(8))\n//IE6、IE7下返回undefined，其它都是返回2\n```\n## 判断是否为IE8及以下版本\n```js\nif (!+[1,]) {\n    alert('<=8');\n}\n```\n## 判断是否为IE9及以下版本\n```js\n//方法一：\nif (!('placeholder' in document.createElement('input'))) {\n        alert('<=9');\n}\n//（IE9及以下版本不支持placeholder，代码较少） \n\n//方法二： \nif (navigator.appName == \"Microsoft Internet Explorer\" && parseInt(navigator.appVersion.split(\";\")[1].replace(/[ ]/g, \"\").replace(\"MSIE\", \"\")) < 10) {\n        alert('<=9');\n    }\n```\n## 判断是否为 IE10 及以下版本\n```js\nif (!!document.all) {\n    alert('<=10');\n}\n```\n## 判断是否为 IE 浏览器\n```js\nif(!!window.ActiveXObject || \"ActiveXObject\" in window){\n    alert('Is IE');\n}\n```\n## 判断是否为 Edge 浏览器\n```js\nif (navigator.userAgent.indexOf(\"Edge\") > -1) {\n        alert('Is Edge');\n}\n```\n## 判断是否为指定版本IE，比如判断是否为IE8或者IE10\n```js\nif (\n    navigator.appName == \"Microsoft Internet Explorer\" \n    && \n    navigator.appVersion.split(\";\")[1].replace(/[ ]/g, \"\")\n    in \n    {\n    'MSIE8.0': '',\n    'MSIE10.0': ''\n    }\n) {\n    alert(true)\n}\n```",
      "data": {
        "title": "javascript判断IE浏览器版本和Edge代码",
        "date": "2019-10-10 16:54:41",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "javascript-pan-duan-ie-liu-lan-qi-ban-ben-he-edge-dai-ma"
    },
    {
      "content": "```js\nvar getMonthWeek = function(a, b, c) {\n    var date = new Date(a,parseInt(b) - 1,c)\n      , w = date.getDay()\n      , d = date.getDate();\n    return Math.ceil((d + 6 - w) / 7);\n};\n\nvar getYearWeek = function(a, b, c) {\n    var date1 = new Date(a,parseInt(b) - 1,c)\n      , date2 = new Date(a,0,1)\n      , d = Math.round((date1.valueOf() - date2.valueOf()) / 86400000);\n    return Math.ceil((d + ((date2.getDay() + 1) - 1)) / 7);\n};\n\nvar today = new Date();\n//获取当前时间\nvar y = today.getFullYear();\nvar m = today.getMonth() + 1;\nvar d = today.getDate();\ndocument.write(\"<p>今天是：\", y, \"-\", m, \"-\", d, \"</p>\");\ndocument.write(\"<p>今天是\", y, \"年的第\", getYearWeek(y, m, d), \"周</p>\");\ndocument.write(\"<p>今天是\", m, \"月的第 \", getMonthWeek(y, m, d), \" 周</p>\");\nvar quarter = \"\";\nvar result = getYearWeek(y, m, d);\nif (m < 4) {\n    quarter = 1;\n    week = result;\n} else if (m < 7) {\n    quarter = 2;\n    week = result - getYearWeek(y, 4, 1);\n    var day = new Date(y,4,1);\n    if (day.getDay() > 1) {\n        week += 1;\n    }\n} else if (m < 10) {\n    quarter = 3;\n    week = result - getYearWeek(y, 7, 1);\n    var day = new Date(y,7,1);\n    if (day.getDay() > 1) {\n        week += 1;\n    }\n} else {\n    quarter = 4;\n    week = result - getYearWeek(y, 10, 1);\n    var day = new Date(y,10,1);\n    if (day.getDay() > 1) {\n        week += 1;\n    }\n}\ndocument.write(\"<p>今天是第\", quarter, \"季度的第 \", week, \" 周</p>\");\n\n```",
      "data": {
        "title": "获得年度的第几周",
        "date": "2019-10-09 15:12:42",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "huo-de-nian-du-de-di-ji-zhou"
    },
    {
      "content": "# 弹出式环形菜单(https://codepen.io/HelKyle/pen/qygvJz)\n```html\n<div class=\"popping-menu\">\n<input class=\"checkbox\" id=\"checkbox\" type=\"checkbox\" />\n<button>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\" fill=\"white\">\n<g>\n\t<g>\n\t\t<g>\n\t\t\t<path d=\"M384,0H128c-14.138,0-25.6,11.461-25.6,25.6v460.8c0,14.138,11.461,25.6,25.6,25.6h256c14.138,0,25.6-11.461,25.6-25.6     V25.6C409.6,11.461,398.138,0,384,0z M392.533,68.267H196.267c-4.713,0-8.533,3.82-8.533,8.533s3.82,8.533,8.533,8.533h196.267     v332.8h-25.6c-4.713,0-8.533,3.82-8.533,8.533s3.82,8.533,8.533,8.533h25.6v51.2c0,4.713-3.82,8.533-8.533,8.533H128     c-4.713,0-8.533-3.82-8.533-8.533v-51.2h196.267c4.713,0,8.533-3.82,8.533-8.533s-3.82-8.533-8.533-8.533H119.467v-332.8h25.6     c4.713,0,8.533-3.82,8.533-8.533s-3.82-8.533-8.533-8.533h-25.6V25.6c0-4.713,3.82-8.533,8.533-8.533h256     c4.713,0,8.533,3.82,8.533,8.533V68.267z\"></path>\n\t\t\t<path d=\"M264.533,460.8h-17.067c-4.713,0-8.533,3.82-8.533,8.533s3.82,8.533,8.533,8.533h17.067c4.713,0,8.533-3.82,8.533-8.533     S269.246,460.8,264.533,460.8z\"></path>\n\t\t</g>\n\t</g>\n</g>\n</svg>\n</button>\n<button><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.001 512.001\" style=\"enable-background:new 0 0 512.001 512.001;\" xml:space=\"preserve\" fill=\"white\">\n<g>\n\t<g>\n\t\t<path d=\"M356,145.993c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10c5.52,0,10-4.48,10-10S361.52,145.993,356,145.993z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M156,345.993c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10s10-4.48,10-10C166,350.473,161.52,345.993,156,345.993z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M508.532,214.332c-0.811-4.815-4.98-8.34-9.862-8.34h-38.684c-5.079-20.77-13.275-40.497-24.447-58.838l29.082-29.081    c3.453-3.454,3.907-8.897,1.073-12.875c-16.262-22.821-36.079-42.638-58.9-58.9c-3.977-2.833-9.419-2.381-12.875,1.073    l-29.081,29.082C346.497,65.282,326.77,57.084,306,52.006V13.323c0-4.882-3.525-9.051-8.34-9.861    c-27.347-4.604-55.973-4.604-83.319,0C209.525,4.272,206,8.441,206,13.323v38.683c-20.778,5.08-40.508,13.278-58.839,24.446    l-29.08-29.081c-3.454-3.454-8.897-3.908-12.875-1.073c-22.821,16.262-42.638,36.079-58.9,58.9    c-2.834,3.978-2.38,9.42,1.073,12.875l29.082,29.081c-11.172,18.341-19.368,38.068-24.447,58.838H13.33    c-4.882,0-9.051,3.525-9.861,8.34C1.167,228.007,0,242.022,0,255.993c0,13.97,1.167,27.986,3.469,41.66    c0.811,4.815,4.979,8.34,9.861,8.34h38.683c5.08,20.778,13.278,40.508,24.446,58.839l-29.081,29.08    c-3.453,3.454-3.907,8.897-1.073,12.875c16.262,22.821,36.079,42.638,58.9,58.9c3.977,2.834,9.42,2.381,12.875-1.073    l29.081-29.082C165.503,446.704,185.23,454.9,206,459.978v38.684c0,4.882,3.525,9.051,8.34,9.861    c13.671,2.302,27.688,3.469,41.66,3.469s27.989-1.167,41.66-3.469c4.814-0.811,8.34-4.979,8.34-9.861V459.98    c20.778-5.08,40.508-13.278,58.839-24.446l29.08,29.081c3.454,3.453,8.896,3.906,12.875,1.073    c22.821-16.262,42.638-36.079,58.9-58.9c2.834-3.978,2.38-9.42-1.073-12.875L435.54,364.83    c11.172-18.341,19.368-38.068,24.447-58.838h38.684c4.882,0,9.051-3.525,9.861-8.34c2.302-13.673,3.469-27.69,3.469-41.66    C512.001,242.022,510.834,228.007,508.532,214.332z M490.054,285.993H451.98c-4.754,0-8.851,3.347-9.799,8.006    c-4.855,23.854-14.18,46.298-27.715,66.708c-2.629,3.965-2.101,9.234,1.263,12.598l28.658,28.658    c-12.254,15.943-26.475,30.163-42.417,42.417l-28.658-28.658c-3.364-3.365-8.634-3.893-12.6-1.261    c-20.395,13.532-42.837,22.856-66.706,27.714c-4.659,0.948-8.006,5.045-8.006,9.799v38.074c-19.816,2.586-40.184,2.586-60,0    v-38.074c0-4.754-3.347-8.851-8.006-9.799c-23.854-4.855-46.298-14.18-66.708-27.715c-3.966-2.63-9.234-2.102-12.598,1.263    l-28.658,28.658c-15.943-12.254-30.163-26.475-42.417-42.417l28.658-28.658c3.365-3.364,3.892-8.634,1.261-12.6    C84,340.311,74.676,317.868,69.818,294c-0.948-4.659-5.045-8.006-9.799-8.006H21.946c-1.293-9.911-1.946-19.967-1.946-30    c0-10.033,0.653-20.089,1.946-30H60.02c4.754,0,8.851-3.347,9.799-8.006c4.855-23.854,14.18-46.298,27.715-66.708    c2.629-3.965,2.101-9.234-1.263-12.598l-28.658-28.658c12.255-15.943,26.475-30.163,42.418-42.417l28.658,28.658    c3.364,3.364,8.634,3.893,12.6,1.261c20.395-13.532,42.837-22.856,66.706-27.714c4.659-0.948,8.006-5.045,8.006-9.799V21.939    c19.821-2.586,40.179-2.586,60,0v38.074c0,4.754,3.347,8.851,8.006,9.799c23.854,4.855,46.298,14.18,66.708,27.715    c3.964,2.629,9.233,2.101,12.598-1.263l28.658-28.658c15.943,12.254,30.163,26.475,42.417,42.417l-28.658,28.658    c-3.364,3.364-3.892,8.633-1.263,12.598c13.535,20.41,22.86,42.853,27.715,66.708c0.948,4.659,5.045,8.006,9.799,8.006h38.074    c1.293,9.911,1.946,19.967,1.946,30C492.001,266.025,491.347,276.082,490.054,285.993z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M327.972,124.405c-21.947-12.047-46.835-18.414-71.972-18.414c-82.71,0-150,67.29-150,150    c0,25.137,6.367,50.024,18.414,71.972c2.665,4.857,8.751,6.604,13.578,3.955c4.842-2.657,6.612-8.736,3.955-13.578    C131.514,299.335,126,277.775,126,255.993c0-71.682,58.318-130,130-130c21.782,0,43.342,5.514,62.349,15.946    c4.84,2.657,10.921,0.888,13.578-3.955C334.585,133.142,332.814,127.064,327.972,124.405z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M387.586,184.022c-2.657-4.843-8.736-6.613-13.578-3.955c-4.842,2.657-6.612,8.736-3.955,13.578    C380.486,212.65,386,234.211,386,255.993c0,71.682-58.318,130-130,130c-21.782,0-43.342-5.514-62.349-15.946    c-4.839-2.656-10.92-0.887-13.578,3.955c-2.658,4.841-0.887,10.92,3.955,13.578c21.947,12.047,46.835,18.414,71.972,18.414    c82.71,0,150-67.29,150-150C406,230.856,399.633,205.97,387.586,184.022z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M256,145.993c-60.654,0-110,49.346-110,110s49.346,110,110,110s110-49.346,110-110S316.654,145.993,256,145.993z     M256,345.993c-49.626,0-90-40.374-90-90c0-49.626,40.374-90,90-90c49.626,0,90,40.374,90,90    C346,305.618,305.626,345.993,256,345.993z\"></path>\n\t</g>\n</g>\n</svg></button>\n<button><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\" fill=\"white\">\n<g>\n\t<g>\n\t\t<path d=\"M416,426c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10c5.52,0,10-4.48,10-10C426,430.48,421.52,426,416,426z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M446,47.432V30c0-16.542-13.458-30-30-30H96C79.458,0,66,13.458,66,30v17.432C0.773,167.896,0.003,164.319,0,169.989    c0,0.004,0,0.007,0,0.011v20c0,17.333,10.022,33.453,26,42.62V502c0,5.522,4.478,10,10,10h440c5.522,0,10-4.478,10-10V232.62    c15.817-9.159,26-25.469,26-42.62v-20c0-0.004,0-0.007,0-0.011C511.997,164.258,510.591,166.721,446,47.432z M485.088,160h-61.88    L389.875,60h40.213L485.088,160z M346,180h60v10c0,16.542-13.458,30-30,30s-30-13.458-30-30V180z M344.471,160L327.805,60h40.987    l33.333,100H344.471z M86,30c0-5.514,4.486-10,10-10h320c5.514,0,10,4.486,10,10v10c-9.522,0-330.404,0-340,0V30z M326,180v10    c0,16.542-13.458,30-30,30s-30-13.458-30-30v-10H326z M266,160V60h41.529l16.667,100H266z M187.805,160l16.667-100H246v100    H187.805z M246,180v10c0,16.542-13.458,30-30,30s-30-13.458-30-30v-10H246z M109.874,160l33.333-100h40.988l-16.667,100H109.874z     M166,180v10c0,16.542-13.458,30-30,30s-30-13.458-30-30v-10H166z M81.912,60h40.213L88.792,160h-61.88L81.912,60z M20,190v-10h66    v10c0,15.701-15.729,30-33,30c-4.354,0-8.866-0.945-13.066-2.742C28.011,212.187,20,201.232,20,190z M206,492H106v-86h100V492z     M206,386H106v-86h100V386z M466,492H226V290c0-5.522-4.478-10-10-10H96c-5.522,0-10,4.478-10,10v202H46V239.511    c2.318,0.315,4.653,0.489,7,0.489c13.161,0,26.465-5.214,36.498-14.306c2.219-2.01,4.217-4.16,6.01-6.413    C104.602,231.822,119.36,240,136,240c16.339,0,30.87-7.878,40-20.035C185.13,232.122,199.661,240,216,240s30.87-7.878,40-20.035    C265.13,232.122,279.661,240,296,240s30.87-7.878,40-20.035C345.13,232.122,359.661,240,376,240    c16.64,0,31.398-8.178,40.492-20.719c1.793,2.253,3.791,4.402,6.01,6.413C432.535,234.786,445.839,240,459,240    c2.342,0,4.677-0.168,7-0.485V492z M492,190c0,11.548-8.309,22.629-20.674,27.575c-4.044,1.61-8.19,2.425-12.326,2.425    c-17.271,0-33-14.299-33-30v-10h66V190z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M436,386h-10v-96c0-5.522-4.478-10-10-10H296c-5.522,0-10,4.478-10,10v96h-10c-5.522,0-10,4.478-10,10    c0,5.522,4.478,10,10,10h160c5.522,0,10-4.478,10-10C446,390.478,441.522,386,436,386z M406,386H306v-86h100V386z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M376,426h-80c-5.522,0-10,4.478-10,10c0,5.522,4.478,10,10,10h80c5.522,0,10-4.478,10-10C386,430.478,381.522,426,376,426    z\"></path>\n\t</g>\n</g>\n</svg></button>\n<button><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\" fill=\"white\">\n<g>\n\t<g>\n\t\t<path d=\"M299.359,266.002c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10c5.52,0,10-4.48,10-10    C309.359,270.482,304.878,266.002,299.359,266.002z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M239.359,123.002c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10c5.52,0,10-4.48,10-10    C249.359,127.482,244.878,123.002,239.359,123.002z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M411.646,178.251c-15.378-46.131-46.09-86.391-86.495-113.402c-9.031-29.961-31.399-53.916-59.541-63.301l-3.08-1.03    c-3.843-1.286-8.073-0.126-10.724,2.93c-2.652,3.057-3.201,7.411-1.39,11.03c3.857,7.706,6.463,16.506,7.643,25.681l-5.772,5.772    c-11.008,11.008-25.643,17.071-41.209,17.071h-11.72c-3.609,0-7.111,1.999-8.878,5.409c-0.021,0.04-0.046,0.076-0.066,0.116    l-7.062,14.114c-6.275,12.559-18.896,20.36-32.936,20.36c-4.406,0-8.801,0.511-13.056,1.517    c-8.673,2.046-13.957,5.405-16.584,6.598c-19.381,9.684-31.42,29.159-31.42,50.825c0,15.685,5.791,25.013,12.143,37.695    c6.706,13.215,20.078,21.425,34.897,21.425c6.105,0,11.983-1.392,17.477-4.138c15.345-7.682,34.263-8.317,50.859-0.054    l0.034,0.018c0.076,0.04,0.151,0.08,0.229,0.118c5.408,2.704,11.27,4.506,17.265,5.379c-11.195,7.753-22.887,13.305-34.44,16.195    c-50.817,12.705-83.713,66.415-64.521,123.862l6.57,19.72c1.36,4.084,5.183,6.839,9.487,6.839h10v23h-10    c-16.575,0-30,13.424-30,30c0,6.169,1.874,11.908,5.079,16.681C99.461,467.328,89.356,483.5,89.356,502c0,5.523,4.478,10,10,10    h280c5.522,0,10-4.477,10-10c0-18.401-9.914-34.583-25.049-43.333c3.284-4.893,5.049-10.645,5.049-16.667    c0-16.542-13.458-30-30-30h-10v-23h10.003v0.002c4.304,0,8.126-2.754,9.486-6.837l4.191-12.57    c2.502-7.507,4.764-15.412,6.757-23.592h39.565c4.767,0,8.87-3.364,9.806-8.038l9.341-46.683    C425.844,254.545,423.344,213.346,411.646,178.251z M367.656,492.002H111.073c4.127-11.641,15.249-20,28.286-20h200    C352.648,472.002,363.628,480.587,367.656,492.002z M339.359,432.002c5.513,0,10,4.485,10,10c0,5.521-4.478,10-10,10h-200    c-5.514,0-10-4.486-10-10c0-5.521,4.478-10,10-10H339.359z M169.359,412.002v-23c24.939,0,107.161,0,140,0v23H169.359z     M342.672,330.961c-1.074,1.835-1.542,3.939-1.317,6.09c-4.031,17.633-8.06,28.284-9.203,31.949h-12.793h-47.013    c15.475-10.639,28.137-29.405,33.95-50.424c1.473-5.323-1.649-10.832-6.972-12.304c-5.326-1.472-10.833,1.649-12.304,6.972    c-4.593,16.603-14.744,31.788-26.488,39.625L236.332,369c-13.237,0-78.514,0-89.764,0l-4.295-12.887    c-15.364-45.99,10.526-88.161,50.402-98.13c24.835-6.213,49.858-22.344,70.578-45.465c7.593-5.371,13.807-12.567,17.989-20.931    l7.06-14.11c2.471-4.939,0.471-10.946-4.469-13.417c-4.939-2.471-10.946-0.47-13.418,4.468l-7.061,14.112    c-9.04,18.076-31.053,25.582-49.306,16.532l-0.03-0.016c-0.074-0.04-0.149-0.078-0.224-0.116    c-22.078-11.051-47.68-10.609-68.868-0.002c-2.687,1.343-5.556,2.024-8.528,2.024c-7.246,0-13.784-4.014-17.039-10.429    l-0.182-0.363l23.343-7.781c5.239-1.747,8.071-7.41,6.325-12.649c-1.747-5.24-7.408-8.072-12.649-6.325l-25.432,8.477    c-4.745-16.717,2.718-34.872,18.972-42.994c2.86-1.319,6.306-3.619,12.224-5.015c2.754-0.651,5.6-0.981,8.458-0.981    c21.666,0,41.142-12.04,50.824-31.416l4.295-8.584h5.541c16.834,0,32.853-5.287,46.175-15.062    c-1.383,7.297-3.68,14.274-6.838,20.587c-2.471,4.939-0.471,10.946,4.469,13.417c4.939,2.471,10.946,0.471,13.418-4.468    c9.995-19.978,13.117-44.913,8.174-68.286c15.031,10.463,26.267,26.969,30.81,46.203c1.376,5.845,2.073,11.769,2.073,17.608    c0,1.075,0.173,2.143,0.514,3.163l24.189,72.569c9.864,29.593,15.297,64.137,15.297,97.268    C349.359,286.905,347.2,308.912,342.672,330.961z M398.893,287.359l-7.731,38.642h-27.179c0.45-2.531,0.883-5.068,1.278-7.609    c2.72-17.549,4.099-35.176,4.099-52.391c0-35.224-5.797-72.014-16.323-103.592l-23.01-69.032    c28.84,23.81,50.771,55.578,62.645,91.197C403.303,216.468,405.57,253.933,398.893,287.359z\"></path>\n\t</g>\n</g>\n</svg></button>\n<button><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\" fill=\"white\">\n<g>\n\t<g>\n\t\t<path d=\"M416,352c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10c5.52,0,10-4.48,10-10C426,356.48,421.52,352,416,352z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M256,352c-5.52,0-10,4.48-10,10c0,5.52,4.48,10,10,10s10-4.48,10-10C266,356.48,261.52,352,256,352z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M76,106c-5.52,0-10,4.48-10,10s4.48,10,10,10s10-4.48,10-10S81.52,106,76,106z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M454.743,301.362c-16.373-27.55-36.631-49.257-58.584-63.149c0.357-0.325,0.708-0.658,1.052-1.001    C402.879,231.543,406,224.01,406,216c0-3.904-0.758-7.633-2.121-11.057C416.61,201.473,426,189.815,426,176    c0-7.457-2.708-14.499-7.655-20.009C423.101,150.68,426,143.673,426,136c0-7.453-2.705-14.491-7.647-20    c4.942-5.509,7.647-12.547,7.647-20c0-16.542-13.458-30-30-30h-22.473l12.224-53.784c0.675-2.966-0.038-6.078-1.936-8.455    C381.918,1.384,379.042,0,376,0h-80c-3.042,0-5.918,1.385-7.815,3.762c-1.898,2.377-2.61,5.489-1.936,8.456l3.567,15.694    l-23.467,11.734c-10.798,5.399-20.602,12.465-29.139,21.003c-13.968,13.966-31.873,22.549-51.21,24.76V76c0-5.523-4.477-10-10-10    H36c-5.523,0-10,4.477-10,10v160c0,5.523,4.477,10,10,10h140c5.523,0,10-4.477,10-10v-10h3.68c16.385,0,32.578,2.627,48.125,7.806    c10.552,3.521,21.323,6.287,32.234,8.29c-19.715,13.911-37.862,34.161-52.781,59.266C197.685,334.296,186,371.918,186,402    c0,33.631,14.455,61.732,41.802,81.267C254.117,502.064,291.531,512,336,512s81.883-9.936,108.197-28.733    C471.545,463.732,486,435.631,486,402C486,371.917,474.315,334.296,454.743,301.362z M166,106h-50c-5.523,0-10,4.477-10,10    s4.477,10,10,10h50v100H46V86h120V106z M363.473,20l-10.455,46h-34.035l-10.454-46H363.473z M244.131,214.833    C226.537,208.972,208.217,206,189.68,206H186V105.534c24.69-2.282,47.601-12.993,65.352-30.743    c7.015-7.015,15.069-12.821,23.94-17.257l19.087-9.543L298.472,66H296c-5.522,0-10,4.477-10,10s4.478,10,10,10    c21.954,0,78.309,0,100,0c5.514,0,10,4.486,10,10c0,2.668-1.041,5.179-2.931,7.068c-1.89,1.891-4.401,2.932-7.069,2.932h-40    c-5.522,0-10,4.477-10,10s4.478,10,10,10h40c5.521,0,10,4.479,10,10c0,5.514-4.486,10-10,10h-40c-5.522,0-10,4.477-10,10    s4.478,10,10,10h40c5.521,0,10,4.479,10,10c0,5.514-4.486,10-10,10c-13.99,0-26.01,0-40,0c-5.522,0-10,4.477-10,10s4.478,10,10,10    h20c5.514,0,10,4.486,10,10c0,5.522-4.479,10-10,10h-63.08c-3.141,0-6.402-0.074-9.697-0.22    C283.115,224.89,263.236,221.208,244.131,214.833z M432.572,466.993C409.67,483.353,376.275,492,336,492    c-40.275,0-73.67-8.647-96.573-25.007C217.559,451.372,206,428.898,206,402c0-26.642,10.636-60.443,28.45-90.42    c19.44-32.71,44.446-55.995,70.53-65.731c2.687,0.09,5.354,0.151,7.939,0.151h54.503c25.94,9.825,50.788,33.038,70.128,65.58    C455.364,341.556,466,375.358,466,402C466,428.898,454.441,451.372,432.572,466.993z\"></path>\n\t</g>\n</g>\n<g>\n\t<g>\n\t\t<path d=\"M341.178,353.875c-14.907-7.879-24.678-13.609-24.678-21.165c0-11.028,8.972-20,20-20s20,8.972,20,20    c0,5.523,4.478,10,10,10c5.522,0,10-4.477,10-10c0-18.604-12.767-34.282-30-38.734V282.71c0-5.523-4.478-10-10-10    c-5.522,0-10,4.477-10,10v11.266c-17.233,4.452-30,20.13-30,38.734c0,20.171,18.771,30.093,35.331,38.847    c14.901,7.877,24.669,13.604,24.669,21.153c0,11.028-8.972,20-20,20s-20-8.972-20-20c0-5.523-4.478-10-10-10    c-5.522,0-10,4.477-10,10c0,18.604,12.767,34.282,30,38.734v11.266c0,5.523,4.478,10,10,10c5.522,0,10-4.477,10-10v-11.266    c17.233-4.452,30-20.13,30-38.734C376.5,372.546,357.734,362.627,341.178,353.875z\"></path>\n\t</g>\n</g>\n</svg></button>\n<label class=\"label\" for=\"checkbox\">Click Me</label>\n</div>\n```\n```scss\n// @import \"compass\";\n\n$d: 9em;\n\n*,\n*::before,\n*::aftre {\n  padding: 0;\n  margin: 0;\n}\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n.popping-menu {\n  position: relative;\n  width: 10em;\n  height: 10em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  button {\n    position: absolute;\n    display: block;\n    width: 4em;\n    height: 4em;\n    padding: 0 1em;\n    appearance: none;\n    background: #FFB66F;\n    border: none;\n    transition: all 0.3s ease-in-out;\n    transform: translate(0, 0) rotate(360deg);\n    opacity: 0;\n    border-radius: 50%;\n    color: white;\n  }  \n}\n.popping-menu {\n  .checkbox {\n    display: none;\n  }\n  .checkbox:checked {\n    ~ button {\n      @import \"compass\";\n\n      $per: 180 / 4;\n      @for $i from 1 through 6 {\n        &:nth-of-type(#{$i}) {\n          $angle: $per * ($i - 1) * 1deg + 180deg;\n          $x: cos($angle) * $d;\n          $y: sin($angle) * $d;\n          opacity: 1;\n          transition-delay: 0.1s * $i;\n          transform: translate($x, $y) rotate(0deg) ;\n        }\n      }\n    }\n  }\n}\n\n.popping-menu {\n  .label {\n    z-index: 10;\n    border-radius: 50%;\n    background: #4791FF;\n    width: 6em;\n    height: 6em;\n    line-height: 6em;\n    text-align: center;\n    display: block;\n    color: white;\n    cursor: pointer;\n    user-select: none;\n  }\n}\n```",
      "data": {
        "title": "弹出式环形菜单",
        "date": "2019-10-09 12:08:32",
        "tags": [
          "css 特效",
          "CSS3"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "dan-chu-shi-huan-xing-cai-dan"
    },
    {
      "content": "# [codepen](https://codepen.io/krischan77/pen/OJJVbxJ)\n> https://cdpn.io/boomboom/v2/index.html?key=iFrameKey-5647e640-e7d1-ee18-99d4-c8d3837275bd\n## HTML\n```html\n<h1><i>斯人若彩虹，遇上方知有</i></h1>\n<div class=\"rainbow-box\">\n\t<div class=\"rainbow-arc\">\n\t\t<div class=\"rainbow-arc-main\"></div>\n\t</div>\n\t<div class=\"rainbow-arc\">\n\t\t<div class=\"rainbow-arc-main\"></div>\n\t</div>\n\t<div class=\"rainbow-arc\">\n\t\t<div class=\"rainbow-arc-main\"></div>\n\t</div>\n\t<div class=\"rainbow-arc\">\n\t\t<div class=\"rainbow-arc-main\"></div>\n\t</div>\n\t<div class=\"rainbow-arc\">\n\t\t<div class=\"rainbow-arc-main\"></div>\n\t</div>\n\t<div class=\"rainbow-arc\">\n\t\t<div class=\"rainbow-arc-main\"></div>\n\t</div>\n\t<div class=\"rainbow-arc\">\n\t\t<div class=\"rainbow-arc-main\"></div>\n\t</div>\n</div>\n```\n## CSS\n```css\nhtml,\nbody,\ndiv {\n\tmargin: 0;\n\tpadding: 0;\n}\nhtml,\nbody {\n\tbackground: linear-gradient(to right, #0f2027, #203a43, #2c5364);\n\twidth: 100%;\n\theight: 100%;\n}\nh1 {\n\ttext-align: center;\n\tline-height: 3;\n\tfont-weight: 700;\n\t-webkit-text-fill-color: transparent;\n\tbackground-color: hsla(0, 100%, 60%, .8);\n\t-webkit-background-clip: text;\n\tanimation: textColorRotate 5s linear infinite;\n\tletter-spacing:2px\n}\n.rainbow-box {\n\tposition: absolute;\n\ttop: 100px;\n\tright: 0;\n\tleft: 0;\n\tmargin: auto;\n\twidth: 200px;\n\theight: 200px;\n}\n.rainbow-arc {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 200px;\n\theight: 100px;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\ttransform-origin: 50% 100%;\n/* \tanimation: rainbowMove 3s cubic-bezier(.58,-0.57,.5,1.66) infinite; */\n}\n.rainbow-arc-main {\n\tborder: 4px solid transparent;\n\tborder-radius: 100%;\n\tbox-sizing: border-box;\n\theight: 150px;\n\tleft: 0;\n\tmargin: 0 auto;\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\twidth: 150px;\n}\n.rainbow-arc:nth-child(1) { \n\tanimation-delay: -50ms;\n}\n.rainbow-arc:nth-child(2) {\n\tanimation-delay: -100ms;\n}\n.rainbow-arc:nth-child(3) {\n\tanimation-delay: -150ms;\n}\n.rainbow-arc:nth-child(4) {\n\tanimation-delay: -200ms;\n}\n.rainbow-arc:nth-child(5) {\n\tanimation-delay: -250ms;\n}\n.rainbow-arc:nth-child(6) {\n\tanimation-delay: -300ms;\n}\n.rainbow-arc:nth-child(7) {\n\tanimation-delay: -350ms;\n}\n\n.rainbow-arc:nth-child(1) .rainbow-arc-main {\n\tborder-color: hsla(0, 100%, 60%, .8);\n\theight: 200px;\n\twidth: 200px;\n\ttop: 10px;\n}\n.rainbow-arc:nth-child(2) .rainbow-arc-main {\n\tborder-color: hsla(30, 100%, 60%, .8);\n\theight: 180px;\n\twidth: 180px;\n\ttop: 20px;\n}\n.rainbow-arc:nth-child(3) .rainbow-arc-main {\n\tborder-color: hsla(60, 100%, 60%, .8);\n\theight: 160px;\n\twidth: 160px;\n\ttop: 30px;\n}\n.rainbow-arc:nth-child(4) .rainbow-arc-main {\n\tborder-color: hsla(90, 100%, 60%, .8);\n\theight: 140px;\n\twidth: 140px;\n\ttop: 40px;\n}\n.rainbow-arc:nth-child(5) .rainbow-arc-main {\n\tborder-color: hsla(120, 100%, 60%, .8);\n\theight: 120px;\n\twidth: 120px;\n\ttop: 50px;\n}\n.rainbow-arc:nth-child(6) .rainbow-arc-main {\n\tborder-color: hsla(150, 100%, 60%, .8);\n\theight: 100px;\n\twidth: 100px;\n\ttop: 60px;\n}\n.rainbow-arc:nth-child(7) .rainbow-arc-main {\n\tborder-color: hsla(180, 100%, 60%, .8);\n\theight: 80px;\n\twidth: 80px;\n\ttop: 70px;\n}\n\n@keyframes textColorRotate {\n\tfrom {\n\t\tfilter: hue-rotate(0deg);\n\t}\n\tto {\n\t\tfilter: hue-rotate(360deg);\n\t}\n}\n@keyframes rainbowMove {\n\t0%, 15% {\n\t\ttransform: rotate(0);\n\t}\n\t100% {\n\t\ttransform: rotate(360deg);\n\t}\n}\n```",
      "data": {
        "title": "🌈彩虹 Loading",
        "date": "2019-10-09 11:51:08",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "cai-hong-loading"
    },
    {
      "content": "[用小程序·云开发轻松构建二手书商城小程序丨实战](https://juejin.im/post/5d900f42f265da5b9603c19d)",
      "data": {
        "title": "用小程序·云开发轻松构建二手书商城小程序丨实战",
        "date": "2019-09-29 10:28:48",
        "tags": [
          "微信开发"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "yong-xiao-cheng-xu-yun-kai-fa-qing-song-gou-jian-er-shou-shu-shang-cheng-xiao-cheng-xu-gun-shi-zhan"
    },
    {
      "content": "## 局部组件引用方式\n```js\nimport A from '@/component/A'\nexport default {\n    data () {},\n    components: { A }\n}\n```\n## 全局组件引用方式1\n```js\n// index.js 文件\nimport A from '@/component/A'\nA.install = function (Vue) {\n  Vue.component(A.name, A)\n}\nexport {\n    A\n}\n// main.js 文件\nimport { A } from './components/index'\nVue.use(A)\n\n```\n## 全局组件引用方式2(推荐?)\n```js\n// index.js 文件\nimport A from '@/component/global/A'\nA.install = function (Vue) {\n  Vue.component(A.name, A)\n}\nfunction InstallAll(Vue) {\n    Vue.use(A)\n}\nexport {\n    A,\n    InstallAll\n}\n// main.js 文件\nimport { InstallAll } from './components/index'\nInstallAll(Vue)\n```\n## 全局组件引用方式3(webpack?)\n[【官方】基础组件的自动化全局注册](https://cn.vuejs.org/v2/guide/components-registration.html#%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%85%A8%E5%B1%80%E6%B3%A8%E5%86%8C)\n[官方例子](https://github.com/chrisvfritz/vue-enterprise-boilerplate/blob/master/src/components/_globals.js)\n> require.context('.', false, /\\.vue$/)加载当前目录所有.vue结尾的文件自动遍历注册，再引入到main.JS",
      "data": {
        "title": "Vue 自定义组件全局引用",
        "date": "2019-09-29 10:03:40",
        "tags": [
          "Vue cli 配置"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-zi-ding-yi-zu-jian-quan-ju-yin-yong"
    },
    {
      "content": "## 引入 babel-polyfill\n```\nnpm install --save babel-polyfill\n```\n```js\n// vue.config.js\nmodule.exports = {\n    configureWebpack: config => {\n        return {\n            entry: {\n                app:['babel-polyfill', './src/main.js']\n            }\n        }\n    }\n} \n```",
      "data": {
        "title": "axios 兼容 promise 浏览器",
        "date": "2019-09-29 10:00:27",
        "tags": [
          "axios",
          "Vue cli 配置"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "axios-jian-rong-promise-liu-lan-qi"
    },
    {
      "content": "[前端的微信支付（JSAPI支付）](https://juejin.im/post/5d8db510e51d4577ff0d9ea4)",
      "data": {
        "title": "前端的微信支付（JSAPI支付）",
        "date": "2019-09-28 15:24:40",
        "tags": [
          "微信开发",
          "支付"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "qian-duan-de-wei-xin-zhi-fu-jsapi-zhi-fu"
    },
    {
      "content": "## 使用display：table（作为flexbox的替代）使子元素在其父元素中水平垂直居。\n```html\n<div class=\"container\">\n  <div class=\"center\"><span>Centered content</span></div>\n</div>\n```\n```css\n.container {\n  border: 1px solid #333;\n  height: 250px;\n  width: 250px;\n}\n.center {\n  display: table;\n  height: 100%;\n  width: 100%;\n}\n.center > span {\n  display: table-cell;\n  text-align: center;\n  vertical-align: middle;\n}\n```\n### [例子](https://codepen.io/bigerfe-com/pen/JjPYqYg)\n\n> display：table 使.center元素的行为类似于 HTML元素。\n> 设置.center的宽高为100%，使其填满父元素。\n> display：table-cell, 设置'.center > span'的table-cell允许元素表现得像HTML元素。\n> text-align: center 使子元素水平居中。\n> vertical-align: middle 使子元素垂直居中。\n### 外部父级必须有固定的宽高。 ",
      "data": {
        "title": "元素水平垂直居 -- 使用表格居中",
        "date": "2019-09-27 17:49:40",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "yuan-su-shui-ping-chui-zhi-ju-shi-yong-biao-ge-ju-zhong"
    },
    {
      "content": "v-model在使用的时候很像双向绑定的，但是 Vue 是单项数据流，v-model 只是语法糖而已：父组件用v-bind将值传给子组件，子组件通过 change/input 事件触发修改父组件的值。\n```\n<input v-model=\"inputValue\" />\n<!-- 等价于 -->\n<input :value=\"inputValue\" @change=\"inputValue = $event.target.value\" />\n```\nv-model 不仅仅能在 input 上用，在组件上也能使用。\n\nvue 组件间传递数据是单向的，即数据总是由父组件传递到子组件，子组件在其内部可以有自己维护的数据，但它无权修改父组件传递给它的数据，我们也可以参照v-model语法糖进行修改父组件的值，但是每次都这样写太麻烦了，vue 提供了一个修饰符.sync,用法如下：\n```\n<child :value.sync=\"inputValue\"></child>\n<!-- 子组件 -->\n<script>\nexport default {\n    props: {\n        //props可以设置值得类型，默认值，是否必传以及校验函数\n        value: {\n            type: [String, Number],\n            required: true,\n        },\n    },\n    //用一个变量中转，子组件中就用_value就不会直接修改父组件的值\n    computed: {\n        _value: {\n            get() {\n                return this.value;\n            },\n            set(val) {\n                this.$emit('update:value', val);\n            },\n        },\n    },\n};\n</script>\n```",
      "data": {
        "title": "Vue 子组件修改父组件传过来的值",
        "date": "2019-09-27 14:46:10",
        "tags": [
          "Vue"
        ],
        "published": false,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-zi-zu-jian-xiu-gai-fu-zu-jian-chuan-guo-lai-de-zhi"
    },
    {
      "content": "# axios的封装\n## ajax.js\n``` js\nimport axios from \"axios\";\nimport store from \"@/store\";\nimport { Message } from \"element-ui\";\nlet router = import(\"@/router\");\n\naxios.defaults.baseURL = \"/api\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=UTF-8\";\naxios.defaults.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\naxios.defaults.headers[\"Cache-Control\"] = \"no-cache\";\naxios.defaults.headers[\"pragma\"] = \"no-cache\";\n\nlet source = axios.CancelToken.source();\n\n//请求添加token\naxios.interceptors.request.use(request => {\n    request.headers[\"demo-auth\"] = store.state.loginInfo ? store.state.loginInfo.userId : \"\"; // 已将userId保存在store中\n    return request;\n})\n\n//切换页面取消请求\naxios.interceptors.request.use(request => {\n    request.cancelToken = source.token;\n    return request;\n});\nrouter.then(lib => {\n    lib.default.beforeEach((to, from, next) => {\n        source.cancel()\n        source = axios.CancelToken.source();\n        next()\n    })\n})\n\n//登录过期跳转\naxios.interceptors.response.use(response => {\n    let data = response.data;\n    if (\n        [10002].includes(data.ret)\n    ) {\n        router.then(lib => lib.default.push({ name: \"login\" })); // 跳转到登录页面\n        Message.warning(data.msg);\n    }\n    return response;\n})\n\n//返回值解构\naxios.interceptors.response.use(response => {\n    let data = response.data;\n    let isJson = (response.headers[\"content-type\"] || \"\").includes(\"json\");\n    if (isJson) {\n        if (data.code === 200) {\n            return Promise.resolve({\n                data: data.data,\n                msg: data.msg,\n                code: data.code,\n            });\n        }\n        return Promise.reject(\n            data.msg ||\n            \"网络错误\"\n        );\n    } else {\n        return data;\n    }\n}, err => {\n    let isCancel = axios.isCancel(err);\n    if (isCancel) {\n        return new Promise(() => { });\n    }\n    return Promise.reject(\n        err.response.data &&\n        err.response.data.msg ||\n        \"网络错误\"\n    );\n})\n\nexport function post(url, data, otherConfig) {\n    return axios.post(url, data, otherConfig);\n}\n\nexport function get(url, data, otherConfig) {\n    return axios.get(url, { params: data, ...otherConfig });\n}\n```\n## api.js\n``` js\nimport { get, post } from \"./ajax\";\n\n//获取程序配置\nexport function getConfig() {\n    return get(\"static/config.json\", null, { baseURL: \"./\" });\n}\n\n// 查找货物已占用位置\nexport function queryGoodsLabel(params) {\n    return get(\"/goods/queryGoodsLabel\", params);\n}\n\n// 更换货物已占用位置\nexport function switchLabel(params) {\n    return post(\"/goods/switchLabel\", params);\n}\n}\n```",
      "data": {
        "title": "axios的封装",
        "date": "2019-09-25 11:48:01",
        "tags": [
          "axios"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "axios-de-feng-zhuang"
    },
    {
      "content": "[nodejs（九）MongoDB的基本使用](https://juejin.im/post/5d8816c9f265da03e05b5047)",
      "data": {
        "title": "nodejs（九）MongoDB的基本使用",
        "date": "2019-09-25 09:56:43",
        "tags": [
          "MongoDB"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "nodejsjiu-mongodb-de-ji-ben-shi-yong"
    },
    {
      "content": "[nodejs（八）express使用详解](https://juejin.im/post/5d86ac615188253fda62ff04)",
      "data": {
        "title": "nodejs（八）express使用详解",
        "date": "2019-09-25 09:47:42",
        "tags": [
          "Node",
          "Express"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "nodejsba-express-shi-yong-xiang-jie"
    },
    {
      "content": "[clip-path应用–制作地图](http://www.daqianduan.com/6886.html)\n```html\n<!-- template -->\n<template>\n  <div class=\"main\">\n    <div>\n      <div v-for=\"(data, i) in mapObj.names\" :key=\"i.id\" :class=\"['block', [i]]\" :style=\"getStyle(data, i)\" @mousemove=\"mousemove($event, data, i)\" @mouseout=\"mouseout\" />\n      <svg v-for=\"(data, i) in mapObj.shapes\" :key=\"i\" width=\"0\" height=\"0\">\n        <clipPath :id=\"i\">\n          <path :d=\"data\" fill=\"#436379\" p-id=\"6487\" />\n        </clipPath>\n      </svg>\n    </div>\n    <div v-show=\"mousePos.show\" class=\"detail\" :style=\"{left: `${mousePos.x}px`, top: `${mousePos.y}px`}\">\n      {{ mousePos.data.name }}\n    </div>\n  </div>\n</template>\n\n<script>\nconst names = {\n  heilongjiang: {\n    id: 0,\n    name: '黑龙江 (HeiLongJiang)',\n    color: 'ffe7b8' // 区块背景色\n  },\n  jilin: {\n    id: 1,\n    name: '吉林 (JiLin)',\n    color: 'c0f0ff'\n  },\n  liaoning: {\n    id: 2,\n    name: '辽宁 (LiaoNing)',\n    color: 'd3dd9b'\n  },\n  hebei: {\n    id: 3,\n    name: '河北 (HeBei)',\n    color: 'c0f0ff'\n  },\n  shandong: {\n    id: 4,\n    name: '山东 (ShanDong)',\n    color: 'ffcca9'\n  },\n  jiangsu: {\n    id: 5,\n    name: '江苏 (JiangSu)',\n    color: 'c0f0ff'\n  },\n  zhejiang: {\n    id: 6,\n    name: '浙江 (ZheJiang)',\n    color: 'f7b7b7'\n  },\n  anhui: {\n    id: 7,\n    name: '安徽 (AnHui)',\n    color: 'b1f2c7'\n  },\n  henan: {\n    id: 8,\n    name: '河南 (HeNan)',\n    color: 'f4d3f4'\n  },\n  shanxi: {\n    id: 9,\n    name: '山西 (ShanXi)',\n    color: 'ffe7b8'\n  },\n  shaanxi: {\n    id: 10,\n    name: '陕西 (ShanXi)',\n    color: 'f9caca'\n  },\n  gansu: {\n    id: 11,\n    name: '甘肃 (GanSu)',\n    color: 'c0f0ff'\n  },\n  hubei: {\n    id: 12,\n    name: '湖北 (HuBei)',\n    color: 'd3dd9b'\n  },\n  jiangxi: {\n    id: 13,\n    name: '江西 (JiangXi)',\n    color: 'ffe7b8'\n  },\n  fujian: {\n    id: 14,\n    name: '福建 (FuJian)',\n    color: 'c0f0ff'\n  },\n  hunan: {\n    id: 15,\n    name: '湖南 (HuNan)',\n    color: 'c0f0ff'\n  },\n  guizhou: {\n    id: 16,\n    name: '贵州 (GuiZhou)',\n    color: 'f4d3f4'\n  },\n  sichuan: {\n    id: 17,\n    name: '四川 (SiChuan)',\n    color: 'b7eac6'\n  },\n  yunnan: {\n    id: 18,\n    name: '云南 (YunNan)',\n    color: 'd3dd9b'\n  },\n  qinghai: {\n    id: 19,\n    name: '青海 (QingHai)',\n    color: 'ffe7b8'\n  },\n  hainan: {\n    id: 20,\n    name: '海南 (HaiNan)',\n    color: 'ffcca9'\n  },\n  shanghai: {\n    id: 21,\n    name: '上海 (ShangHai)',\n    color: 'eed38b'\n  },\n  chongqing: {\n    id: 22,\n    name: '重庆 (ChongQing)',\n    color: 'ffcca9'\n  },\n  tianjin: {\n    id: 23,\n    name: '天津 (TianJin)',\n    color: 'eed38b'\n  },\n  beijing: {\n    id: 24,\n    name: '北京 (Beijing)',\n    color: 'ffcca9'\n  },\n  neimongol: {\n    id: 26,\n    name: '内蒙古 (NeiMengGu)',\n    color: 'b1f2c7'\n  },\n  guangxi: {\n    id: 27,\n    name: '广西 (GuangXi)',\n    color: 'b1f2c7'\n  },\n  xinjiang: {\n    id: 28,\n    name: '新疆 (XinJiang)',\n    color: 'ffcca9'\n  },\n  xizang: {\n    id: 29,\n    name: '西藏 (XiZang)',\n    color: 'c0f0ff'\n  },\n  guangdong: {\n    id: 30,\n    name: '广东 (GuangDong)',\n    color: 'f3f3f3'\n  },\n  ningxia: {\n    id: 25,\n    name: '宁夏 (NingXia)',\n    color: 'ffcca9'\n  },\n  hongkong: {\n    id: 31,\n    name: '香港 (HongKong)',\n    color: 'a3d0f8'\n  },\n  taiwan: {\n    id: 32,\n    name: '台湾 (TaiWan)',\n    color: 'ffe7b8'\n  },\n  macau: {\n    id: 33,\n    name: '澳门 (Macau)',\n    color: 'a3d0f8'\n  }\n}\nconst shapes = {\n  heilongjiang: 'M464.838,96.639l6.787-1.19l2.854,5.241l4.285,3.095l2.856-1.188h2.386l4.285-2.501l3.094,3.094l2.024,0.357l5.357-2.023l3.813,2.023l1.666,4.288h2.857l1.43,1.904l3.689,4.049l1.426-0.833l-0.594-5.12l2.026-1.432l2.854,5.716l2.621,1.074l2.858,3.212l2.021-0.357l0.836-1.427l4.523-5.12l2.022,1.428l1.43-2.022l1.431,2.619l4.283,1.429h2.86l2.07,0.088l-1.238-2.113l-0.598-6.906l-5.115-7.978l2.855-2.857l2.616-4.883h9.646l1.785-1.665l-0.597-3.69l2.025-3.691l-0.596-2.024l0.832-3.451l-0.236-17.742l2.855-5.715l-3.214-3.692l0.595-2.261l-1.427-2.024l-3.69,1.429l-4.289,4.884l-4.283,2.023l-4.289,5.951l-10.598,3.692l-4.879-3.692l0.594-2.262l-2.5-3.689l-1.191-3.811l-4.047-0.239l-7.145-3.69l-2.859,1.071l-3.33-1.667l-4.887,0.834l-4.283-1.429l-2.621-3.69l-2.498-2.857l-0.951-2.857l-3.334-3.452l-2.026-3.099l-4.644-6.31l-1.428-3.69l-5.119-6.548l-1.432-3.454l-6.549-3.216l-4.287,1.429l-3.689-0.833l-8.336-1.668l-11.07,3.932l-2.024,1.786l2.262,3.096l-2.856,7.499l0.834,0.835l4.881,3.096l2.621-4.286l4.524,2.856l-0.235,2.022l1.664,5.119l2.854,3.218l5.717,0.833l1.668-1.787l3.451-0.477l6.547-5.476l8.576,6.31l-2.858,11.669l0.594,8.333v5.119l-2.26,1.191l-0.238,13.335l-0.597-0.476l-2.26-2.858h-1.192l-0.595,1.073c0,0-8.797,13.044-7.146,10.596c1.652-2.448-3.451,4.523-3.451,4.523l0.357,1.428l7.145,4.886l3.926-1.071l0.599,1.071l-0.834,1.189l-3.689,1.667l-0.359,3.214L464.838,96.639z',\n  jilin: 'M544.896,113.042l-2.07-0.088h-2.858l-4.285-1.431l-1.43-2.619l-1.431,2.024l-2.022-1.428l-4.523,5.12l-0.834,1.427l-2.022,0.357l-2.859-3.214l-2.621-1.072l-2.854-5.715l-2.027,1.431l0.594,5.12l-1.426,0.833l-3.689-4.05l-1.432-1.903h-2.854l-1.666-4.288l-3.813-2.023l-5.354,2.023l-2.025-0.357l-3.098-3.094l-4.285,2.5h-2.383l-2.857,1.191l-4.285-3.096l-2.854-5.24l-6.787,1.189l-2.621,3.099l-0.238,3.45l-7.502-2.023l-1.074,2.381l0.601,1.667l3.928,2.859v4.046l0.594,3.929l2.265,3.456l0.356,3.095l1.666,1.191l5.717-5.479l5.953,7.502v4.288l3.213,1.667l0.238-1.431l4.885,1.431l3.451,4.046l1.666-1.784l0.357-1.074l8.217,11.075l0.594,4.286l4.527,5.239l0.592,4.761l4.051-2.499l3.689-10.598l1.67-0.595l4.047,2.263l6.549-0.834l2.26-2.024l-3.092-4.763l0.832-1.191c0,0,7.84-2.611,6.072-2.022c-1.766,0.588,2.5-4.883,2.5-4.883l3.215-1.428l0.238-4.766l0.832-3.212l1.785-0.596l1.668,1.789l1.668,1.426l4.287-5.715l1.188-4.288L544.896,113.042z',\n  liaoning: 'M491.15,173.2l6.783-10.002l4.287-4.881l-0.595-4.763l-4.524-5.239l-0.594-4.286l-8.216-11.075l-0.358,1.074l-1.666,1.786l-3.453-4.05l-4.883-1.429l-0.236,1.429v2.264l-2.022,2.022l-4.047,4.05H467.1l-1.666,2.856h-1.789l-3.094,3.096h-1.787l-3.691,3.691l-2.262,0.596l-4.881,7.5l-3.096-4.644l-3.453-2.262l-1.666,1.667l1.903,10.002l-1.666,3.453l-1.668,5.12l4.763,3.215l2.621,0.238l3.45,4.881l2.5-1.429c0,0,2.857-2.881,4.05-4.882c1.192-2.002,4.049-6.788,4.049-6.788l6.787-1.429l4.287,4.286l-3.099,6.787l-4.049,6.311l3.688,2.62l-0.233,3.098l-2.857,2.855l0.597,1.19l4.881-2.619l7.143-9.407l10.836-6.072L491.15,173.2z',\n  hebei: 'M413.04,235.229l0.357-1.426l-1.783-3.453l6.902-12.5c0,0,8.725-7.9,6.313-5.718c-2.411,2.185,4.523-1.188,4.523-1.188l4.268-5.423l-1.647-1.125l-1.56-3.907l-3.319,1.286l-5.479-1.428l-0.237-1.428l-0.238-9.17l3.69-1.667l-0.419-1.563l-0.177-0.104l0.81-3.557l-5.094,2.128l0.832,1.905l0.178,1.424l0.18,1.433l-2.857,1.19l-1.785,1.667l-3.692-1.071l-4.881,0.834l-0.832-2.264l0.594-4.287l3.693-4.286l0.831-4.88l3.691-3.691l6.666,3.454h1.668l1.189,4.762l1.905,0.95l0.953,3.1l-0.356,2.024l4.047,2.854l0.594,2.264l3.338,1.428l8.332-4.523v-2.621l4.883-7.143l-3.45-4.881l-2.621-0.238l-4.763-3.218l1.668-5.118l-7.387-0.595l-3.213-4.765l0.357-2.619l-6.31-6.906l-4.051,2.026l-3.451,3.452l1.191,2.62l-0.834,1.667l-4.882,0.237l-2.264,2.022l-2.022-0.835l-2.021,2.026l-4.527,3.453l-2.024-1.43v-4.644l-1.666-0.832l-2.619,1.189l-3.096,6.547l-1.189,6.311l3.689,6.19l3.215,2.858v5.24l1.904,4.286l-0.834,4.764l-4.884,3.213l-2.26,7.382l4.049,4.645l2.857,5.717l-1.785,2.857l-0.477,3.928l-1.787,2.619l-0.834,2.859l2.621,3.446l11.43,1.431l4.524-1.787L413.04,235.229z',\n  shandong: 'M425.661,252.611l0.597-2.856l2.5-1.069l4.645,3.927h1.433l4.284-0.476l2.5-2.022l3.453,2.856l1.429-2.62l0.356-1.43l2.857-1.667l0.834-3.45l2.854-0.595l7.98-13.454l-1.429-2.264l1.429-1.427l1.666,0.595l2.619-1.429l1.432-3.094l6.545-6.073l5.121-1.666l2.381-2.266l-0.592-4.88l-3.457-0.355l-7.738,0.952l-5.356-2.62l-3.216,0.596l-7.977,10.239l-2.262,1.429l-5.117-2.263l-0.359-2.619l-1.069-4.523l-2.859-1.669l-4.643,1.073l-2.882-1.971l-4.266,5.423l-4.523,1.188c0,0-8.514,7.798-6.313,5.718c2.201-2.081-6.902,12.5-6.902,12.5l1.783,3.45l-0.357,1.431v1.666l0.957,1.429l2.261-1.669l3.69-0.834l-10.002,11.074v2.621l2.023,0.596l4.524,3.93l7.146-0.835L425.661,252.611z',\n  jiangsu: 'M483.646,282.616l-1.426,4.286l-1.898,2.251l-3.225,3.824l-4.879-0.835l-3.929-2.383l-2.383,1.19l-8.571-0.832l-0.238-3.454l-4.287-2.856l-1.428-2.618l2.02-2.264v-1.665v-2.267l5.121-0.594l0.24-2.023l-1.666-2.263l-2.621-0.355l-1.666,2.854l-4.287-0.831l-1.188-2.263l-2.857-1.666l0.955-6.074l-0.598-1.072l-2.859,0.479l-2.021-1.667l-5.118-1.429l-2.861-2.857l-6.307-2.621l0.592-2.856l2.5-1.069l4.645,3.927h1.433l4.284-0.476l2.5-2.022l3.453,2.856l1.427-2.62l0.358-1.43l2.857-1.667l0.834-3.45l2.854-0.597l7.148,4.881c0,0,3.365,0.754,5.117,2.025c1.754,1.271,9.766,16.313,9.766,16.313l-0.357,1.666l6.548,3.095l1.784,2.859l3.099,1.429l1.428,2.855l-2.023,0.951l-3.334-1.188h-4.645l-4.287-1.432l-1.666,1.432l3.932,1.188l3.813,1.669L483.646,282.616z',\n  zhejiang: 'M483.793,336.063l-6.455,2.276l-3.693-3.69l-2.498,3.215h-4.049l-1.666-3.454l-2.023-5.118l-3.692-0.596l-4.047-7.501l-2.619-3.69l1.903-1.818l0.716-0.685c0,0,6.241-8.84,4.286-6.07c-1.954,2.769-0.239-4.882-0.239-4.882l1.43-1.906l3.336-0.594l0.951-1.43l-1.189-2.263l1.666-2.382v-4.524l2.384-1.189l3.928,2.382l4.879,0.835l3.225-3.824l3.998,3.332l-1.744,1.324l-2.021,3.096l-3.217,0.952l-1.074,0.833l3.098,1.666l5.715-2.499l9.406,3.929l0.953,7.979h-3.809l-0.24,2.382l2.024,3.332l-1.784,2.024l2.022,3.214l-3.096,3.69l-1.43-1.787l-4.644,11.788L483.793,336.063z',\n  anhui: 'M423.637,253.208l2.024-0.597l6.312,2.621c0,0,1.768,2.299,2.861,2.856c1.092,0.557,5.118,1.43,5.118,1.43l2.021,1.667l2.858-0.479l0.599,1.072l-0.957,6.074l2.858,1.666l1.189,2.263l4.287,0.831l1.666-2.854l2.621,0.356l1.666,2.265l-0.24,2.021l-5.121,0.596v2.264v1.665l-2.021,2.265l1.43,2.618l4.287,2.856l0.237,3.454l8.572,0.832v4.525l-1.666,2.381l1.191,2.263l-0.951,1.43l-3.338,0.594l-1.428,1.906l0.235,4.882l-4.285,6.072l-0.715,0.683l-2.381-2.111H446.5l-2.498-2.855l-4.884,4.761l-1.786-0.834l2.026-3.69l-0.24-1.188l-1.786-0.479l-5.718,3.099l-5.356-10.241l1.666-3.214l-0.595-1.071l-2.858-0.952l-4.76-2.858l1.903-3.928l2.855-1.43l0.598-3.214l-1.07-5.716l-0.596-0.479l-2.856,2.86c0,0-5.978-4.647-4.287-3.453c1.69,1.192-3.217-4.049-3.217-4.049l3.217-2.261l0.834-4.05l2.021-1.431l-0.354-5.359l1.43-1.188l2.619,1.787l1.664,2.26l3.453-2.26l1.192-1.434l-0.598-2.617l-4.049-2.263L423.637,253.208z',\n  henan: 'M371.131,276.068l9.405,8.336l7.742,1.665l7.144-1.072l2.262,1.072l2.5-1.43l1.783,1.787l0.834,2.856l3.455,1.905h4.524l3.451,2.857l3.098-1.428l2.382,1.428l1.903-3.929l2.855-1.43l0.598-3.216l-1.07-5.715l-0.596-0.479l-2.856,2.86l-4.287-3.453l-3.218-4.049l3.218-2.263l0.834-4.048l2.021-1.431l-0.354-5.359l1.43-1.188l2.619,1.787l1.664,2.26l3.455-2.26l1.19-1.434l-0.598-2.617l-4.049-2.263l-0.834-2.619l-7.142,0.835l-4.524-3.93l-2.021-0.596v-2.621l10-11.074l-3.69,0.834l-2.261,1.669l-0.957-1.429v-1.666l-1.663-0.6l-4.525,1.785l-11.43-1.428l-0.597,9.408c0,0-6.604,5.169-5.479,4.287c1.129-0.884-7.381,1.429-7.381,1.429l-10.359,7.142l-8.215,2.264v1.43l7.738,11.666L371.131,276.068L371.131,276.068z',\n  shanxi: 'M363.393,259.519l8.217-2.265l10.357-7.142l7.381-1.431l5.477-4.287l0.599-9.405l-2.623-3.449l0.836-2.856l1.787-2.619l0.477-3.929l1.785-2.86l-2.859-5.713l-4.047-4.645l2.262-7.383l4.886-3.212l0.83-4.765l-1.904-4.286v-5.242l-3.215-2.854l-7.381,3.809l-1.191-1.189l-3.93,2.855l-3.213-0.235l-6.312,9.048h-1.906l-3.452,2.858l0.237,4.046l-1.67,3.452l-0.594,4.525l-3.096,4.884l3.334,6.905l-1.07,3.929l-2.619,4.286c0,0,4.146,18.996,3.689,16.903s-2.498,8.81-2.498,8.81L363.393,259.519z',\n  shaanxi: 'M363.393,259.519l-1.428-3.454l2.498-8.81l-3.689-16.903c0,0,3.262-5.777,2.619-4.286c-0.646,1.49,1.07-3.929,1.07-3.929l-3.334-6.905l3.096-4.884l0.594-4.525l1.67-3.452l-0.238-4.046l-1.432-1.074l-2.26,2.502l-6.072,0.356l-3.096,4.526l0.236,2.62l-0.593,1.665l-2.502,0.834l-9.406,13.454l-1.19-0.836l-2.617-0.594l-5.359,0.359l-1.789,2.499l-0.233,5.478l0.834,1.667l9.166,4.637l4.883,3.099l0.832,2.855l-2.619,3.691l1.431,4.286l-0.835,2.021l-6.784,0.6l-1.433,0.835l0.478,1.188v1.904l-5.355,0.596l-2.856-1.428h-3.691l-0.596,0.832l0.596,2.026l-1.789,2.022l-0.592,2.261l3.451,2.861l-2.5,5.117l1.071,2.619l-0.237,1.191h-4.052l-2.854,1.429l2.262,3.098l-1.43,4.048l2.383,0.478l0.238,2.617l2.021,0.237l7.386-1.427l1.43,0.593l0.354,2.025l3.099,0.835l6.547,3.216l3.69-1.434l8.097,2.857l1.666,2.26l4.051-0.829l-0.596-4.288l-0.834-1.191l0.834-3.451l4.286-2.021l1.068-1.668l-2.26-0.837l-2.5-0.593l-2.619-2.62l1.189-1.068h8.571h1.908l1.189,0.83l2.616-2.022v-3.454l-7.737-11.668L363.393,259.519L363.393,259.519z',\n  gansu: 'M196.462,200.108l-1.43-16.55l0.836-3.453l4.879-2.262c0,0,5.209-5.03,6.903-5.717c1.696-0.686,10.6-4.285,10.6-4.285l4.285-2.025v-4.047l1.905-2.262l1.788,0.237l7.144,1.192l-0.358,3.095l1.43,4.88l-0.834,7.978l6.072,8.929l3.097,2.026l4.883-3.812h10.237l2.623,0.953l1.429,2.264l-1.193,2.499l-5.714,4.645l0.597,2.261l6.549,4.882h2.618l0.834,1.07l-0.596,2.025l4.05,3.217l9.404,1.429l4.525-1.19l5.718-5.719l6.903,0.598l2.855,4.287l-1.664,3.929l0.475,2.382l-3.688,2.263l-1.668,2.024l0.596,4.763l6.545,4.646l2.875-0.653l7.725,9.458l1.668,7.145l-0.834,3.451l5.357,2.859v2.26l4.883,1.192h1.426v-4.05l3.693-0.595l0.951-4.763l-2.619-2.026l-2.025-2.021l0.834-9.166l2.023-1.071l3.453,1.43l1.432-0.598l0.834,1.667l9.166,4.639l4.883,3.1l0.832,2.856l-2.619,3.691l1.431,4.285l-0.834,2.021l-6.785,0.6l-1.433,0.833l0.478,1.191v1.903l-5.355,0.594l-2.856-1.428h-3.691l-0.596,0.834l0.596,2.024l-1.789,2.023l-0.592,2.262l3.449,2.857l-2.498,5.119l1.072,2.622l-0.238,1.188h-4.051l-2.854,1.435l2.26,3.091l-1.428,4.051l-4.287,1.07l0.357,2.023l-1.189,1.428l-7.383-0.596l-2.854-2.021l-0.601-4.525l-1.664-1.669l-2.62,1.669l-4.523-4.521l-3.455-2.385l-0.354-3.335l-1.074-2.619h-1.787l-7.144,3.096l0.356,3.454h-2.618l-4.287-4.288l-4.525-0.593l-1.786-2.499l1.431-2.86l2.617,2.5l3.097,0.954l2.62-2.025v-4.881l2.857-2.62l2.265-2.263l-1.073-2.856l5.716-4.522l0.832-7.147l-2.619-3.688l-1.429-6.071l-7.144-9.405l-3.692,1.431l-5.118-4.524l-6.907-4.287l-2.856-6.905l-5.359,2.023l-9.999-6.309l-4.883,2.616l-7.501-1.188l-5.714,3.452l-3.691,0.237l-5.715-3.451l-3.93-2.265L196.462,200.108z',\n  hubei: 'M356.486,329.29l1.787-4.048l5.119-4.287l4.881,2.026l3.096-2.026l-2.621-3.093l1.429-1.433l13.219,0.836l4.525,3.097l2.264,1.425l3.451-2.26l2.619-0.833l0.596,3.093h1.904l1.43-2.021l2.856-2.86l1.431,2.027v4.049l1.19,1.667l2.619,0.594l2.855-2.854l4.287-1.433l7.979-7.381l3.691,0.236l4.522-1.428l-5.358-10.24l1.668-3.214l-0.593-1.071l-2.862-0.952l-4.761-2.858l-2.381-1.427l-3.098,1.427l-3.451-2.854h-4.524l-3.455-1.907l-0.83-2.856l-1.787-1.786l-2.5,1.428L395.421,285c0,0-9.509,0.927-7.146,1.071c2.363,0.146-7.736-1.666-7.736-1.666l-9.407-8.334l-2.619,2.023l-1.188-0.831h-1.907h-8.572l-1.189,1.068l2.619,2.62l2.5,0.593l2.26,0.837l-1.067,1.668l-4.287,2.021l-0.834,3.451l0.834,1.191l0.596,4.288l2.5,0.238l2.619,3.452l1.07,6.548l-0.832,2.262l-1.666-0.594l-4.883,3.812l-8.336,1.429l-2.261,2.263l1.783,2.262l0.24,4.882l2.262,0.598L356.486,329.29z',\n  jiangxi: 'M408.279,325.242l3.336,6.549l0.355,3.452l-1.785,3.454l-2.502,2.024l-0.594,6.188l0.832,0.955l1.43-0.596l0.834,0.596v3.927l1.785,4.647l2.026,0.831l0.234,6.789l-1.193,4.642l1.193,2.021l2.266,2.265l5.474-1.429l1.071,2.022l-1.665,2.263l-2.859,4.287v1.07l1.67,1.192l11.43-4.525l4.047,2.263l1.191-1.19l-1.191-2.499l0.281-1.663l1.742-10.365l1.67-2.62l0.832-2.854l2.025-4.286l-1.072-1.668l0.238-3.691l4.881-5.475l-0.355-3.691l3.213-5.478l3.095,0.834l6.311-4.524l1.193-2.263l-4.049-7.501l-2.619-3.69l1.901-1.818l-2.381-2.111H446.5l-2.5-2.855l-4.884,4.762l-1.784-0.835l2.024-3.69l-0.24-1.188l-1.784-0.479l-5.716,3.099l-4.524,1.429l-3.689-0.238c0,0-9.709,9.669-7.979,7.381c1.731-2.287-4.287,1.433-4.287,1.433L408.279,325.242z',\n  fujian: 'M435.945,374.779c0,0,2.881-12.508,1.742-10.365c-1.137,2.144,1.672-2.62,1.672-2.62l0.83-2.854l2.023-4.286l-1.072-1.668l0.24-3.691l4.881-5.475l-0.357-3.691l3.215-5.478l3.095,0.834l6.311-4.524l1.193-2.26l3.69,0.593l2.025,5.118l1.666,3.454h4.047l2.498-3.215l3.693,3.69l6.454-2.276l-4.069,9.776l-2.385-1.192l-1.666,0.835l-0.238,0.954l2.262,2.501l-0.598,8.929l0.598,2.859l-0.598,0.834l-2.617-0.599l-1.668,1.667l1.191,2.384l-3.214,3.095l0.595,1.189l-3.097,1.665l0.478,2.264l-1.072,1.191h-4.285l-2.264,2.025l-0.357,0.832l2.023,1.428l-2.26,3.452l-2.859,3.691l-1.189-0.356l-3.1,3.216l-3.447-7.502l-3.098-3.929l-2.023,0.24l-1.43-1.072L435.945,374.779z',\n  hunan: 'M408.279,325.242l-2.619-0.594l-1.188-1.667v-4.05l-1.43-2.026l-2.857,2.86l-1.43,2.023h-1.904l-0.594-3.096l-2.621,0.833l-3.451,2.263l-2.264-1.428c0,0-2.666-2.521-4.525-3.097c-1.857-0.576-13.217-0.832-13.217-0.832l-1.43,1.429l2.62,3.093l-3.096,2.026l-4.883-2.026l-5.117,4.287l-1.787,4.05c0,0-0.19,6.479,0.357,9.405c0.551,2.926,2.5,10.002,2.5,10.002l-5.717,6.31l0.596,0.833l5.121-1.428l1.785,2.263l-1.429,7.144l2.857,5.121l2.856,0.832l2.857-3.931l1.43,3.099l0.834-0.238l4.523-4.288l1.191,0.24l2.021-1.073l3.693,1.073v4.048l2.856,0.595l-0.832,3.929l-2.623,4.29l-1.188,3.688h1.188l3.103-2.854l2.617,5.713l2.021-1.43h2.264l2.263-1.666v-3.45l1.188-1.072l2.859,0.235l4.879,2.264l0.834-1.667l-1.188-2.023l0.354-1.429l3.098-2.619l5.478,1.428l3.096-1.906l-1.193-2.021l1.193-4.642l-0.234-6.789l-2.026-0.831l-1.785-4.647v-3.927l-0.834-0.596l-1.43,0.596l-0.832-0.955l0.594-6.188l2.502-2.024l1.785-3.454l-0.355-3.452L408.279,325.242z',\n  guizhou: 'M313.622,349.296l-1.666,4.761l-2.856,0.951l-6.313-0.951l-1.43,1.429l-3.453-1.07l-3.094,4.286l1.428,1.43v2.856l1.431,2.501l6.309-1.906l1.908,1.667l-2.859,12.027l3.81,3.689l-1.188,6.907l3.688,0.238l4.051-3.695l1.668,1.073l7.737,3.216l1.429-0.832l0.235-2.622l1.433-1.429l10.955-7.144l1.903,2.265l6.668,2.021l3.689-4.883l1.668,1.192h2.619v-1.432l3.453-1.189v-1.071l1.43-1.428l0.832,0.237l3.453-3.452l-2.857-5.123l1.429-7.142l-1.785-2.263l-5.121,1.428l-0.596-0.834l5.717-6.309l-2.5-10.001l-3.81,2.855l-3.334-3.45l-3.215-4.29l-0.24-2.619l-2.26-0.477l-2.621,0.834l-4.287-2.024l-2.022,4.883l-3.691,0.239l-2.619,4.049l-1.666-0.834l-2.623,0.834l-3.928-2.266l-3.213,3.69v1.668l6.312,3.453l1.426,2.621c0,0-6.094,2.245-4.523,1.667C322.1,348.955,313.622,349.296,313.622,349.296z',\n  sichuan: 'M279.33,280.95l1.788-4.05l-2.025-2.261l-0.357-3.454l7.145-3.096h1.787l1.069,2.619l0.357,3.336l3.455,2.384l4.522,4.521l2.621-1.669l1.664,1.669l0.6,4.525l2.855,2.021l7.383,0.599l1.189-1.431l-0.357-2.023l4.287-1.07l2.381,0.478l0.238,2.617l2.024,0.237l7.382-1.427l1.43,0.593l0.354,2.026l3.099,0.834l6.549,3.214v7.47l-3.932,1.059l-1.351,7.671l-5.346,3.72l-1.014,5.811l-4.564-2.092l-5.58,2.092l-0.231,4.416l-0.464,4.53l6.507,4.07l2.28,6.977l-2.623,0.833l-3.928-2.263l-3.213,3.691v1.666l6.311,3.452l1.427,2.62l-4.523,1.666l-6.904-0.238l-0.831-2.855l-2.621-0.954l-4.285,2.623l-2.859-1.429l-0.238-3.694l-1.43-1.786v-1.903l-4.047-0.952l-1.072,1.188l0.599,2.858l-3.215,1.431l-0.836,2.021l0.836,2.504l-7.146,8.334l1.191,9.764l-3.453,2.855l-1.666-1.784l-6.906,4.049l-2.621-1.431l-10.001-19.17l-3.931-2.854l-3.216-0.835l-1.428-2.623l1.787-2.854l-2.857-2.264l-3.455,2.858l-3.45,0.595l-2.264-10.359l-0.597-2.499c0,0-2.04-22.568-0.594-16.55c1.446,6.017-3.099-8.336-3.099-8.336l2.267-1.665l-6.55-12.027l-7.977-6.311l1.069-3.692l0.953-1.188l11.669-1.666l7.738,2.262l4.523-1.431l1.785,2.859l5.717,5.715l4.524-0.833v-3.453l1.191-2.266l4.522-1.783l1.667,2.856l2.621-1.903l3.689,0.478v-0.241H279.33z',\n  yunnan: 'M313.622,349.296l-0.836-2.858l-2.618-0.954l-4.283,2.622l-2.859-1.432l-0.238-3.688l-1.43-1.79v-1.903l-4.049-0.952l-1.07,1.188l0.599,2.859l-3.217,1.43l-0.834,2.021l0.834,2.5l-7.146,8.336l1.191,9.766l-3.453,2.854l-1.666-1.784l-6.907,4.048l-2.618-1.431c0,0-11.535-22.106-10.002-19.172c1.533,2.938-3.931-2.854-3.931-2.854l-3.213-0.834l-1.432-2.619l1.787-2.859l-2.857-2.263l-3.455,2.859l-3.451,0.598l-2.263-10.363l-0.596-2.499l-3.454,4.286l-1.427,0.831l0.356,6.551l-0.834,1.431h-1.784l-1.43-1.431l-1.667,2.026l1.667,7.381h2.024l1.667,1.19c0,0,0.468,2.396,0.594,4.521c0.125,2.125-0.833,15.719-0.833,15.719l-10.837,9.766l-0.594,3.689l-2.024,1.787l-0.238,1.903l1.669,4.643l-1.431,3.454l0.834,0.478l5.478-1.433l7.738-0.476l-0.834,3.098l1.431,2.857l0.475,4.287l0.955,1.426l4.524,0.243l2.024,1.425l-2.264,2.856l-0.356,3.453l-1.667,4.05l1.068,1.43l2.86,0.238l4.881,1.784l-0.593,1.667l3.212,4.881h4.524l5.716-3.213l1.786,0.952v1.906l0.832,2.856l1.432,1.429l3.092-0.477l1.192,0.834l1.072-1.192v-4.525l-1.906-8.333l1.431-2.5h4.762h1.192l2.62-3.213l6.783,2.261l2.858-2.503l1.431,1.432l2.858-1.786l2.615,2.618h1.073l0.953-1.428l2.261-2.263l1.073,0.833l3.213-0.595l3.099-2.502l2.619-3.811l3.688-0.831l2.023,2.021l1.43-4.048l2.857-0.235l1.069-0.834l0.957-3.691l-1.192-2.023l-9.765-1.785l-1.668-2.857h-2.854h-2.619l-1.906-3.097l0.24-1.665l1.188-6.907l-3.809-3.689l2.859-12.027l-1.908-1.667l-6.309,1.906l-1.431-2.501v-2.856l-1.428-1.43l3.094-4.286l3.453,1.07l1.43-1.429l6.313,0.951l2.856-0.951L313.622,349.296z',\n  qinghai: 'M153.954,234.989l4.523,1.667l7.742-2.617l-1.193-1.429h-2.021l-0.834-2.259l0.594-2.024l3.692-1.668l2.617-4.286l-7.977-6.548l-0.356-6.906c0,0,2.08-2.545,3.689-2.856c1.609-0.313,26.317-5.119,26.317-5.119l1.783-1.428l3.931,0.594l13.215,3.095l3.93,2.265l5.714,3.451l3.692-0.237l5.714-3.452l7.501,1.188l4.882-2.616l9.999,6.309l5.36-2.023l2.856,6.903l6.907,4.286l5.119,4.527l3.691-1.431l7.146,9.405l1.426,6.071l2.619,3.688l-0.832,7.146l-5.715,4.524l1.073,2.856l-2.265,2.263l-2.856,2.62v4.879l-2.621,2.027l-3.097-0.954l-2.617-2.5l-1.431,2.859l1.787,2.499l4.524,0.594l4.287,4.288h2.618l2.024,2.265l-1.787,4.046v0.239l-3.688-0.479l-2.621,1.905l-1.666-2.856l-4.524,1.785l-1.19,2.264v3.451l-4.524,0.836l-5.715-5.716l-1.787-2.856l-4.524,1.428l-7.738-2.262l-11.67,1.666l-0.952,1.189l-1.071,3.69l-2.263,1.43l0.238,3.692l-6.906,8.931l-11.43-2.383l-0.833-4.285l-7.146-5.718l-15.717-2.498l-6.786-1.19l-2.621-0.238l-5.953-4.883l-12.384-2.857l-8.57-16.551l-0.238-4.642l3.451-1.672v-5.117l2.502-6.313l-2.858-2.856L153.954,234.989z',\n  hainan: 'M385.895,447.523l-5.119,8.93v3.929l-10.238,8.336l-10.598-3.689l-2.025-7.501l0.597-3.454c0,0,8.074-8.075,5.715-5.716c-2.357,2.358,2.025-1.665,2.025-1.665l9.403-1.668l4.289-0.358l1.426-1.666l3.103,0.832L385.895,447.523z',\n  shanghai: 'M484.32,292.485l-3.998-3.332c0,0,0.867-0.375,1.898-2.251c1.031-1.875,1.426-4.286,1.426-4.286l4.287,1.788l2.027,2.854l-1.433,2.024L484.32,292.485z',\n  chongqing: 'M318.986,317.871l5.58-2.092l4.564,2.092l1.014-5.811l5.346-3.72l1.351-7.671l3.932-1.059v-7.47l3.689-1.432l8.096,2.857l1.666,2.26l4.051-0.829l2.5,0.238l2.619,3.452l1.07,6.548l-0.832,2.262l-1.666-0.594c0,0-3.072,3.501-4.884,3.812c-1.809,0.311-8.336,1.429-8.336,1.429l-2.26,2.263l1.783,2.262l0.24,4.883l2.262,0.597l5.715,7.142l0.357,9.407l-3.218,2.412l-0.592,0.445l-3.334-3.451l-3.215-4.29l-0.24-2.619l-2.26-0.476l-2.621,0.834l-4.287-2.025l-2.022,4.883l-3.691,0.239l-2.619,4.049l-1.666-0.834l-2.28-6.977l-6.507-4.07L318.986,317.871z',\n  tianjin: 'M430.413,200.491c0,0-1.832,1.672-3.319,1.284c-1.49-0.388-5.479-1.428-5.479-1.428l-0.237-1.429l-0.238-9.169l3.69-1.667l-0.596-1.666l0.81-3.557l0.385-1.683l1.901,0.95l0.953,3.098l-0.356,2.022l4.047,2.858l0.594,2.263l-2.379,1.668l-0.834,3.809L430.413,200.491z',\n  beijing: 'M421.139,189.75l-0.357-2.856l-0.832-1.905l5.095-2.126l0.381-1.683l-1.189-4.767h-1.668l-6.666-3.449l-3.69,3.69c0,0-1.125,6.585-0.832,4.88c0.289-1.704-3.693,4.288-3.693,4.288l-0.594,4.286l0.832,2.263l4.881-0.834l3.693,1.071l1.784-1.667L421.139,189.75z',\n  neimongol: 'M301.969,226.604l3.438-0.779l2.859-1.188l4.762-3.932l0.953-6.31l2.855-9.168l5.954-4.048l0.835,0.951l1.786,6.19l-2.858,4.049l-0.594,3.691l9.168,3.453l0.832,2.621l5.358-0.359l2.617,0.596l1.191,0.834l9.405-13.454l2.502-0.835l0.593-1.664l-0.236-2.623l3.096-4.523l6.072-0.358l2.262-2.5l1.431,1.074l3.452-2.86h1.904l6.312-9.046l3.215,0.235l3.93-2.855l1.191,1.189l7.381-3.809l-3.689-6.193l1.189-6.311l3.096-6.549l2.619-1.188l1.666,0.832v4.644l2.025,1.43l4.526-3.453l2.021-2.026l2.022,0.835l2.265-2.025l4.881-0.234l0.834-1.667l-1.191-2.622l3.453-3.452l4.049-2.024l6.31,6.908l-0.355,2.618l3.213,4.763l7.385,0.595l1.666-3.453l-1.903-10.002l1.666-1.667l3.453,2.262l3.096,4.644l4.881-7.5l2.264-0.596l3.689-3.692h1.787l3.094-3.095h1.787l1.666-2.856h4.527l4.047-4.051l2.021-2.021v-2.264l-3.213-1.667v-4.286l-5.953-7.502l-5.717,5.478l-1.666-1.19l-0.357-3.096l-2.264-3.453l-0.594-3.931v-4.046l-3.928-2.858l-0.601-1.667l1.074-2.382l7.502,2.022l0.238-3.452l2.621-3.099l-1.789-1.666l0.358-3.214l3.689-1.667l0.834-1.19l-0.598-1.07l-3.927,1.07l-7.145-4.882l-0.357-1.43l3.453-4.524l7.146-10.597l0.594-1.072h1.193l2.26,2.858l0.596,0.479l0.238-13.336l2.26-1.191v-5.121l-0.594-8.333l2.858-11.668l-8.575-6.312l-6.548,5.478l-3.45,0.476l-1.668,1.786l-5.718-0.832l-2.854-3.215l-1.664-5.122l0.236-2.021l-4.525-2.858l-2.621,4.289l-4.881-3.096l-0.834-0.835l2.856-7.5L433.4,7.223h-2.024l-5.119,3.688l-4.285,6.311l1.668,1.071l3.211,0.359l2.504,6.548l-1.43,2.618l-2.502,3.689l-4.644,17.147l1.785,2.856l-1.428,2.498l-10.599,7.742l-5.713-1.071l-3.215-1.191l-0.479,1.667l-4.642,18.577l-2.264,2.378l1.191,3.335l2.854,2.382l4.764-2.623l7.74,0.598l2.26-3.692l4.052-0.951l7.737,2.856l9.408,9.765v2.023l-2.024,1.429l-10.836,0.599l-3.691,2.854l-2.857-0.355l-2.022,3.214l-5.121,1.07l-3.457,5.12l-0.592,3.81l-7.379,4.763l-4.646,0.598l-5.119,6.904l-4.883,2.859l-9.408-2.025l-3.092-1.431l-3.692,3.694l-1.785,6.548l5.119,7.501l-3.335,3.451l-4.643,2.859c0,0-8.422,10.638-6.787,8.571c1.637-2.064-6.619,3.36-8.93,3.93c-2.31,0.568-14.525,1.429-14.525,1.429l-2.264-0.237l-16.906,7.144l-7.742,4.881l-2.262-1.19l-0.83-2.262l-10.36-0.597l-11.909-3.688l-3.211-3.69l-17.385-2.025l-3.217,1.43l-21.072-2.022l-0.358,3.095l1.43,4.883l-0.834,7.976l6.073,8.929l3.096,2.026l4.883-3.812h10.237l2.623,0.953l1.426,2.262l-1.19,2.5l-5.714,4.646l0.597,2.261l6.549,4.88h2.618l0.834,1.072l-0.596,2.023l4.05,3.217l9.403,1.429l4.527-1.19l5.716-5.719l6.903,0.598l2.857,4.289l-1.664,3.926l0.473,2.382l-3.688,2.263l-1.668,2.024l0.596,4.76l6.545,4.647L301.969,226.604z',\n  guangxi: 'M305.646,387.87l3.688,0.241l4.051-3.694l1.668,1.072l7.737,3.216l1.429-0.835l0.235-2.619l1.433-1.429l10.955-7.145l1.903,2.266l6.668,2.021l3.691-4.883l1.666,1.192h2.619v-1.431l3.453-1.192v-1.069l1.43-1.428l0.832,0.236l3.453-3.451l2.856,0.832l2.857-3.931l1.432,3.099l0.832-0.238l4.525-4.288l1.188,0.24l2.021-1.073l3.693,1.073v4.048l2.856,0.595l-0.832,3.929l-2.623,4.29l-1.188,3.688h1.188l3.101-2.854l2.616,5.713l2.025-1.43h2.26l1.666,5.717l-1.666,2.383l0.24,2.5l-5.119,6.547l0.355,6.905l-6.668,5.12l-0.476,4.285l-3.809,1.787l0.354,2.5l-3.694,0.831l-2.853,4.646l-7.502,1.071l-3.93-2.856l-4.049-1.669l-4.049,4.05l-4.158,0.241l-4.058,0.234c0,0-10.996-6.139-9.168-5.119c1.828,1.021-1.666-4.526-1.666-4.526l2.261-4.646l-2.617-1.902h-3.455l-0.832-0.952l-3.691,0.952l-3.692-2.62l1.432-4.048l2.855-0.235l1.069-0.834l0.957-3.69l-1.192-2.024l-9.765-1.785l-1.668-2.856h-2.854h-2.619l-1.906-3.099L305.646,387.87z',\n  xinjiang: 'M153.889,69.508l2.327-0.014l-1.428,4.525l2.025,2.38l0.236,1.666l4.525,4.524l1.191,3.453l5.953,0.357l2.62,2.265h1.429l3.453,7.379l3.451,8.931l-1.784,5.357l0.358,2.025l-3.215,5.477l0.833,4.286l11.192,4.763l12.025,1.788l12.503,8.571l4.049,1.429l0.237,2.261l2.619,5.478l2.619,7.146l3.333,5.953l-1.903,2.263v4.047l-4.286,2.026l-10.596,4.284l-6.907,5.719l-4.881,2.26l-0.834,3.453l1.43,16.55l-3.931-0.596l-1.783,1.431l-26.315,5.119l-3.691,2.856l0.358,6.906l7.978,6.548l-2.62,4.286l-3.69,1.668l-0.597,2.024l0.835,2.259h2.021l1.192,1.429l-7.738,2.617l-4.525-1.667l-2.382-1.424h-5.715l-10.24-4.642h-6.546l-5.121,1.428h-5.714l-8.931,4.879l-7.143-0.834l-7.145,2.5l-5.956-1.907l-3.689-3.211l-9.525-1.427l-6.191,4.28l-3.452-1.425l-2.858-2.263l-6.907-1.667l-1.07-1.189l-2.857-0.237l-9.782,5.945l-10.037-1.25l-0.822-0.359l1.113-8.623l-4.524-1.191l-9.406-6.902l-2.62-0.241l-2.023-4.525l1.427-4.643l-0.477-2.26l-3.451-2.266l-1.192-2.26l-7.143-4.049v-1.189l3.452-1.431l2.023,1.19l2.025-2.025l-0.598-6.785l0.598-5.716l-4.646-4.642l-3.095,0.833l-1.189-3.336l1.785-3.452l-0.952-3.214l3.038-2.749l1.248-1.182v-2.618l4.285-2.024l4.286-0.833l3.811-1.429l3.099,0.832l2.26-0.832l0.833,0.595l0.356,2.859l2.022,0.832l4.765-0.238c0,0,3.566-4.729,5.478-6.073c1.911-1.346,11.19,2.381,11.19,2.381l5.717-4.048l16.552-3.689l1.069-2.264l1.43-6.31l4.643-3.69h1.433v-1.906l0.236-15.836l0.833-3.212l-4.521-1.668l-0.24-1.191l4.762-1.428l12.384-1.073l1.905,2.501l4.287,0.952l1.192,0.239l1.665-2.262l-2.265-2.263l9.169-18.574l1.431-0.953l8.335,4.047h3.689l1.667,2.264l7.979-2.502l2.023-13.212l3.452-2.265l4.048-0.238l2.859-3.452l1.071-3.454l2.263-1.191L153.889,69.508z',\n  xizang: 'M152.525,339.529l6.787,0.834l2.265,3.216l1.189,0.477l10.239-1.904l0.594-1.787l2.023-1.07l4.884-4.05l4.285-0.594l3.93-2.501l7.74-4.286l0.832,1.428l5.716,1.904l8.334-4.285l2.618,1.787l-2.379,3.452l0.952,0.833h3.332l0.359,1.427l-2.857,5.121l0.833,0.834h1.666l8.336,2.265l3.691-3.099l5.478,4.289l1.667-2.026l1.43,1.431h1.784l0.834-1.431l-0.356-6.549l1.429-0.835l3.451-4.284l-0.594-16.549l-3.099-8.337l2.265-1.665l-6.548-12.027l-7.979-6.311l-2.26,1.43l0.238,3.692l-6.908,8.931l-11.428-2.384l-0.833-4.286l-7.146-5.716l-15.717-2.498l-6.787-1.188l-2.619-0.241l-5.952-4.883l-12.385-2.857l-8.57-16.551l-0.238-4.642l3.451-1.672v-5.117l2.502-6.311l-2.858-2.858l3.811-3.095l-2.383-1.425h-5.716l-10.238-4.644h-6.549l-5.118,1.43h-5.715l-8.931,4.879l-7.144-0.834l-7.146,2.5l-5.954-1.906l-3.688-3.212l-9.526-1.427l-6.192,4.28l-3.45-1.425l-2.859-2.263l-6.908-1.667l-1.065-1.189l-2.857-0.237l-9.782,5.945l-10.412-1.297l2.428,4.398l2.68,1.995l-0.821,3.842l-0.231,3.758l0.256,2.672l0,0l-0.193,3.208l3.451,3.454l0.239,4.884l-1.072,1.907l-5.119,0.591l-2.621-2.854l-2.619,0.355l-0.476,2.265l1.428,3.688l0.479,2.62v3.333l-0.833,2.381l0.354,1.909l3.336,0.356l1.785,3.094l7.739,6.071v1.906l5.716,6.311l1.902,2.262l1.79,0.595l3.451-3.451l3.096,2.856c0,0,15.395,13.684,13.098,11.193c-2.297-2.491,2.381,5.715,2.381,5.715h2.859l1.667-1.665l1.426,1.428v5.117l7.741,4.287l1.667-0.357l1.191,4.287l6.548,3.81l0.238,2.501l1.188,0.835l5.717-0.24h3.098l4.644,3.457l10.24-0.359l5.476-0.239l1.428,2.265l-1.188,4.883l1.427,1.664l5.715-4.761l7.146-5.239l5.12,0.95L152.525,339.529z',\n  guangdong: 'M391.37,382.632l2.265-1.666v-3.45l1.188-1.072l2.859,0.235l4.879,2.264l0.834-1.667l-1.188-2.025l0.354-1.427l3.098-2.619l5.478,1.427l3.096-1.905l2.264,2.265l5.478-1.429l1.07,2.021l-1.666,2.264l-2.859,4.288v1.069l1.67,1.192l11.43-4.525l4.048,2.264l1.19-1.191l-1.19-2.499l0.28-1.663l7.459,1.663l1.431,1.072l2.022-0.24l3.094,3.929l3.451,7.502l-2.26,1.667l-2.023,3.689l-1.786,0.596l-1.664,3.455l-5.716,2.854l-2.266-1.188l-1.426,2.382v0.833h-1.787h-3.098l-2.857,2.023l-2.021-1.188l-2.5,1.663l-6.314,2.619l-5.121-4.05l-0.354,3.217l1.788,4.882l-4.646,1.904l-2.498,3.452l-4.887,1.191l-2.617,1.073h-5.119c0,0-0.869,2.545-3.453,3.452c-2.584,0.904-9.168,3.213-9.168,3.213l-4.522,3.098l-2.265,2.263l4.287,6.903l-2.856,2.501l-3.451-0.238l-4.053-7.381l0.954-5.238v-2.501l2.854-4.646l3.695-0.831l-0.355-2.501l3.809-1.785l0.476-4.288l6.668-5.119l-0.355-6.905l5.119-6.547l-0.24-2.5l1.666-2.381L391.37,382.632z',\n  ningxia: 'M329.934,230.111l0.24-5.476l1.785-2.499l-0.832-2.62l-9.168-3.454l0.594-3.691l2.858-4.049l-1.786-6.19l-0.835-0.952l-5.954,4.049l-2.855,9.168l-0.953,6.31l-4.762,3.93l-2.859,1.189l-3.438,0.779c0,0,9.184,11.236,7.729,9.458c-1.455-1.78,1.664,7.146,1.664,7.146l-0.834,3.449l5.357,2.859v2.262l4.881,1.19h1.43v-4.048l3.691-0.597l0.951-4.763l-2.619-2.026l-2.023-2.021l0.832-9.163l2.023-1.073l3.453,1.43L329.934,230.111z',\n  hongkong: 'M417.745,409.005l3.394,0.773l3.453-2.558l1.666,4.582c0,0-5.521,2.673-3.691,1.785c1.828-0.884-4.641-0.355-4.641-0.355l-0.834-3.454L417.745,409.005z',\n  taiwan: 'M505.438,371.203l-3.217,19.169l-1.664,6.07v5.123l-1.43,1.427l-3.451-5.119l-3.693-2.858l-3.215-8.571c0,0-0.451-5.62,0.357-7.74c0.809-2.118,5.356-14.05,5.356-14.05l6.313-5.357l4.051,1.904L505.438,371.203z',\n  macau: 'M412.032,413.183l-0.96,1.752c0,0,0.889,0.883,3.98,1.086s5.995-0.493,5.995-0.493L410.032,420.183z'\n}\n\nexport default {\n  data() {\n    return {\n      mousePos: {\n        show: false,\n        x: 0,\n        y: 0,\n        data: {}\n      },\n      mapObj: {\n        width: 565,\n        height: 475,\n        names: names, // 上文数据--names\n        shapes: shapes // 上文数据--shapes\n      }\n    }\n  },\n  methods: {\n    // 区块剪切样式\n    getStyle(config, i) {\n      return {\n        // 如无需hover可直接将背景色写到names中，需要hover时写到style中更便于维护\n        // background: `#${config.color}`,\n        clipPath: `url(#${i})`\n      }\n    },\n    // 鼠标移入时显示名称\n    mousemove(event, data, i) {\n      this.mousePos = {\n        show: true,\n        x: event.x - 30,\n        y: event.y - 30,\n        data: data\n      }\n    },\n    mouseout() {\n      this.mousePos.show = false\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\nheilongjiang = #ffe7b8\njilin = #c0f0ff\nliaoning = #d3dd9b\nhebei = #c0f0ff\nshandong = #ffcca9\njiangsu = #c0f0ff\nzhejiang = #f7b7b7\nanhui = #b1f2c7\nhenan = #f4d3f4\nshanxi = #ffe7b8\nshaanxi = #f9caca\ngansu = #c0f0ff\nhubei = #d3dd9b\njiangxi = #ffe7b8\nfujian = #c0f0ff\nhunan = #c0f0ff\nguizhou = #f4d3f4\nsichuan = #b7eac6\nyunnan = #d3dd9b\nqinghai = #ffe7b8\nhainan = #ffcca9\nshanghai = #eed38b\nchongqing = #ffcca9\ntianjin = #eed38b\nbeijing = #ffcca9\nneimongol = #b1f2c7\nguangxi = #b1f2c7\nxinjiang = #ffcca9\nxizang = #c0f0ff\nguangdong = #f3f3f3\nningxia = #ffcca9\nhongkong = #a3d0f8\ntaiwan = #ffe7b8\nmacau = #a3d0f8\n\n/* 部分样式 */\n.main {\n    position: relative\n    width: 565px\n    height: 475px\n    .block {\n        position: absolute\n        left: 0\n        top: 0\n        width: 565px\n        height: 475px\n        cursor: pointer\n        transition: all 0.5s\n        .pop {\n            position: absolute\n        }\n    }\n\n    .detail {\n        position: fixed\n    }\n\n    .heilongjiang {\n        background: heilongjiang\n        &:hover {\n            background:  heilongjiang !important\n        }\n    }\n}\n</style>\n\n```",
      "data": {
        "title": "clip-path应用–制作地图",
        "date": "2019-09-23 11:10:38",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "clip-path-ying-yong-zhi-zuo-di-tu"
    },
    {
      "content": "[用css3实现惊艳面试官的背景即背景动画（高级附源码）](https://juejin.im/post/5d86fc096fb9a06ae94d6d7a)",
      "data": {
        "title": "用css3实现惊艳面试官的背景即背景动画（高级附源码）",
        "date": "2019-09-23 10:05:15",
        "tags": [
          "CSS3"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "yong-css3-shi-xian-liang-yan-mian-shi-guan-de-bei-jing-ji-bei-jing-dong-hua-gao-ji-fu-yuan-ma"
    },
    {
      "content": "[3分钟带你走完“简历+内推+面试”三阶段](https://juejin.im/post/5d8316f06fb9a06ae43a2c79)",
      "data": {
        "title": "3分钟带你走完“简历+内推+面试”三阶段",
        "date": "2019-09-23 09:56:54",
        "tags": [
          "面试"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "3-fen-zhong-dai-ni-zou-wan-jian-li-nei-tui-mian-shi-san-jie-duan"
    },
    {
      "content": "[vue-content-loading](https://lucasleandro1204.github.io/vue-content-loading)\n## 例子\n``` html\n<script>\n  import VueContentLoading from 'vue-content-loading';\n\n  export default {\n    components: {\n      VueContentLoading,\n    },\n  };\n</script>\n\n<template>\n  <vue-content-loading :width=\"300\" :height=\"100\">\n    <circle cx=\"30\" cy=\"30\" r=\"30\" />\n    <rect x=\"75\" y=\"13\" rx=\"4\" ry=\"4\" width=\"100\" height=\"15\" />\n    <rect x=\"75\" y=\"37\" rx=\"4\" ry=\"4\" width=\"50\" height=\"10\" />\n  </vue-content-loading>\n</template>\n```\n## 核心代码\n```html\n<template>\n  <svg :viewBox=\"viewbox\" :style=\"svg\" preserveAspectRatio=\"xMidYMid meet\">\n    <rect\n      :style=\"rect.style\"\n      :clip-path=\"rect.clipPath\"\n      x=\"0\"\n      y=\"0\"\n      :width=\"width\"\n      :height=\"height\"\n    />\n\n    <defs>\n      <clipPath :id=\"clipPathId\">\n        <slot>\n          <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"70\" height=\"70\" />\n          <rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n          <rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n          <rect x=\"0\" y=\"80\" rx=\"3\" ry=\"3\" width=\"350\" height=\"10\" />\n          <rect x=\"0\" y=\"100\" rx=\"3\" ry=\"3\" width=\"400\" height=\"10\" />\n          <rect x=\"0\" y=\"120\" rx=\"3\" ry=\"3\" width=\"360\" height=\"10\" />\n        </slot>\n      </clipPath>\n\n      <linearGradient :id=\"gradientId\">\n        <stop offset=\"0%\" :stop-color=\"primary\">\n          <animate\n            attributeName=\"offset\"\n            values=\"-2; 1\"\n            :dur=\"formatedSpeed\"\n            repeatCount=\"indefinite\"\n          />\n        </stop>\n\n        <stop offset=\"50%\" :stop-color=\"secondary\">\n          <animate\n            attributeName=\"offset\"\n            values=\"-1.5; 1.5\"\n            :dur=\"formatedSpeed\"\n            repeatCount=\"indefinite\"\n          />\n        </stop>\n\n        <stop offset=\"100%\" :stop-color=\"primary\">\n          <animate\n            attributeName=\"offset\"\n            values=\"-1; 2\"\n            :dur=\"formatedSpeed\"\n            repeatCount=\"indefinite\"\n          />\n        </stop>\n      </linearGradient>\n    </defs>\n  </svg>\n</template>\n\n<script>\n  const validateColor = color =>\n    /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{6})$/.test(color);\n  export default {\n    name: 'VueContentLoading',\n    props: {\n      rtl: {\n        default: false,\n        type: Boolean,\n      },\n      speed: {\n        default: 2,\n        type: Number,\n      },\n      width: {\n        default: 400,\n        type: Number,\n      },\n      height: {\n        default: 130,\n        type: Number,\n      },\n      primary: {\n        type: String,\n        default: '#f0f0f0',\n        validator: validateColor,\n      },\n      secondary: {\n        type: String,\n        default: '#e0e0e0',\n        validator: validateColor,\n      },\n    },\n    computed: {\n      viewbox() {\n        return `0 0 ${this.width} ${this.height}`;\n      },\n      formatedSpeed() {\n        return `${this.speed}s`;\n      },\n      gradientId() {\n        return `gradient-${this.uid}`;\n      },\n      clipPathId() {\n        return `clipPath-${this.uid}`;\n      },\n      svg() {\n        if (this.rtl) {\n          return {\n            transform: 'rotateY(180deg)',\n          };\n        }\n      },\n      rect() {\n        return {\n          style: {\n            fill: 'url(#' + this.gradientId + ')',\n          },\n          clipPath: 'url(#' + this.clipPathId + ')',\n        };\n      },\n    },\n    data: () => ({\n      uid: null,\n    }),\n    created() {\n      this.uid = this._uid;\n    },\n  };\n</script>\n```\n## SVG 动画存在卡顿\n```html\n<template>\n  <div :style=\"style\">\n    <svg :viewBox=\"viewbox\" preserveAspectRatio=\"xMidYMid meet\">\n      <defs :key=\"uid\">\n        <clipPath :id=\"clipPathId\" :key=\"clipPathId\">\n          <slot>\n            <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"70\" height=\"70\" />\n            <rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n            <rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n            <rect x=\"0\" y=\"80\" rx=\"3\" ry=\"3\" width=\"350\" height=\"10\" />\n            <rect x=\"0\" y=\"100\" rx=\"3\" ry=\"3\" width=\"400\" height=\"10\" />\n            <rect x=\"0\" y=\"120\" rx=\"3\" ry=\"3\" width=\"360\" height=\"10\" />\n          </slot>\n        </clipPath>\n      </defs>\n    </svg>\n  </div>\n</template>\n\n<script>\n  const validateColor = color =>\n    /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{6})$/.test(color);\n\n  export default {\n    name: 'VueContentLoading',\n    props: {\n      rtl: {\n        default: false,\n        type: Boolean,\n      },\n      speed: {\n        default: 2,\n        type: Number,\n      },\n      width: {\n        default: 400,\n        type: Number,\n      },\n      height: {\n        default: 130,\n        type: Number,\n      },\n      primary: {\n        type: String,\n        default: '#F0F0F0',\n        validator: validateColor,\n      },\n      secondary: {\n        type: String,\n        default: '#E0E0E0',\n        validator: validateColor,\n      },\n      uid: {\n        type: String,\n        required: true,\n      },\n    },\n    computed: {\n      viewbox() {\n        return `0 0 ${this.width} ${this.height}`;\n      },\n      formatedSpeed() {\n        return `${this.speed}s`;\n      },\n      clipPathId() {\n        return `clipPath-${this.uid || this._uid}`;\n      },\n      style() {\n        return {\n          width: `${this.width}px`,\n          height: `${this.height}px`,\n          backgroundSize: '200%',\n          backgroundImage: `linear-gradient(-90deg, ${this.primary} 0, ${this.secondary} 20%, ${this.primary} 50%,  ${this.secondary} 75%,  ${this.primary})`,\n          clipPath: 'url(#' + this.clipPathId + ')',\n          animation: `backgroundAnimation ${this.formatedSpeed} infinite linear`,\n          transform: this.rtl ? 'rotateY(180deg)' : 'none',\n        };\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\">\n  @keyframes backgroundAnimation {\n    0% {\n      background-position-x: 100%;\n    }\n\n    50% {\n      background-position-x: 0;\n    }\n\n    100% {\n      background-position-x: -100%;\n    }\n  }\n</style>\n\n```\n\n",
      "data": {
        "title": "vue-content-loading",
        "date": "2019-09-23 09:37:51",
        "tags": [
          "骨架屏"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-content-loading"
    },
    {
      "content": "[写给前端的Docker实战教程](https://juejin.im/post/5d8440ebe51d4561eb0b2751)",
      "data": {
        "title": "写给前端的Docker实战教程",
        "date": "2019-09-23 09:04:49",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "xie-gei-qian-duan-de-docker-shi-zhan-jiao-cheng"
    },
    {
      "content": "[文件上传接口的转发（node）](https://juejin.im/post/5d84ab33e51d4561b072ddd0)",
      "data": {
        "title": "文件上传接口的转发（node）",
        "date": "2019-09-23 09:02:41",
        "tags": [
          "Node",
          "DOM"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "wen-jian-shang-chuan-jie-kou-de-zhuan-fa-node"
    },
    {
      "content": "[Vue之富文本tinymce爬坑录](https://juejin.im/post/5d8342cd6fb9a06b1027624d)\n[Tinymce - 宇宙第一富文本编辑器？[3]](https://juejin.im/post/5d8437c96fb9a06b25491f23)",
      "data": {
        "title": "Vue之富文本tinymce爬坑录",
        "date": "2019-09-20 10:42:06",
        "tags": [
          "富文本"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-zhi-fu-wen-ben-tinymce-pa-keng-lu"
    },
    {
      "content": "# 过滤目标对象 / 过滤掉两个对象相等的值\n## 过滤目标对象 getTargetObject\n/**\n *\n * @param {Object} targetObject\n * @param {Array} propsArray\n */\nexport function getTargetObject(targetObject, propsArray) {\n  if (typeof (targetObject) !== 'object' || !Array.isArray(propsArray)) {\n    throw new Error('参数格式不正确')\n  }\n  const result = {}\n  Object.keys(targetObject).filter(key => propsArray.includes(key)).forEach(key => {\n    result[key] = targetObject[key]\n  })\n  return result\n}\n## 过滤掉两个对象相等的值\n```\n/**\n * 比较两个对象是否相等\n * 相等返回obj2\n * 不等 返回不相同的值 和 reserveArray数组保留的值\n *\n * @export\n * @param {*} obj1\n * @param {*} obj2\n * @param {*} reserveArray\n * @returns\n */\nexport function getObjectDifferent(obj1, obj2, reserveArray) {\n  var data = {}\n  var isEqually = true\n  for (var key in obj1) {\n    if (obj1.hasOwnProperty(key) && obj1[key] !== obj2[key]) {\n      data[key] = obj2[key]\n      isEqually = false\n    }\n  }\n\n  if (isEqually) {\n    data = obj2\n  } else {\n    for (var i = 0; i < reserveArray.length; i++) {\n      var item = reserveArray[i]\n      data[item] = obj2[item]\n    }\n  }\n  // reserveArray.forEach(item => {\n  //   data[item] = obj2[item];\n  // })\n  return {\n    isEqually: isEqually,\n    data: data\n  }\n}\n```",
      "data": {
        "title": "filter Object",
        "date": "2019-09-19 18:16:00",
        "tags": [
          "js utils"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "filter-object"
    },
    {
      "content": "/**\n *\n * @param {Object} targetObject\n * @param {Array} propsArray\n */\nexport function getTargetObject(targetObject, propsArray) {\n  if (typeof (targetObject) !== 'object' || !Array.isArray(propsArray)) {\n    throw new Error('参数格式不正确')\n  }\n  const result = {}\n  Object.keys(targetObject).filter(key => propsArray.includes(key)).forEach(key => {\n    result[key] = targetObject[key]\n  })\n  return result\n}",
      "data": {
        "title": "getTargetObject",
        "date": "2019-09-19 18:16:00",
        "tags": [
          "js utils"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "gettargetobject"
    },
    {
      "content": "```javascript\n/**\n * 树形数据转换\n * @param {*} data\n * @param {*} id\n * @param {*} pid\n */\nexport function treeDataTranslate (data, id = 'id', pid = 'parentId') {\n  var res = []\n  var temp = {}\n  for (var i = 0; i < data.length; i++) {\n    temp[data[i][id]] = data[i]\n  }\n  for (var k = 0; k < data.length; k++) {\n    if (temp[data[k][pid]] && data[k][id] !== data[k][pid]) {\n      if (!temp[data[k][pid]]['children']) {\n        temp[data[k][pid]]['children'] = []\n      }\n      if (!temp[data[k][pid]]['_level']) {\n        temp[data[k][pid]]['_level'] = 1\n      }\n      data[k]['_level'] = temp[data[k][pid]]._level + 1\n      temp[data[k][pid]]['children'].push(data[k])\n    } else {\n      res.push(data[k])\n    }\n  }\n  return res\n}\n```\n## 将数组中的parentId列表取出，倒序排列\n```js\n/**\n * 将数组中的parentId列表取出，倒序排列\n * @param {*} data\n * @param {*} id\n * @param {*} pid\n */\nexport function idList (data, val, id = 'id', children = 'children') {\n  let res = []\n  idListFromTree(data, val, res, id)\n  return res\n}\n\n/**\n * @param {*} data\n * @param {*} id\n * @param {*} pid\n */\nfunction idListFromTree (data, val, res = [], id = 'id', children = 'children') {\n  for (let i = 0; i < data.length; i++) {\n    const element = data[i]\n    if (element[children]) {\n      if (idListFromTree(element[children], val, res, id, children)) {\n        res.push(element[id])\n        return true\n      }\n    }\n    if (element[id] === val) {\n      res.push(element[id])\n      return true\n    }\n  }\n}\n```",
      "data": {
        "title": "🌴树形数据转换",
        "date": "2019-09-19 17:52:17",
        "tags": [
          "js utils",
          "tree"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "shu-xing-shu-ju-zhuan-huan"
    },
    {
      "content": "[给Canvas录制一个视频](https://juejin.im/post/5d81f689f265da039b24cf56)\n### Step 1：初始化录屏实例\n```\nconst chunks = new Set()\nfunction createRecord () {\n  const mediaStream = $canvas.captureStream(10) // 设置帧频率(FPS)\n  mediaRecord = new MediaRecorder(mediaStream, {\n      videoBitsPerSecond: 8500000\n  })\n  mediaRecord.ondataavailable = (e) => { // 接收数据\n      chunks.add(e.data)\n  }\n}\n```\n### Step 2：控制录屏\n```\nmediaRecord.start()  // 开始录屏\nthis.mediaRecord.stop() // 结束录屏\n```\n### Step 3：下载录屏\n```\nconst videoBlob = new Blob(chunks, { 'type' : 'video/mp4' })\nvideoUrl = window.URL.createObjectURL(videoBlob)\n```\nchunks是元素为Blob类型的列表，可能只有一个元素，可能是多个元素，取决于start()中是否设置了timeslice，将这些片段blob重新封装为一个完整的blob数据，并且可以指定数据类型。然后根据blob数据生成一条blob URL。关于blob和createObjectURL的介绍可以移步[这里](https://juejin.im/post/5d2d9fbff265da1bb67a4c1f#heading-14)。",
      "data": {
        "title": "给Canvas录制一个视频",
        "date": "2019-09-19 10:31:11",
        "tags": [
          "canvas"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "gei-canvas-lu-zhi-yi-ge-shi-pin"
    },
    {
      "content": "[前端canvas水印快速制作（附完整代码)](https://juejin.im/post/5d804b2af265da03ef7a460e)",
      "data": {
        "title": "前端canvas水印快速制作（附完整代码)",
        "date": "2019-09-19 10:26:10",
        "tags": [
          "canvas",
          "水印"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "qian-duan-canvas-shui-yin-kuai-su-zhi-zuo-fu-wan-zheng-dai-ma"
    },
    {
      "content": "## 扫描数据回填（比如使用扫描枪，高拍仪）\n```\n// 扫描之后返回数据arr\nfunction scanBackfill(arr){\n    // 需要扫描回填的表单\n    if(arr.constructor === Array){\n        if(arr.length > 0){\n            // 添加行数\n            for (var i = 0; i < arr.length - 1; i++) {\n                addLine(); // 该方法就是新增一行空数据模板dom的\n            }\n            // 数据回填\n            arr.forEach(function(item, index){\n                for (var key in item) {\n                    if (item.hasOwnProperty(key)) {\n                        $(document).find(\"input[name='\"+ key +\"']\").val(item[key]);\n                    }\n                }\n            });\n        }\n    }\n}\n```\n## 身份证号获取年龄\n```\nfunction getAge(identityCard) {\n    var len = (identityCard + \"\").length;\n    if (len == 0) {\n        return '';\n    } else {\n        if ((len != 15) && (len != 18)) //身份证号码只能为15位或18位其它不合法\n        {\n            return '';\n        }\n    }\n    var strBirthday = \"\";\n    if (len == 18) //处理18位的身份证号码从号码中得到生日和性别代码\n    {\n        strBirthday = identityCard.substr(6, 4) + \"/\" + identityCard.substr(10, 2) + \"/\" + identityCard.substr(12, 2);\n    }\n    if (len == 15) {\n        strBirthday = \"19\" + identityCard.substr(6, 2) + \"/\" + identityCard.substr(8, 2) + \"/\" + identityCard.substr(10, 2);\n    }\n    //时间字符串里，必须是“/”\n    var birthDate = new Date(strBirthday);\n    var nowDateTime = new Date();\n    var age = nowDateTime.getFullYear() - birthDate.getFullYear();\n    //再考虑月、天的因素;.getMonth()获取的是从0开始的，这里进行比较，不需要加1\n    if (nowDateTime.getMonth() < birthDate.getMonth() || (nowDateTime.getMonth() == birthDate.getMonth() && nowDateTime.getDate() < birthDate.getDate())) {\n        age--;\n    }\n    return age;\n}\n```\n[qui表单相关操作方法](https://juejin.im/post/5d822d516fb9a06b297582f0)",
      "data": {
        "title": "身份证号获取年龄",
        "date": "2019-09-19 10:22:02",
        "tags": [
          "JS",
          "js utils"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "shen-fen-zheng-hao-huo-qu-nian-ling"
    },
    {
      "content": "[关于带有\"显示更多\"按钮的多行文本截断思考😲](https://juejin.im/post/5d818e39e51d4561e0516ba4)",
      "data": {
        "title": "关于带有\"显示更多\"按钮的多行文本截断思考😲",
        "date": "2019-09-19 09:11:48",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "guan-yu-dai-you-xian-shi-geng-duo-an-niu-de-duo-xing-wen-ben-jie-duan-si-kao"
    },
    {
      "content": "[[创造狮导航](http://chuangzaoshi.com/)](http://chuangzaoshi.com/)",
      "data": {
        "title": "🎁🔗网址导航",
        "date": "2019-09-19 08:55:50",
        "tags": [
          "导航"
        ],
        "published": true,
        "hideInList": true,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "dao-hang"
    },
    {
      "content": "## [政采云前端小报](https://weekly.zoo.team/)",
      "data": {
        "title": "✔🎰前端周报",
        "date": "2019-09-19 08:35:21",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "weekly"
    },
    {
      "content": "## [政采云](https://www.zoo.team/)\n> [基于 Vue 的商品主图放大镜方案](https://www.zoo.team/article/vue-item-magnifier)\n\n## [刘泓宾博客](https://www.lhbbk.com/)\n> [iphonex点击表单后，网页焦点错位](https://www.lhbbk.com/archives/250/)\n\n## [PASSER-BY](https://passer-by.com/)\n> [JQuery 项目/插件](https://passer-by.com/project.html)\n\n## [Never_yu's Blog](https://neveryu.github.io/)\n> [基于Vue、ElementUI的换肤解决方案](https://neveryu.github.io/2019/07/01/vue-element-change-theme/)",
      "data": {
        "title": "🐱‍🏍大神博客",
        "date": "2019-09-19 08:20:36",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "da-shen-bo-ke"
    },
    {
      "content": "[纯css实现星级评分效果](https://juejin.im/post/5d7f200ae51d456201486ed7)",
      "data": {
        "title": "💛纯css实现星级评分效果",
        "date": "2019-09-18 17:42:15",
        "tags": [
          "CSS3",
          "css 特效"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "chun-css-shi-xian-xing-ji-ping-fen-xiao-guo"
    },
    {
      "content": "[vue / react的UI库都在用的几个DOM API🚀](https://juejin.im/post/5d808601f265da03ef7a469b)\n## element.getBoundingClientRect():rect\n## insertAdjacentElement\n### 实现append(beforeend), 插入到指定元素内部的尾部\n### 实现prepend(afterbegin), 插入到指定元素内部的头部\n### 实现after(afterend), 插入到指定元素后面\n### 实现before(beforebegin), 插入到指定元素前面",
      "data": {
        "title": "vue / react的UI库都在用的几个DOM API🚀",
        "date": "2019-09-18 16:50:48",
        "tags": [
          "DOM"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-react-de-ui-ku-du-zai-yong-de-ji-ge-dom-api"
    },
    {
      "content": "[Halo，Babel](https://juejin.im/post/5d7fcfade51d45620821cf7f)",
      "data": {
        "title": "Halo，Babel",
        "date": "2019-09-17 17:51:31",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "halobabel"
    },
    {
      "content": "[迅读PDF](http://www.xundupdf.com/)\n> 可免删除保留电子签名",
      "data": {
        "title": "迅读PDF",
        "date": "2019-09-17 16:58:02",
        "tags": [
          "PDF 工具"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "httpwwwxundupdfcom"
    },
    {
      "content": "[走进安卓的重灾区----video]([走进安卓的重灾区----video](https://juejin.im/post/5d8046345188253849631aa6))\n>在ios上会自动全屏播放，需要在video标签上设置一个属性 webkit-playsinline，ios10及以上版本属性名改成 playsinline。安卓上，无法自动播放，必须手动触发视频的播放。调用任何方法都没用，据说这个为了帮用户省流量而设定的。但是安卓在首次触发之后，再次触发可以通过调用 .play 来触发播放视频。因此做兼容的时候可以设一个判断是否首次播放的标志来处理。 ",
      "data": {
        "title": "走进安卓的重灾区----video",
        "date": "2019-09-17 12:01:42",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "zou-jin-an-zhuo-de-chong-zai-qu-video"
    },
    {
      "content": "[rotateImage](https://github.com/any86/useful-utils/blob/master/docs/rotateImage.md)",
      "data": {
        "title": "rotateImage 旋转图片",
        "date": "2019-09-17 11:46:08",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "rotateimage"
    },
    {
      "content": "[CountDown](https://github.com/any86/useful-utils/blob/master/docs/CountDown.md)\n## 倒计时小例子\n```\n<div id=\"box\"></div>\n\t<script>\n\t\t//new Date()获取客户端本地当前时间（不能拿它做重要依据，因为用户可以随意修改）\n\t\t/* \n\t\t * 倒计时抢购需要从服务器获取当前时间  AJAX\n\t\t *    问题：时间差（从服务器把时间给客户端，到客户端获取到这个信息，中间经历的时间就是时间差，而时间差是不可避免的，我们应尽可能减少这个误差）\n\t\t *    - 从响应头获取时间（AJAX异步）\n\t\t *    - 基于HEAD请求（只获取响应头信息）\n\t\t */\n\t\tlet target = new Date('2019/09/14 13:27:00'),\n\t\t\tnow = null,\n\t\t\ttimer = null;\n\n\t\t//=>从服务器获取时间：获取到时间后再做其他的事情\n\t\tfunction func(callback) {\n\t\t\tlet xhr = new XMLHttpRequest;\n\t\t\txhr.open('HEAD', 'json/data.json', true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (!/^(2|3)\\d{2}$/.test(xhr.status)) return;\n\t\t\t\tif (xhr.readyState === 2) {\n\t\t\t\t\tnow = new Date(xhr.getResponseHeader('Date'));\n\t\t\t\t\tcallback && callback();\n\t\t\t\t}\n\t\t\t}\n\t\t\txhr.send(null);\n\t\t}\n\n\t\t//=>开启倒计时模式\n\t\tfunction computed() {\n\t\t\tlet spanTime = target - now;\n\t\t\tif (spanTime <= 0) {\n\t\t\t\t//=>到抢购时间：结束定时器\n\t\t\t\tclearInterval(timer);\n\t\t\t\ttimer = null;\n\t\t\t\tbox.innerHTML = \"开抢~~\";\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet hours = Math.floor(spanTime / (60 * 60 * 1000));\n\t\t\tspanTime -= hours * 60 * 60 * 1000;\n\t\t\tlet minutes = Math.floor(spanTime / (60 * 1000));\n\t\t\tspanTime -= minutes * 60 * 1000;\n\t\t\tlet seconds = Math.floor(spanTime / 1000);\n\t\t\tbox.innerHTML =\n\t\t\t\t`距离抢购还剩 ${hours<10?'0'+hours:hours}:${minutes<10?'0'+minutes:minutes}:${seconds<10?'0'+seconds:seconds}`;\n\n\t\t\t//=>每一次计算完，我们需要让NOW在原来的基础上加上一秒（第一次从服务器获取到时间，后期直接基于这个时间自己加即可，不要每隔一秒重新从服务器拿）\n\t\t\tnow = new Date(now.getTime() + 1000);\n\t\t}\n\t\tfunc(() => {\n\t\t\t//=>已经从服务器获取时间了\n\t\t\tcomputed();\n\t\t\ttimer = setInterval(computed, 1000);\n\t\t});\n\t</script>\n```",
      "data": {
        "title": "⏳CountDown 倒计时",
        "date": "2019-09-17 11:43:16",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "countdown"
    },
    {
      "content": "[灵活运用JS开发技巧](https://juejin.im/post/5cc7afdde51d456e671c7e48)",
      "data": {
        "title": "灵活运用JS开发技巧",
        "date": "2019-09-17 11:40:00",
        "tags": [
          "JS",
          "ECMAScript"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ling-huo-yun-yong-js-kai-fa-ji-qiao"
    },
    {
      "content": "[JavaScript入门指南(学习笔记)](https://juejin.im/post/5d7b884b6fb9a06aff5ea033)",
      "data": {
        "title": "JavaScript入门指南(学习笔记)",
        "date": "2019-09-17 10:49:22",
        "tags": [
          "ECMAScript"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "javascript-ru-men-zhi-nan-xue-xi-bi-ji"
    },
    {
      "content": "[如何获取某一天所在的星期](https://segmentfault.com/a/1190000020342937)\n```js\nfunction getWeekStartAndEnd(timestamp) {\n    const oneDayTime = 1000 * 60 * 60 * 24; // 一天里一共的毫秒数\n    const today = timestamp ? new Date(timestamp) : new Date();\n    const todayDay = today.getDay() || 7; // 若那一天是周末时，则强制赋值为7\n    const startDate = new Date(\n        today.getTime() - oneDayTime * (todayDay - 1)\n    );\n    const endDate = new Date(today.getTime() + oneDayTime * (7 - todayDay));\n\n    return { startDate, endDate };\n}\n```",
      "data": {
        "title": "JavaScript：如何获取某一天所在的星期",
        "date": "2019-09-17 08:28:34",
        "tags": [
          "ECMAScript",
          "Date"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "javascriptru-he-huo-qu-mou-yi-tian-suo-zai-de-xing-qi"
    },
    {
      "content": ">前端server域名为：`http://xx_domain`\n>后端server域名为：`https://github.com`\n\n`http://xx_domain` 对 `https://github.com` 发起请求一定会出现跨域\n\n不过只需要启动一个nginx服务器，将server_name设置为`xx_domain`,然后设置相应的location以拦截前端需要跨域的请求，最后将请求代理回`github.com`。如下面的配置：\n```\n## 配置反向代理的参数\nserver {\n    listen    8080;\n    server_name xx_domain\n\n    ## 1. 用户访问 http://xx_domain，则反向代理到 https://github.com\n    location / {\n        proxy_pass  https://github.com;\n        proxy_redirect     off;\n        proxy_set_header   Host             $host;        # 传递域名\n        proxy_set_header   X-Real-IP        $remote_addr; # 传递ip\n        proxy_set_header   X-Scheme         $scheme;      # 传递协议\n        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    }\n}\n```\n这样可以完美绕过浏览器的同源策略：github.com访问nginx的github.com属于同源访问，而nginx对服务端转发的请求不会触发浏览器的同源策略。\n```\nhttp {\n    include mime.types;\n    server_tokens off;\n\n    ## 配置反向代理的参数\n    server {\n        listen    8080;\n\n        ## 1. 用户访问 http://ip:port，则反向代理到 https://github.com\n        location / {\n            proxy_pass  https://github.com;\n            proxy_redirect     off;\n            proxy_set_header   Host             $host;\n            proxy_set_header   X-Real-IP        $remote_addr;\n            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n        }\n\n        ## 2.用户访问 http://ip:port/README.md，则反向代理到\n        ##   https://github.com/zibinli/blog/blob/master/README.md\n        location /README.md {\n            proxy_set_header  X-Real-IP  $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_pass https://github.com/zibinli/blog/blob/master/README.md;\n        }\n    }\n}\n```",
      "data": {
        "title": "Nginx 解决跨域的原理",
        "date": "2019-09-16 14:58:43",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "nginx-jie-jue-kua-yu-de-yuan-li"
    },
    {
      "content": "## Js数组扁平化 [https://juejin.im/post/5d79a9d7f265da03d55e843a](https://juejin.im/post/5d79a9d7f265da03d55e843a)",
      "data": {
        "title": "JavaScript实现flatten多种方法",
        "date": "2019-09-16 11:53:56",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "javascript-shi-xian-flatten-duo-chong-fang-fa"
    },
    {
      "content": "[开发一个简单的 Vue UI 组件库（二）——按需引入部分](https://juejin.im/post/5d7a579fe51d45620064bbe7)\nhttps://github.com/NicholasCui/TestMyComponent",
      "data": {
        "title": "Vue 自定义 按需引入",
        "date": "2019-09-16 11:37:16",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-zi-ding-yi-an-xu-yin-ru"
    },
    {
      "content": "[Nodejs获取微信签名并使用JSSDK](https://juejin.im/post/5d7b76b26fb9a06ad34758dc)",
      "data": {
        "title": "Nodejs获取微信签名并使用JSSDK",
        "date": "2019-09-16 11:31:25",
        "tags": [
          "微信开发"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "nodejs-huo-qu-wei-xin-qian-ming-bing-shi-yong-jssdk"
    },
    {
      "content": "## 在懒加载的实现中，有两个关键的数值：一个是当前可视区域的高度，另一个是元素距离可视区域顶部的高度。\n### 当前可视区域的高度\n>现代浏览器及 IE9 以上的浏览器中，可以用 window.innerHeight 属性获取。在低版本 IE 的标准模式中，可以用 document.documentElement.clientHeight 获取，这里我们兼容两种情况\n```\nconst viewHeight = window.innerHeight || document.documentElement.clientHeight \n```\n### 元素距离可视区域顶部的高度\n>getBoundingClientRect() 方法获取返回元素的大小及其相对于视口的位置。\n#### MDN：\n>该方法的返回值是一个 DOMRect 对象，这个对象是由该元素的 getClientRects() 方法返回的一组矩形的集合, 即：是与该元素相关的 CSS 边框集合 。\n>DOMRect 对象包含了一组用于描述边框的只读属性——left、top、right 和 bottom，单位为像素。除了 width 和 height 外的属性都是相对于视口的左上角位置而言的。\n![](http://zssjs.coding.me/post-images/1568603807787.png)\n## Code\n```\n<script>\n    // 获取所有的图片标签\n    const imgs = document.getElementsByTagName('img')\n    // 获取可视区域的高度\n    const viewHeight = window.innerHeight || document.documentElement.clientHeight\n    // num用于统计当前显示到了哪一张图片，避免每次都从第一张图片开始检查是否露出\n    let num = 0\n    function lazyload(){\n        for(let i=num; i<imgs.length; i++) {\n            // 用可视区域高度减去元素顶部距离可视区域顶部的高度\n            let distance = viewHeight - imgs[i].getBoundingClientRect().top\n            // 如果可视区域高度大于等于元素顶部距离可视区域顶部的高度，说明元素露出\n            if(distance >= 0 ){\n                // 给元素写入真实的src，展示图片\n                imgs[i].src = imgs[i].getAttribute('data-src')\n                // 前i张图片已经加载完毕，下次从第i+1张开始检查是否露出\n                num = i + 1\n            }\n        }\n    }\n    // 监听Scroll事件\n    window.addEventListener('scroll', lazyload, false);\n</script>\n```",
      "data": {
        "title": "Lazy-Load-img",
        "date": "2019-09-16 11:11:11",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "lazy-load-img"
    },
    {
      "content": "### v-copy.js\n```\nimport { Message } from 'ant-design-vue';\n\nconst vCopy = { // 名字爱取啥取啥\n  /*\n    bind 钩子函数，第一次绑定时调用，可以在这里做初始化设置\n    el: 作用的 dom 对象\n    value: 传给指令的值，也就是我们要 copy 的值\n  */\n  bind(el, { value }) {\n    el.$value = value; // 用一个全局属性来存传进来的值，因为这个值在别的钩子函数里还会用到\n    el.handler = () => {\n      if (!el.$value) {\n      // 值为空的时候，给出提示，我这里的提示是用的 ant-design-vue 的提示，你们随意\n        Message.warning('无复制内容');\n        return;\n      }\n      // 动态创建 textarea 标签\n      const textarea = document.createElement('textarea');\n      // 将该 textarea 设为 readonly 防止 iOS 下自动唤起键盘，同时将 textarea 移出可视区域\n      textarea.readOnly = 'readonly';\n      textarea.style.position = 'absolute';\n      textarea.style.left = '-9999px';\n      // 将要 copy 的值赋给 textarea 标签的 value 属性\n      textarea.value = el.$value;\n      // 将 textarea 插入到 body 中\n      document.body.appendChild(textarea);\n      // 选中值并复制\n      textarea.select();\n      textarea.setSelectionRange(0, textarea.value.length);\n      const result = document.execCommand('Copy');\n      if (result) {\n        Message.success('复制成功');\n      }\n      document.body.removeChild(textarea);\n    };\n    // 绑定点击事件，就是所谓的一键 copy 啦\n    el.addEventListener('click', el.handler);\n  },\n  // 当传进来的值更新的时候触发\n  componentUpdated(el, { value }) {\n    el.$value = value;\n  },\n  // 指令与元素解绑的时候，移除事件绑定\n  unbind(el) {\n    el.removeEventListener('click', el.handler);\n  },\n};\n\nexport default vCopy;\n```\n### directives.js\n```\nimport copy from './v-copy';\n// 自定义指令\nconst directives = {\n  copy,\n};\n// 这种写法可以批量注册指令\nexport default {\n  install(Vue) {\n    Object.keys(directives).forEach((key) => {\n      Vue.directive(key, directives[key]);\n    });\n  },\n};\n```\n### main.js\n```\nimport Vue from 'vue';\nimport Directives from './directives';\n\nVue.use(Directives);\n```\n### 实例\n```\n<template>\n  <button v-copy=\"copyText\">copy</button>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      copyText: '要 Copy 的内容',\n    };\n  },\n};\n</script>\n```\n[https://juejin.im/post/5d7ee31e518825664525dfe5](https://juejin.im/post/5d7ee31e518825664525dfe5)",
      "data": {
        "title": "Vue.directive()",
        "date": "2019-09-16 10:51:52",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vuedirective"
    },
    {
      "content": "## 一些 Vue 生疏知识\n[Vue 实用开发技巧](https://juejin.im/post/5d790819e51d453b5e465bc7)",
      "data": {
        "title": "Vue 生疏知识&实用开发技巧",
        "date": "2019-09-16 10:38:35",
        "tags": [
          "转载",
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-shi-yong-kai-fa-ji-qiao"
    },
    {
      "content": "## 作用域插槽\n```html\n<template>\n  <div>\n    <slot v-if=\"loading\" name=\"loading\">\n        <div>Loading ...</div>\n    </slot>\n    <slot v-else :data='data' :loading='loading'> \n    <!-- 简写 -->\n    <!-- <slot v-else v-bind={data, loading}> -->\n    </slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: [\"url\"],\n  data: () => ({\n    loading: true,\n    data: null\n  }),\n  async created() {\n    this.data = await fetch(this.url);\n    this.loading = false;\n  }\n};\n</script>\n```\n**用法**\n```html\n<lazy-loading url=\"https://www.baidu.com\">\n  <template #default=\"{ data,loading }\">\n    <div>{{ data }}</div>\n    <div>{{ loading }}</div>\n  </template>\n</lazy-loading>\n\n```",
      "data": {
        "title": "Vue 作用域插槽",
        "date": "2019-09-16 10:38:35",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-zuo-yong-yu-cha-cao"
    },
    {
      "content": "## 不使用Vuex创建Store(Vue.observable)\n`Vue.observable({})`返回的对象可以直接用于渲染函数和计算属性内，并且会在发生改变时触发相应的更新。也可以作为最小化的跨组件状态存储器，用于简单的场景：\n```\nconst state = Vue.observable({ count: 0 })\n\nconst Demo = {\n  render(h) {\n    return h('button', {\n      on: { click: () => { state.count++ }}\n    }, `count is: ${state.count}`)\n  }\n}\n```\n我们可以利用这个API来应对一些简单的跨组件数据状态共享的情况.\n```\n// miniStore.js\n\nimport Vue from \"vue\";\n \nexport const miniStore = Vue.observable({ count: 0 });\n \nexport const actions = {\n  setCount(count) {\n    miniStore.count = count;\n  }\n}\n\nexport const getters = {\n  count: () => miniStore.count\n}\n```\n```\n// Demo.vue\n<template>\n  <div>\n    <p>count:{{count}}</p>\n    <button @click=\"add\"> +1 </button>\n    <button @click=\"sub\"> -1 </button>\n  </div>\n</template>\n \n<script>\nimport { actions, getters } from \"./store\";\nexport default {\n  name: \"App\",\n  computed: {\n    count() {\n      return getters.count;\n    }\n  },\n  methods: {\n    add: actions.setCount(this.count+1),\n    sub: actions.setCount(this.count-1)\n  }\n};\n</script>\n```",
      "data": {
        "title": "Vue.observable",
        "date": "2019-09-16 10:27:50",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue.observable"
    },
    {
      "content": "[Flex布局笔记-基础部分](https://juejin.im/post/5d7cd3b56fb9a06b2c32bef6)",
      "data": {
        "title": "Flex布局笔记-基础部分",
        "date": "2019-09-16 10:19:21",
        "tags": [
          "CSS3",
          "转载"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "flex-bu-ju-bi-ji-ji-chu-bu-fen"
    },
    {
      "content": "[web 前端用 linux 应该知道的知识](https://juejin.im/post/5d7df75d6fb9a06b1c745c7c)",
      "data": {
        "title": "linux 基础知识",
        "date": "2019-09-16 10:12:04",
        "tags": [
          "转载",
          "linux"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "linux-ying-gai-zhi-dao-de-zhi-shi"
    },
    {
      "content": "[https://juejin.im/post/5d7a53f0f265da03b9502214](https://juejin.im/post/5d7a53f0f265da03b9502214)",
      "data": {
        "title": "uni-app 结合 colorUI 开发项目的整体基本流程",
        "date": "2019-09-16 09:47:23",
        "tags": [
          "转载",
          "uniapp",
          "小程序"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "uni-app-jie-he-colorui-kai-fa-xiang-mu-de-zheng-ti-ji-ben-liu-cheng"
    },
    {
      "content": "## 正则表达式\n```\nString(Number).replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\n```\n## toLocaleString()方法\n```\n(123456789).toLocaleString('en-US')\n```\n![](http://zssjs.coding.me/post-images/1568596856868.jpg)\n![](http://zssjs.coding.me/post-images/1568596863204.jpg)",
      "data": {
        "title": "💰金额千分位格式化函数实现方法",
        "date": "2019-09-16 09:17:25",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jin-e-qian-fen-wei-ge-shi-hua-han-shu-shi-xian-fang-fa"
    },
    {
      "content": "[【不可思议的CSS】天气不可能那么可爱](https://juejin.im/post/5d2f3f3351882556c3186f57)",
      "data": {
        "title": "🌤【不可思议的CSS】天气不可能那么可爱",
        "date": "2019-09-12 17:31:39",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "bu-ke-si-yi-de-css-tian-qi-bu-ke-neng-na-me-ke-ai"
    },
    {
      "content": "```html\n<div class=\"container\">\n    <div class=\"wave\"></div>\n</div>\n```\n```scss\n.container {\n    position: absolute;\n    width: 200px;\n    height: 200px;\n    padding: 5px;\n    border: 5px solid rgb(118, 218, 255);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    overflow: hidden;\n}\n.wave {\n    position: relative;\n    width: 200px;\n    height: 200px;\n    background-color: rgb(118, 218, 255);\n    border-radius: 50%;\n \n    &::before,\n    &::after{\n        content: \"\";\n        position: absolute;\n        width: 400px;\n        height: 400px;\n        top: 0;\n        left: 50%;\n        background-color: rgba(255, 255, 255, .4);\n        border-radius: 45%;\n        transform: translate(-50%, -70%) rotate(0);\n        animation: rotate 6s linear infinite;\n        z-index: 10;\n    }\n    \n    &::after {\n        border-radius: 47%;\n        background-color: rgba(255, 255, 255, .9);\n        transform: translate(-50%, -70%) rotate(0);\n        animation: rotate 10s linear -5s infinite;\n        z-index: 20;\n    }\n}\n\n@keyframes rotate {\n    50% {\n        transform: translate(-50%, -73%) rotate(180deg);\n    } 100% {\n        transform: translate(-50%, -70%) rotate(360deg);\n    }\n}\n```",
      "data": {
        "title": "🌊CSS3 实现波浪效果",
        "date": "2019-09-12 15:57:08",
        "tags": [
          "css 特效"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css3-shi-xian-bo-lang-xiao-guo"
    },
    {
      "content": "[浏览器的一些“滚动”行为鉴赏🔼🔽](https://juejin.im/post/5d75adfbe51d4561e84fcc9c)",
      "data": {
        "title": "🔼🔽浏览器的一些“滚动”行为鉴赏",
        "date": "2019-09-12 15:20:15",
        "tags": [
          "BOM",
          "转载"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/liu-lan-qi-de-yi-xie-gun-dong-xing-wei-jian-shang.jpg",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "liu-lan-qi-de-yi-xie-gun-dong-xing-wei-jian-shang"
    },
    {
      "content": "```html\n<img src='https://secure.gravatar.com/avatar/9a7560a750923bc17df191f8f5f511da?d=identicon' />\n<div></div>\n```\n```css\n*{ margin:0 }\ndiv{\n\twidth: 200px;\n  position: absolute;\n  left:0;\n  top:0;\n  z-index:2;\n\theight: 200px;\n\tbackground: linear-gradient(#03A9F4,#03A9F4), \n linear-gradient(90deg, #ffffff33 1px,transparent 0,transparent 19px),\n linear-gradient(#ffffff33 1px,transparent 0,transparent 19px),\n linear-gradient(transparent, #2196f387);\n\tbackground-size:100% 1.5%, 10% 100%,100% 10%, 100% 100%;\n\tbackground-repeat: no-repeat,repeat,repeat,no-repeat;\n\tbackground-position: 0 0,0 0, 0 0, 0 0;\n\tclip-path: polygon(0% 0%, 100% 0%, 100% 1.5%, 0% 1.5%);\n\tanimation: move 2s infinite linear;\n}\n\nimg{\n  width: 200px;\n\t height: 200px;\n}\n@keyframes move{\n\tto{\n\t\tbackground-position: 0 100%,0 0, 0 0, 0 0;\n\t\tclip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);\n\t}\n```\n\n[参考](https://codepen.io/laoyao/pen/MWgGzWb)\n![](http://zssjs.coding.me/post-images/1568262853871.gif)",
      "data": {
        "title": "🙅人脸识别 -- 扫描图",
        "date": "2019-09-12 12:30:59",
        "tags": [
          "css 特效"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ren-lian-shi-bie-sao-miao-tu"
    },
    {
      "content": "## 防抖\n\n``` html\n<body>\n  <button id=\"debounce\">点我防抖！</button>\n  <script>\n    window.onload = function() {\n      var myDebounce = document.getElementById(\"debounce\");\n      myDebounce.addEventListener(\"click\", debounce(sayDebounce));\n    }\n    function debounce(fn) {\n      let timeout = null;\n      return function() {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          fn.call(this, arguments);\n        }, 1000);\n      };\n    }\n    function sayDebounce() {\n      console.log(\"防抖成功！\");\n    }\n  </script>\n</body>\n```\n## 节流\n```html\n<body>\n  <button id=\"throttle\">点我节流！</button>\n  <script>\n    window.onload = function() {\n      var myThrottle = document.getElementById(\"throttle\");\n      myThrottle.addEventListener(\"click\", throttle(sayThrottle));\n    }\n    function throttle(fn) {\n      let flag = true;\n      return function() {\n        if(!flag) {\n          return;\n        }\n        flag = false;\n        setTimeout( () => {\n          fn.call(this, arguments);\n          flag = true;\n        }, 1000);\n      };\n    }\n    function sayThrottle() {\n      console.log(\"节流成功！\");\n    }\n  </script>\n</body>\n```",
      "data": {
        "title": "😘防抖&节流",
        "date": "2019-09-11 14:21:28",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "fang-dou-andjie-liu"
    },
    {
      "content": "[https://codepen.io/Chokcoco/pen/ALpdLj](https://codepen.io/Chokcoco/pen/ALpdLj)",
      "data": {
        "title": "🈶单行居中两行居左多行省略",
        "date": "2019-09-10 14:46:55",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "dan-xing-ju-zhong-liang-xing-ju-zuo-duo-xing-sheng-lue"
    },
    {
      "content": "使用getCurrentPosition方法实时获取当前Geolocation信息\n<!-- more -->\n\n``` javascript\nnavigator.geolocation.getCurrentPosition(\n        function (position) {\n            //获取地理位置成功时所做的处理\n    },\n        function (error) {\n            //获取地理位置信息失败时所做的处理\n    }, //以下是可选属性\n        {\n            enableHighAccuracy: true,//是否要求高精度的地理位置信息\n            timeout: 1000,//对地理位置信息的获取操作做超时限制，如果再该事件内未获取到地理位置信息，将返回错误\n            maximumAge:60*1000//设置缓存有效时间，在该时间段内，获取的地理位置信息还是设置此时间段之前的那次获得的信息，超过这段时间缓存的位置信息会被废弃\n        })\n```\n[https://www.cnblogs.com/qikeyishu/p/7708116.html](https://www.cnblogs.com/qikeyishu/p/7708116.html)\n```html\n<!Doctype html>\n<html>\n<head>\n    <title></title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"keywords\" content=\"关键词\"/>\n    <meta name=\"description\" content=\"描述\"/>\n    <meta name=\"author\" content=\"奇客艺术\"/>\n</head>\n<body>\n<p id=\"GeoDisplay\"></p>\n<script>\n    Geolocation();//执行Geolocation()函数\n    setInterval(Geolocation,100);//设置定时器，100ms执行一次Geolocation();实现实时获取\n    function getElem(id) {\n        return typeof id === 'string' ? document.getElementById(id):id;//typeof表示变量id的类型为字符串类型\n    }\n    var GetID = getElem(\"GeoDisplay\");\n    function showMap(lat,lon) {//自定义了一个在浏览器上显示地理信息的函数\n    var str = \"您当前位置的维度：\"+lat+\"，经度：\"+lon;\n        GetID.innerHTML = str;\n    }\n    function Geolocation() {\n        if(navigator.geolocation){\n            navigator.geolocation.getCurrentPosition(\n                function (position) {//传入了对象position\n                    showMap(position.coords.latitude,position.coords.longitude);\n                },\n                function (err) {//传入了error对象\n                    GetID.innerHTML = err.code + '\\n'+err.message;//Firefox3.6以上不支持error对象的message属性\n                    //error对象的code属性有如下属性值:\n                    //PERMISSION_DENIED(1):(permission_denied):用户单机信息条上的“不共享”按钮或直接拒绝被获取位置信息\n                    //POSITION_UNAVAILABLE(2):(position_unavailable):(position_unavailable)网络不可用或者无法连接到获取位置信息的卫星\n                    //TIMEOUT(3):(timeout)网络可用但在计算机用户的位置上花费过长时间\n                    //UNKNOWN_ERROR(0):(unknown_error)发生其他未知错误\n                })\n            }else {\n                GetID.innerHTML = \"您当前使用的浏览器不支持地理定位服务\";\n        }\n    }\n</script>\n</body>\n</html>\n```",
      "data": {
        "title": "✈JS 获取当前位置的地理坐标（经纬度）",
        "date": "2019-09-10 12:03:19",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "使用getCurrentPosition方法实时获取当前Geolocation信息",
      "fileName": "js-huo-qu-dang-qian-wei-zhi-de-di-li-zuo-biao-jing-wei-du"
    },
    {
      "content": "## target、currentTarget的区别？\ncurrentTarget当前所绑定事件的元素\n\ntarget当前被点击的元素\n### \n>event.currentTarget 获取到的是发起事件的标签元素 event.target 获取的是触发事件的标签元素\n### event对象的常用属性和方法：\n* event.preventDefault();//阻止默认事件\n* event.isDefaultPrevented();//检测 event.preventDefault() 是否被调用过\n* event.currentTarget;//发起事件的标签\n* event.target;//触发事件的标签\n* event.type//事件的类型\n* event.pageX;event.pageY //相对于文件的左侧和顶部边缘的位置\n* event.which;//针对键盘和鼠标事件，确定底按的是哪个键或按钮 常用在keydown事件中\n* event.timeStamp;//事件触发时与事件创建之间的时间间隔\n* event.stopPropagation(); //阻止事件的冒泡",
      "data": {
        "title": "event.currentTarget与event.target的区别",
        "date": "2019-09-10 11:55:21",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "eventcurrenttarget-yu-eventtarget-de-qu-bie"
    },
    {
      "content": "``` html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>文本颜色渐变</title>\n  <style>\n    .text {\n      font-size: 50px;\n      /* background-image: -webkit-gradient(linear, left 0, right 0, from(rgb(4, 94, 170)), to(rgb(1, 152, 216))); */\n      /* background: linear-gradient(to top right, #CDDC39 0%, #8BC34A 25%, #FFEB3B 100%); */\n      background-image: url(http://ww.yiweb.com.cn/jinghua/dist/images/ServiceProject-pic01.jpg);\n      -webkit-background-clip: text;\n      /*必需加前缀 -webkit- 才支持这个text值 */\n      -webkit-text-fill-color: transparent;\n      /*text-fill-color会覆盖color所定义的字体颜色： */\n    }\n  </style>\n</head>\n\n<body>  \n  <h1 class=\"text\">文本颜色渐变</h1>\n</body>\n\n</html>\n```",
      "data": {
        "title": "background-clip",
        "date": "2019-09-10 11:53:02",
        "tags": [
          "CSS3",
          "CSS"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "background-clip"
    },
    {
      "content": "``` html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>vw&rem实现移动端布局</title>\n  <style>\n    *{ margin: 0;padding: 0 }\n    \n    /* 核心代码 */\n    html{ font-size:  13.333333vw; }\n    body{ max-width: 750px;min-width: 320px; margin: 0 auto }\n    @media screen and ( min-width:750px ){ html{ font-size: 100px; } }\n    /* 核心代码 */\n    \n    #app{ height: 100vh;background-color: #ccc;font-size: 0px; }\n    #app .item{font-size:.3rem; display: inline-block; width: 1.80rem; height: 1.80rem;line-height: 1.80rem; text-align: center; background-color: #fff; margin-right: 0.1rem; }\n    #app .item:last-child{  margin-right: 0; }\n  </style>\n</head>\n<body>\n    <div id=\"app\">\n      <div class=\"item\"> 1 </div>\n      <div class=\"item\"> 2 </div>\n      <div class=\"item\"> 3 </div>\n      <div class=\"item\"> 4 </div>\n    </div>\n</body>\n</html>\n```",
      "data": {
        "title": "vw&rem实现移动端布局",
        "date": "2019-09-10 11:51:26",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vwandrem-shi-xian-yi-dong-duan-bu-ju"
    },
    {
      "content": "``` javascript\nfunction query(url){\n  let reg=/([^=?&]+)=([^=?&]+)/g,\n  obj={};\n  url.replace(reg,function(){\n    obj[arguments[1]]=arguments[2]\n  })\n  return obj\n}\n\nquery(location.href)\n```",
      "data": {
        "title": "正则获取url参数",
        "date": "2019-09-10 11:46:00",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "zheng-ze-huo-qu-url-can-shu"
    },
    {
      "content": "## [https://wow.techbrood.com/fiddle/29490](https://wow.techbrood.com/fiddle/29490)",
      "data": {
        "title": "CSS3 19种LOADING（加载）动效",
        "date": "2019-09-09 16:58:20",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css3-19-chong-loadingjia-zai-dong-xiao"
    },
    {
      "content": "[灵活运用CSS开发技巧(66个实用技巧，值得收藏)](https://juejin.im/post/5d4d0ec651882549594e7293)",
      "data": {
        "title": "灵活运用CSS开发技巧(66个实用技巧，值得收藏)",
        "date": "2019-09-09 11:56:37",
        "tags": [
          "转载",
          "CSS"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ling-huo-yun-yong-css-kai-fa-ji-qiao-66-ge-shi-yong-ji-qiao-zhi-de-shou-cang"
    },
    {
      "content": "[postcss-px-to-viewport](https://www.npmjs.com/package/postcss-px-to-viewport)",
      "data": {
        "title": "postcss的插件",
        "date": "2019-09-09 11:29:08",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "postcss-de-cha-jian"
    },
    {
      "content": "[https://juejin.im/post/5d754dbde51d4561cd2466bf](https://juejin.im/post/5d754dbde51d4561cd2466bf)",
      "data": {
        "title": "看完这篇，你也能把 React Hooks 玩出花",
        "date": "2019-09-09 11:08:09",
        "tags": [
          "转载",
          "React"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/kan-wan-zhe-pian-ni-ye-neng-ba-react-hooks-wan-chu-hua.jpg",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "kan-wan-zhe-pian-ni-ye-neng-ba-react-hooks-wan-chu-hua"
    },
    {
      "content": "1. 目前JS中有6种基本数据类型: Undefined、Null、Boolean、Number、Symbol 和 String。还有1种复杂的数据类型————Object，Object本质上是由一组无序的名值对组成的。Object、Array和Function则属于引用类型。\n2. 基本数据类型是不可变的，而非基本数据类型是可变的。\n3. 基本数据类型是不可变的，因为它们一旦创建就无法更改，但非基本数据类型刚可更改，意味着一旦创建了对象，就可以更改它。\n4. 将基本数据类型与其值进行比较，这意味着如果两个值具有相同的数据类型并具有相同的值，那么它们是严格相等的。\n5. 非基本数据类型不与值进行比较。例如，如果两个对象具有相同的属性和值，则它们严格不相等。",
      "data": {
        "title": "JS 基本和非基本数据类型",
        "date": "2019-09-09 10:39:35",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-ji-ben-he-fei-ji-ben-shu-ju-lei-xing"
    },
    {
      "content": "1. 使用 set \n```\nfunction uniquearray(array) { \n    let unique_array= Array.from(set(array)) \n\t\treturn unique_array; \n}\n```\n2. 使用 filter\n```\nfunction unque_array (arr) {\n  let unique_array = arr.filter(function(elem, index, self) {\n    return index == self.indexOf(elem);\n  })\n  return unique_array;\n}\n console.log(unique_array(array_with_duplicates));\n```\n3. 使用 for 循环\n```\nArray dups_names = ['Ron', 'Pal', 'Fred', 'Rongo', 'Ron'];\nfunction dups_array(dups_names) {\n let unique = {};\n names.forEach(function(i) {\n    If (!unique[i]) {\n      unique[i] = true;    }\n  });\nreturn Object.keys(unique);}   // Ron, Pal, Fred, Rongo\nDups_array(names);\n\n```",
      "data": {
        "title": "JS 数组去重复",
        "date": "2019-09-09 10:36:38",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-shu-zu-qu-chong-fu"
    },
    {
      "content": "[https://juejin.im/post/5d74d4376fb9a06ad16f9644](https://juejin.im/post/5d74d4376fb9a06ad16f9644)",
      "data": {
        "title": "翻译Babel文档之@babel/preset-env",
        "date": "2019-09-09 10:13:54",
        "tags": [
          "Babel",
          "Webpack",
          "转载"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/babel-preset-env.jpg",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "babel-preset-env"
    },
    {
      "content": "` tip 函数式组件, 无状态，无法实例化，内部没有任何生命周期处理方法，非常轻量，因而渲染性能高，特别适合用来只依赖外部数据传递而变化的组件。`\n\n> 在template标签里面标明functional\n> 只接受props值\n> 不需要script标签\n\n```html\n<!-- App.vue -->\n<template>\n  <div>\n    <UserList :users=\"users\" :click-handler=\"clickHandler.bind(this)\"></UserList>\n  </div>\n</template>\n \n<script>\nimport UserList from \"./UserList\";\n \nexport default {\n  name: \"App\",\n  data: () => {\n    users: ['james', 'ian']\n  }\n  components: { UserList },\n  methods: {\n    clickHandler(name){\n      console.log(`clicked: ${name}`);\n    }    \n  }\n};\n</script>\n```\n```\n// UserList.vue\n<template functional>\n  <div>\n    <p v-for=\"(name, idx) in props.users\" @click=\"props.clickHandler(name)\" :key=\"idx\">\n      {{ name }}\n    </p>\n  </div>\n</template>\n\n```",
      "data": {
        "title": "Vue 函数式组件",
        "date": "2019-06-03 10:35:06",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-han-shu-shi-zu-jian"
    },
    {
      "content": "``` html\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <title>CSS3 实现六边形图片展示效果</title>\n    <style type=\"text/css\">\n        body,\n        div,\n        img,\n        ul,\n        li {\n            margin: 0;\n            padding: 0;\n        }\n\n        body {\n            font-size: 12px;\n            background-color: #DDD;\n            min-width: 1200px;\n        }\n\n        ul,\n        ul li {\n            list-style: none;\n        }\n\n        .boxF,\n        .boxS,\n        .boxT,\n        .overlay {\n            width: 200px;\n            height: 250px;\n            overflow: hidden;\n        }\n\n        .boxF,\n        .boxS {\n            visibility: hidden;\n        }\n\n        .boxF {\n            transform: rotate(120deg);\n            float: left;\n            margin-left: 10px;\n            -ms-transform: rotate(120deg);\n            -moz-transform: rotate(120deg);\n            -webkit-transform: rotate(120deg);\n        }\n\n        .boxS {\n            transform: rotate(-60deg);\n            -ms-transform: rotate(-60deg);\n            -moz-transform: rotate(-60deg);\n            -webkit-transform: rotate(-60deg);\n        }\n\n        .boxT {\n            transform: rotate(-60deg);\n            background: no-repeat 50% center;\n            background-size: 125% auto;\n            -ms-transform: rotate(-60deg);\n            -moz-transform: rotate(-60deg);\n            -webkit-transform: rotate(-60deg);\n            visibility: visible;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"boxF\">\n        <div class=\"boxS\">\n            <div class=\"boxT\" style=\"background-image: url(./images/pic.jpg);\"></div>\n        </div>\n    </div>\n</body>\n\n</html>\n```",
      "data": {
        "title": "CSS实现六边形图片展示效果",
        "date": "2019-02-04 11:57:21",
        "tags": [
          "CSS3"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css-shi-xian-liu-bian-xing-tu-pian-zhan-shi-xiao-guo"
    },
    {
      "content": "Early bird gets the worm.\n![](http://zssjs.coding.me/post-images/1567994570618.jpg)",
      "data": {
        "title": "About",
        "date": "2019-01-25 19:09:48",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "about"
    },
    {
      "content": "## JS中如何将页面重定向到另一个页面？\n* 使用 location.href：`window.location.href =\"https://www.baidu.com/\"`\n* 使用  location.replace：`window.location.replace(\" https://www.baidu.com/\")`\n## JS中的`Array.splice()`和`Array.slice()`方法有什么区别\n```\nvar arr=[0,1,2,3,4,5,6,7,8,9];//设置一个数组\nconsole.log(arr.slice(2,7));//2,3,4,5,6\nconsole.log(arr.splice(2,7));//2,3,4,5,6,7,8\n//由此我们简单推测数量两个函数参数的意义,\nslice(start,end)第一个参数表示开始位置,第二个表示截取到的位置(不包含该位置)\nsplice(start,length)第一个参数开始位置,第二个参数截取长度\n```\n```\nvar x=y=[0,1,2,3,4,5,6,7,8,9]\nconsole.log(x.slice(2,5));//2,3,4\nconsole.log(x);[0,1,2,3,4,5,6,7,8,9]原数组并未改变\n//接下来用同样方式测试splice\nconsole.log(y.splice(2,5));//2,3,4,5,6\nconsole.log(y);//[0,1,7,8,9]显示原数组中的数值被剔除掉了\n```\n函数参数上slice和splice第一个参数都是截取开始位置,slice第二个参数是截取的结束位置(不包含),而splice第二个参数(表示这个从开始位置截取的长度),slice不会对原数组产生变化,而splice会直接剔除原数组中的截取数据!\n## 解释JS中的高阶函数？\n高阶函数是JS函数式编程的最佳特性。它是以函数为参数并返回函数作为结果的函数。一些内置的高阶函数是map、filter、reduce 等等。\n##  substr() 和 substring() 区别\nsubstr()  函数的形式为substr(startIndex,length)。 它从startIndex返回子字符串并返回'length'个字符数。\n```\nvar s = \"hello\";\n( s.substr(1,4) == \"ello\" ) // true\n``` \nsubstring() 函数的形式为substring(startIndex,endIndex)。 它返回从startIndex到endIndex - 1的子字符串。\n```\nvar s = \"hello\";\n( s.substring(1,4) == \"ell\" ) // true \n```",
      "data": {
        "title": "js 基础知识",
        "date": "2019-01-09 10:04:34",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jsss"
    },
    {
      "content": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \n\n<!-- more -->\n\n[Github](https://github.com/getgridea/gridea)  \n[Gridea 主页](http://hvenotes.fehey.com/)  \n[示例网站](http://fehey.com/)\n\n## 特性👇\n📝  你可以使用最酷的 **Markdown** 语法，进行快速创作  \n\n🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片  \n\n🏷️  你可以对文章进行标签分组  \n\n📋  你可以自定义菜单，甚至可以创建外部链接菜单  \n\n💻  你可以在 **𝖶𝗂𝗇𝖽𝗈𝗐𝗌** 或 **𝖬𝖺𝖼𝖮𝖲** 设备上使用此客户端  \n\n🌎  你可以使用 **𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌** 或 **Coding Pages** 向世界展示，未来将支持更多平台  \n\n💬  你可以进行简单的配置，接入 [Gitalk](https://github.com/gitalk/gitalk) 或 [DisqusJS](https://github.com/SukkaW/DisqusJS) 评论系统  \n\n🇬🇧  你可以使用**中文简体**或**英语**  \n\n🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力  \n\n🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步  \n\n🌱 当然 **Gridea** 还很年轻，有很多不足，但请相信，它会不停向前🏃\n\n未来，它一定会成为你离不开的伙伴\n\n尽情发挥你的才华吧！\n\n😘 Enjoy~\n",
      "data": {
        "title": "Hello Gridea",
        "date": "2018-12-12 00:00:00",
        "tags": [
          "Gridea"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/hello-gridea.png",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... ",
      "fileName": "hello-gridea"
    }
  ],
  "tags": [
    {
      "name": "正则",
      "slug": "-BWRXNCKp",
      "used": true
    },
    {
      "name": "tree-data",
      "slug": "D9gg5gsxz",
      "used": true
    },
    {
      "name": "表格合并",
      "slug": "X0WqTo9k-",
      "used": true
    },
    {
      "name": "BFF",
      "slug": "5-UnsOMGv",
      "used": true
    },
    {
      "name": "editor",
      "slug": "6yuyVZc0d",
      "used": true
    },
    {
      "name": "pdf",
      "slug": "dzK0nJiVX",
      "used": true
    },
    {
      "name": "tree",
      "slug": "Y_4-qZHt4",
      "used": true
    },
    {
      "name": "jszip",
      "slug": "io7s_k4Bi",
      "used": true
    },
    {
      "name": "file-saver",
      "slug": "vt5L6R3FYO",
      "used": true
    },
    {
      "name": "权限组件",
      "slug": "Jb-SJyigC",
      "used": true
    },
    {
      "name": "注释",
      "slug": "XDFFa6gA3",
      "used": true
    },
    {
      "name": "递归",
      "slug": "ED6QfO3Ny",
      "used": true
    },
    {
      "name": "表单",
      "slug": "AVxezhJNw",
      "used": true
    },
    {
      "name": "video",
      "slug": "G-zs9kZXx",
      "used": true
    },
    {
      "name": "vue-router",
      "slug": "kSJZVvO9m",
      "used": true
    },
    {
      "name": "scss",
      "slug": "XmNHDs_4b",
      "used": true
    },
    {
      "name": "Vue cli 配置",
      "slug": "AhYf3DgI2",
      "used": true
    },
    {
      "name": "支付",
      "slug": "KFXnGxyCd",
      "used": true
    },
    {
      "name": "axios",
      "slug": "eCWGfR6xK",
      "used": true
    },
    {
      "name": "MongoDB",
      "slug": "v83WTPv7R",
      "used": true
    },
    {
      "name": "Express",
      "slug": "GauYgtUzU",
      "used": true
    },
    {
      "name": "面试",
      "slug": "SFjl8w3gN",
      "used": true
    },
    {
      "name": "骨架屏",
      "slug": "_xPV4Q0tt",
      "used": true
    },
    {
      "index": -1,
      "name": "Node",
      "slug": "OzOK4F1MF",
      "used": true
    },
    {
      "name": "富文本",
      "slug": "DXpMn4Vr-",
      "used": true
    },
    {
      "name": "canvas",
      "slug": "gdtm8Sgtl",
      "used": true
    },
    {
      "name": "水印",
      "slug": "K6j32moVrL",
      "used": true
    },
    {
      "index": -1,
      "name": "js utils",
      "slug": "R88E2029L",
      "used": true
    },
    {
      "index": -1,
      "name": "导航",
      "slug": "fd-GbsrMB",
      "used": true
    },
    {
      "index": -1,
      "name": "DOM",
      "slug": "r7GGl0O6k",
      "used": true
    },
    {
      "index": -1,
      "name": "PDF 工具",
      "slug": "CScbFckNI",
      "used": true
    },
    {
      "index": -1,
      "name": "JS",
      "slug": "wvPOp3y83",
      "used": true
    },
    {
      "index": -1,
      "name": "ECMAScript",
      "slug": "RSJWg9SqX",
      "used": true
    },
    {
      "index": -1,
      "name": "Date",
      "slug": "1GtGwpl4I",
      "used": true
    },
    {
      "index": -1,
      "name": "微信开发",
      "slug": "vsnOnS8fl",
      "used": true
    },
    {
      "index": -1,
      "name": "Vue",
      "slug": "ay0H2xLOg",
      "used": true
    },
    {
      "index": -1,
      "name": "linux",
      "slug": "jymp3MJ4I",
      "used": true
    },
    {
      "index": -1,
      "name": "uniapp",
      "slug": "d4YF2i3HQ",
      "used": true
    },
    {
      "index": -1,
      "name": "小程序",
      "slug": "4iR-u28Or",
      "used": true
    },
    {
      "index": -1,
      "name": "BOM",
      "slug": "QGUVxGfKE",
      "used": true
    },
    {
      "index": -1,
      "name": "css 特效",
      "slug": "xzBFZxtGN",
      "used": true
    },
    {
      "index": -1,
      "name": "CSS3",
      "slug": "JESsj0XFg",
      "used": true
    },
    {
      "index": -1,
      "name": "CSS",
      "slug": "bWrExhHdI",
      "used": true
    },
    {
      "index": -1,
      "name": "React",
      "slug": "GixeYCIj2",
      "used": true
    },
    {
      "index": -1,
      "name": "转载",
      "slug": "147q2r3yZ",
      "used": true
    },
    {
      "index": -1,
      "name": "Babel",
      "slug": "BtiHSBcIg",
      "used": true
    },
    {
      "index": 4,
      "name": "Webpack",
      "slug": "ZuZw9Kmhq",
      "used": true
    },
    {
      "name": "Gridea",
      "slug": "ozqpYaIiU",
      "used": true
    },
    {
      "index": -1,
      "name": "HTML",
      "slug": "zfJmyjceA",
      "used": false
    },
    {
      "index": -1,
      "name": "Gulp",
      "slug": "Y_pHuc_3y",
      "used": false
    },
    {
      "index": -1,
      "name": "vw/rem",
      "slug": "Oev1WVdAV",
      "used": false
    },
    {
      "index": -1,
      "name": "Nginx",
      "slug": "nwUVZWX57",
      "used": false
    },
    {
      "index": -1,
      "name": "网友博客",
      "slug": "jVf-TWagy",
      "used": false
    },
    {
      "index": -1,
      "name": "前端周报",
      "slug": "C1xdYr9fB",
      "used": false
    },
    {
      "index": -1,
      "name": "JQuery",
      "slug": "6DMfVYLHC",
      "used": false
    }
  ],
  "menus": [
    {
      "link": "/",
      "name": "首页",
      "openType": "Internal"
    },
    {
      "link": "/archives",
      "name": "归档",
      "openType": "Internal"
    },
    {
      "link": "/tags",
      "name": "标签",
      "openType": "Internal"
    },
    {
      "link": "/post/about",
      "name": "关于",
      "openType": "Internal"
    },
    {
      "link": "/tag/ay0H2xLOg/",
      "name": "Vue",
      "openType": "Internal"
    },
    {
      "link": "/post/weekly/",
      "name": "前端周报",
      "openType": "Internal"
    },
    {
      "link": "/post/da-shen-bo-ke/",
      "name": "大神博客",
      "openType": "Internal"
    }
  ]
}