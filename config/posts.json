{
  "posts": [
    {
      "content": "[关于带有\"显示更多\"按钮的多行文本截断思考😲](https://juejin.im/post/5d818e39e51d4561e0516ba4)",
      "data": {
        "title": "关于带有\"显示更多\"按钮的多行文本截断思考😲",
        "date": "2019-09-19 09:11:48",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "guan-yu-dai-you-xian-shi-geng-duo-an-niu-de-duo-xing-wen-ben-jie-duan-si-kao"
    },
    {
      "content": "[[创造狮导航](http://chuangzaoshi.com/)](http://chuangzaoshi.com/)",
      "data": {
        "title": "🎁🔗网址导航",
        "date": "2019-09-19 08:55:50",
        "tags": [
          "导航"
        ],
        "published": true,
        "hideInList": true,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "dao-hang"
    },
    {
      "content": "## [政采云前端小报](https://weekly.zoo.team/)",
      "data": {
        "title": "✔🎰前端周报",
        "date": "2019-09-19 08:35:21",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "weekly"
    },
    {
      "content": "## [政采云](https://www.zoo.team/)\n> [基于 Vue 的商品主图放大镜方案](https://www.zoo.team/article/vue-item-magnifier)\n\n## [刘泓宾博客](https://www.lhbbk.com/)\n> [iphonex点击表单后，网页焦点错位](https://www.lhbbk.com/archives/250/)\n\n## [PASSER-BY](https://passer-by.com/)\n> [JQuery 项目/插件](https://passer-by.com/project.html)",
      "data": {
        "title": "🐱‍🏍大神博客",
        "date": "2019-09-19 08:20:36",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "da-shen-bo-ke"
    },
    {
      "content": "[纯css实现星级评分效果](https://juejin.im/post/5d7f200ae51d456201486ed7)",
      "data": {
        "title": "💛纯css实现星级评分效果",
        "date": "2019-09-18 17:42:15",
        "tags": [
          "CSS3",
          "css 特效"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "chun-css-shi-xian-xing-ji-ping-fen-xiao-guo"
    },
    {
      "content": "[vue / react的UI库都在用的几个DOM API🚀](https://juejin.im/post/5d808601f265da03ef7a469b)\n## element.getBoundingClientRect():rect\n## insertAdjacentElement\n### 实现append(beforeend), 插入到指定元素内部的尾部\n### 实现prepend(afterbegin), 插入到指定元素内部的头部\n### 实现after(afterend), 插入到指定元素后面\n### 实现before(beforebegin), 插入到指定元素前面",
      "data": {
        "title": "vue / react的UI库都在用的几个DOM API🚀",
        "date": "2019-09-18 16:50:48",
        "tags": [
          "DOM"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-react-de-ui-ku-du-zai-yong-de-ji-ge-dom-api"
    },
    {
      "content": "[Halo，Babel](https://juejin.im/post/5d7fcfade51d45620821cf7f)",
      "data": {
        "title": "Halo，Babel",
        "date": "2019-09-17 17:51:31",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "halobabel"
    },
    {
      "content": "[迅读PDF](http://www.xundupdf.com/)\n> 可免删除保留电子签名",
      "data": {
        "title": "迅读PDF",
        "date": "2019-09-17 16:58:02",
        "tags": [
          "PDF 工具"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "httpwwwxundupdfcom"
    },
    {
      "content": "[走进安卓的重灾区----video]([走进安卓的重灾区----video](https://juejin.im/post/5d8046345188253849631aa6))\n>在ios上会自动全屏播放，需要在video标签上设置一个属性 webkit-playsinline，ios10及以上版本属性名改成 playsinline。安卓上，无法自动播放，必须手动触发视频的播放。调用任何方法都没用，据说这个为了帮用户省流量而设定的。但是安卓在首次触发之后，再次触发可以通过调用 .play 来触发播放视频。因此做兼容的时候可以设一个判断是否首次播放的标志来处理。 ",
      "data": {
        "title": "走进安卓的重灾区----video",
        "date": "2019-09-17 12:01:42",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "zou-jin-an-zhuo-de-chong-zai-qu-video"
    },
    {
      "content": "[rotateImage](https://github.com/any86/useful-utils/blob/master/docs/rotateImage.md)",
      "data": {
        "title": "rotateImage 旋转图片",
        "date": "2019-09-17 11:46:08",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "rotateimage"
    },
    {
      "content": "[CountDown](https://github.com/any86/useful-utils/blob/master/docs/CountDown.md)\n## 倒计时小例子\n```\n<div id=\"box\"></div>\n\t<script>\n\t\t//new Date()获取客户端本地当前时间（不能拿它做重要依据，因为用户可以随意修改）\n\t\t/* \n\t\t * 倒计时抢购需要从服务器获取当前时间  AJAX\n\t\t *    问题：时间差（从服务器把时间给客户端，到客户端获取到这个信息，中间经历的时间就是时间差，而时间差是不可避免的，我们应尽可能减少这个误差）\n\t\t *    - 从响应头获取时间（AJAX异步）\n\t\t *    - 基于HEAD请求（只获取响应头信息）\n\t\t */\n\t\tlet target = new Date('2019/09/14 13:27:00'),\n\t\t\tnow = null,\n\t\t\ttimer = null;\n\n\t\t//=>从服务器获取时间：获取到时间后再做其他的事情\n\t\tfunction func(callback) {\n\t\t\tlet xhr = new XMLHttpRequest;\n\t\t\txhr.open('HEAD', 'json/data.json', true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (!/^(2|3)\\d{2}$/.test(xhr.status)) return;\n\t\t\t\tif (xhr.readyState === 2) {\n\t\t\t\t\tnow = new Date(xhr.getResponseHeader('Date'));\n\t\t\t\t\tcallback && callback();\n\t\t\t\t}\n\t\t\t}\n\t\t\txhr.send(null);\n\t\t}\n\n\t\t//=>开启倒计时模式\n\t\tfunction computed() {\n\t\t\tlet spanTime = target - now;\n\t\t\tif (spanTime <= 0) {\n\t\t\t\t//=>到抢购时间：结束定时器\n\t\t\t\tclearInterval(timer);\n\t\t\t\ttimer = null;\n\t\t\t\tbox.innerHTML = \"开抢~~\";\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet hours = Math.floor(spanTime / (60 * 60 * 1000));\n\t\t\tspanTime -= hours * 60 * 60 * 1000;\n\t\t\tlet minutes = Math.floor(spanTime / (60 * 1000));\n\t\t\tspanTime -= minutes * 60 * 1000;\n\t\t\tlet seconds = Math.floor(spanTime / 1000);\n\t\t\tbox.innerHTML =\n\t\t\t\t`距离抢购还剩 ${hours<10?'0'+hours:hours}:${minutes<10?'0'+minutes:minutes}:${seconds<10?'0'+seconds:seconds}`;\n\n\t\t\t//=>每一次计算完，我们需要让NOW在原来的基础上加上一秒（第一次从服务器获取到时间，后期直接基于这个时间自己加即可，不要每隔一秒重新从服务器拿）\n\t\t\tnow = new Date(now.getTime() + 1000);\n\t\t}\n\t\tfunc(() => {\n\t\t\t//=>已经从服务器获取时间了\n\t\t\tcomputed();\n\t\t\ttimer = setInterval(computed, 1000);\n\t\t});\n\t</script>\n```",
      "data": {
        "title": "⏳CountDown 倒计时",
        "date": "2019-09-17 11:43:16",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "countdown"
    },
    {
      "content": "[灵活运用JS开发技巧](https://juejin.im/post/5cc7afdde51d456e671c7e48)",
      "data": {
        "title": "灵活运用JS开发技巧",
        "date": "2019-09-17 11:40:00",
        "tags": [
          "JS",
          "ECMAScript"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ling-huo-yun-yong-js-kai-fa-ji-qiao"
    },
    {
      "content": "[JavaScript入门指南(学习笔记)](https://juejin.im/post/5d7b884b6fb9a06aff5ea033)",
      "data": {
        "title": "JavaScript入门指南(学习笔记)",
        "date": "2019-09-17 10:49:22",
        "tags": [
          "ECMAScript"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "javascript-ru-men-zhi-nan-xue-xi-bi-ji"
    },
    {
      "content": "[如何获取某一天所在的星期](https://segmentfault.com/a/1190000020342937)\n```js\nfunction getWeekStartAndEnd(timestamp) {\n    const oneDayTime = 1000 * 60 * 60 * 24; // 一天里一共的毫秒数\n    const today = timestamp ? new Date(timestamp) : new Date();\n    const todayDay = today.getDay() || 7; // 若那一天是周末时，则强制赋值为7\n    const startDate = new Date(\n        today.getTime() - oneDayTime * (todayDay - 1)\n    );\n    const endDate = new Date(today.getTime() + oneDayTime * (7 - todayDay));\n\n    return { startDate, endDate };\n}\n```",
      "data": {
        "title": "JavaScript：如何获取某一天所在的星期",
        "date": "2019-09-17 08:28:34",
        "tags": [
          "ECMAScript",
          "Date"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "javascriptru-he-huo-qu-mou-yi-tian-suo-zai-de-xing-qi"
    },
    {
      "content": ">前端server域名为：`http://xx_domain`\n>后端server域名为：`https://github.com`\n\n`http://xx_domain` 对 `https://github.com` 发起请求一定会出现跨域\n\n不过只需要启动一个nginx服务器，将server_name设置为`xx_domain`,然后设置相应的location以拦截前端需要跨域的请求，最后将请求代理回`github.com`。如下面的配置：\n```\n## 配置反向代理的参数\nserver {\n    listen    8080;\n    server_name xx_domain\n\n    ## 1. 用户访问 http://xx_domain，则反向代理到 https://github.com\n    location / {\n        proxy_pass  https://github.com;\n        proxy_redirect     off;\n        proxy_set_header   Host             $host;        # 传递域名\n        proxy_set_header   X-Real-IP        $remote_addr; # 传递ip\n        proxy_set_header   X-Scheme         $scheme;      # 传递协议\n        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    }\n}\n```\n这样可以完美绕过浏览器的同源策略：github.com访问nginx的github.com属于同源访问，而nginx对服务端转发的请求不会触发浏览器的同源策略。\n```\nhttp {\n    include mime.types;\n    server_tokens off;\n\n    ## 配置反向代理的参数\n    server {\n        listen    8080;\n\n        ## 1. 用户访问 http://ip:port，则反向代理到 https://github.com\n        location / {\n            proxy_pass  https://github.com;\n            proxy_redirect     off;\n            proxy_set_header   Host             $host;\n            proxy_set_header   X-Real-IP        $remote_addr;\n            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n        }\n\n        ## 2.用户访问 http://ip:port/README.md，则反向代理到\n        ##   https://github.com/zibinli/blog/blob/master/README.md\n        location /README.md {\n            proxy_set_header  X-Real-IP  $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_pass https://github.com/zibinli/blog/blob/master/README.md;\n        }\n    }\n}\n```",
      "data": {
        "title": "Nginx 解决跨域的原理",
        "date": "2019-09-16 14:58:43",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "nginx-jie-jue-kua-yu-de-yuan-li"
    },
    {
      "content": "## Js数组扁平化 [https://juejin.im/post/5d79a9d7f265da03d55e843a](https://juejin.im/post/5d79a9d7f265da03d55e843a)",
      "data": {
        "title": "JavaScript实现flatten多种方法",
        "date": "2019-09-16 11:53:56",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "javascript-shi-xian-flatten-duo-chong-fang-fa"
    },
    {
      "content": "[开发一个简单的 Vue UI 组件库（二）——按需引入部分](https://juejin.im/post/5d7a579fe51d45620064bbe7)\nhttps://github.com/NicholasCui/TestMyComponent",
      "data": {
        "title": "Vue 自定义 按需引入",
        "date": "2019-09-16 11:37:16",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-zi-ding-yi-an-xu-yin-ru"
    },
    {
      "content": "[Nodejs获取微信签名并使用JSSDK](https://juejin.im/post/5d7b76b26fb9a06ad34758dc)",
      "data": {
        "title": "Nodejs获取微信签名并使用JSSDK",
        "date": "2019-09-16 11:31:25",
        "tags": [
          "微信开发"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "nodejs-huo-qu-wei-xin-qian-ming-bing-shi-yong-jssdk"
    },
    {
      "content": "## 在懒加载的实现中，有两个关键的数值：一个是当前可视区域的高度，另一个是元素距离可视区域顶部的高度。\n### 当前可视区域的高度\n>现代浏览器及 IE9 以上的浏览器中，可以用 window.innerHeight 属性获取。在低版本 IE 的标准模式中，可以用 document.documentElement.clientHeight 获取，这里我们兼容两种情况\n```\nconst viewHeight = window.innerHeight || document.documentElement.clientHeight \n```\n### 元素距离可视区域顶部的高度\n>getBoundingClientRect() 方法获取返回元素的大小及其相对于视口的位置。\n#### MDN：\n>该方法的返回值是一个 DOMRect 对象，这个对象是由该元素的 getClientRects() 方法返回的一组矩形的集合, 即：是与该元素相关的 CSS 边框集合 。\n>DOMRect 对象包含了一组用于描述边框的只读属性——left、top、right 和 bottom，单位为像素。除了 width 和 height 外的属性都是相对于视口的左上角位置而言的。\n![](http://zssjs.coding.me/post-images/1568603807787.png)\n## Code\n```\n<script>\n    // 获取所有的图片标签\n    const imgs = document.getElementsByTagName('img')\n    // 获取可视区域的高度\n    const viewHeight = window.innerHeight || document.documentElement.clientHeight\n    // num用于统计当前显示到了哪一张图片，避免每次都从第一张图片开始检查是否露出\n    let num = 0\n    function lazyload(){\n        for(let i=num; i<imgs.length; i++) {\n            // 用可视区域高度减去元素顶部距离可视区域顶部的高度\n            let distance = viewHeight - imgs[i].getBoundingClientRect().top\n            // 如果可视区域高度大于等于元素顶部距离可视区域顶部的高度，说明元素露出\n            if(distance >= 0 ){\n                // 给元素写入真实的src，展示图片\n                imgs[i].src = imgs[i].getAttribute('data-src')\n                // 前i张图片已经加载完毕，下次从第i+1张开始检查是否露出\n                num = i + 1\n            }\n        }\n    }\n    // 监听Scroll事件\n    window.addEventListener('scroll', lazyload, false);\n</script>\n```",
      "data": {
        "title": "Lazy-Load-img",
        "date": "2019-09-16 11:11:11",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "lazy-load-img"
    },
    {
      "content": "### v-copy.js\n```\nimport { Message } from 'ant-design-vue';\n\nconst vCopy = { // 名字爱取啥取啥\n  /*\n    bind 钩子函数，第一次绑定时调用，可以在这里做初始化设置\n    el: 作用的 dom 对象\n    value: 传给指令的值，也就是我们要 copy 的值\n  */\n  bind(el, { value }) {\n    el.$value = value; // 用一个全局属性来存传进来的值，因为这个值在别的钩子函数里还会用到\n    el.handler = () => {\n      if (!el.$value) {\n      // 值为空的时候，给出提示，我这里的提示是用的 ant-design-vue 的提示，你们随意\n        Message.warning('无复制内容');\n        return;\n      }\n      // 动态创建 textarea 标签\n      const textarea = document.createElement('textarea');\n      // 将该 textarea 设为 readonly 防止 iOS 下自动唤起键盘，同时将 textarea 移出可视区域\n      textarea.readOnly = 'readonly';\n      textarea.style.position = 'absolute';\n      textarea.style.left = '-9999px';\n      // 将要 copy 的值赋给 textarea 标签的 value 属性\n      textarea.value = el.$value;\n      // 将 textarea 插入到 body 中\n      document.body.appendChild(textarea);\n      // 选中值并复制\n      textarea.select();\n      textarea.setSelectionRange(0, textarea.value.length);\n      const result = document.execCommand('Copy');\n      if (result) {\n        Message.success('复制成功');\n      }\n      document.body.removeChild(textarea);\n    };\n    // 绑定点击事件，就是所谓的一键 copy 啦\n    el.addEventListener('click', el.handler);\n  },\n  // 当传进来的值更新的时候触发\n  componentUpdated(el, { value }) {\n    el.$value = value;\n  },\n  // 指令与元素解绑的时候，移除事件绑定\n  unbind(el) {\n    el.removeEventListener('click', el.handler);\n  },\n};\n\nexport default vCopy;\n```\n### directives.js\n```\nimport copy from './v-copy';\n// 自定义指令\nconst directives = {\n  copy,\n};\n// 这种写法可以批量注册指令\nexport default {\n  install(Vue) {\n    Object.keys(directives).forEach((key) => {\n      Vue.directive(key, directives[key]);\n    });\n  },\n};\n```\n### main.js\n```\nimport Vue from 'vue';\nimport Directives from './directives';\n\nVue.use(Directives);\n```\n### 实例\n```\n<template>\n  <button v-copy=\"copyText\">copy</button>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      copyText: '要 Copy 的内容',\n    };\n  },\n};\n</script>\n```\n[https://juejin.im/post/5d7ee31e518825664525dfe5](https://juejin.im/post/5d7ee31e518825664525dfe5)",
      "data": {
        "title": "Vue.directive()",
        "date": "2019-09-16 10:51:52",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vuedirective"
    },
    {
      "content": "## 一些 Vue 生疏知识\n[Vue 实用开发技巧](https://juejin.im/post/5d790819e51d453b5e465bc7)",
      "data": {
        "title": "Vue 生疏知识&实用开发技巧",
        "date": "2019-09-16 10:38:35",
        "tags": [
          "转载",
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-shi-yong-kai-fa-ji-qiao"
    },
    {
      "content": "作用域插槽",
      "data": {
        "title": "Vue 作用域插槽",
        "date": "2019-09-16 10:38:35",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-zuo-yong-yu-cha-cao"
    },
    {
      "content": "## 不使用Vuex创建Store(Vue.observable)\n`Vue.observable({})`返回的对象可以直接用于渲染函数和计算属性内，并且会在发生改变时触发相应的更新。也可以作为最小化的跨组件状态存储器，用于简单的场景：\n```\nconst state = Vue.observable({ count: 0 })\n\nconst Demo = {\n  render(h) {\n    return h('button', {\n      on: { click: () => { state.count++ }}\n    }, `count is: ${state.count}`)\n  }\n}\n```\n我们可以利用这个API来应对一些简单的跨组件数据状态共享的情况.\n```\n// miniStore.js\n\nimport Vue from \"vue\";\n \nexport const miniStore = Vue.observable({ count: 0 });\n \nexport const actions = {\n  setCount(count) {\n    miniStore.count = count;\n  }\n}\n\nexport const getters = {\n  count: () => miniStore.count\n}\n```\n```\n// Demo.vue\n<template>\n  <div>\n    <p>count:{{count}}</p>\n    <button @click=\"add\"> +1 </button>\n    <button @click=\"sub\"> -1 </button>\n  </div>\n</template>\n \n<script>\nimport { actions, getters } from \"./store\";\nexport default {\n  name: \"App\",\n  computed: {\n    count() {\n      return getters.count;\n    }\n  },\n  methods: {\n    add: actions.setCount(this.count+1),\n    sub: actions.setCount(this.count-1)\n  }\n};\n</script>\n```",
      "data": {
        "title": "Vue.observable",
        "date": "2019-09-16 10:27:50",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue.observable"
    },
    {
      "content": "[Flex布局笔记-基础部分](https://juejin.im/post/5d7cd3b56fb9a06b2c32bef6)",
      "data": {
        "title": "Flex布局笔记-基础部分",
        "date": "2019-09-16 10:19:21",
        "tags": [
          "CSS3",
          "转载"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "flex-bu-ju-bi-ji-ji-chu-bu-fen"
    },
    {
      "content": "[web 前端用 linux 应该知道的知识](https://juejin.im/post/5d7df75d6fb9a06b1c745c7c)",
      "data": {
        "title": "linux 基础知识",
        "date": "2019-09-16 10:12:04",
        "tags": [
          "转载",
          "linux"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "linux-ying-gai-zhi-dao-de-zhi-shi"
    },
    {
      "content": "[https://juejin.im/post/5d7a53f0f265da03b9502214](https://juejin.im/post/5d7a53f0f265da03b9502214)",
      "data": {
        "title": "uni-app 结合 colorUI 开发项目的整体基本流程",
        "date": "2019-09-16 09:47:23",
        "tags": [
          "转载",
          "uniapp",
          "小程序"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "uni-app-jie-he-colorui-kai-fa-xiang-mu-de-zheng-ti-ji-ben-liu-cheng"
    },
    {
      "content": "## 正则表达式\n```\nString(Number).replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\n```\n## toLocaleString()方法\n```\n(123456789).toLocaleString('en-US')\n```\n![](http://zssjs.coding.me/post-images/1568596856868.jpg)\n![](http://zssjs.coding.me/post-images/1568596863204.jpg)",
      "data": {
        "title": "💰金额千分位格式化函数实现方法",
        "date": "2019-09-16 09:17:25",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jin-e-qian-fen-wei-ge-shi-hua-han-shu-shi-xian-fang-fa"
    },
    {
      "content": "[【不可思议的CSS】天气不可能那么可爱](https://juejin.im/post/5d2f3f3351882556c3186f57)",
      "data": {
        "title": "🌤【不可思议的CSS】天气不可能那么可爱",
        "date": "2019-09-12 17:31:39",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "bu-ke-si-yi-de-css-tian-qi-bu-ke-neng-na-me-ke-ai"
    },
    {
      "content": "```html\n<div class=\"container\">\n    <div class=\"wave\"></div>\n</div>\n```\n```scss\n.container {\n    position: absolute;\n    width: 200px;\n    height: 200px;\n    padding: 5px;\n    border: 5px solid rgb(118, 218, 255);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    overflow: hidden;\n}\n.wave {\n    position: relative;\n    width: 200px;\n    height: 200px;\n    background-color: rgb(118, 218, 255);\n    border-radius: 50%;\n \n    &::before,\n    &::after{\n        content: \"\";\n        position: absolute;\n        width: 400px;\n        height: 400px;\n        top: 0;\n        left: 50%;\n        background-color: rgba(255, 255, 255, .4);\n        border-radius: 45%;\n        transform: translate(-50%, -70%) rotate(0);\n        animation: rotate 6s linear infinite;\n        z-index: 10;\n    }\n    \n    &::after {\n        border-radius: 47%;\n        background-color: rgba(255, 255, 255, .9);\n        transform: translate(-50%, -70%) rotate(0);\n        animation: rotate 10s linear -5s infinite;\n        z-index: 20;\n    }\n}\n\n@keyframes rotate {\n    50% {\n        transform: translate(-50%, -73%) rotate(180deg);\n    } 100% {\n        transform: translate(-50%, -70%) rotate(360deg);\n    }\n}\n```",
      "data": {
        "title": "🌊CSS3 实现波浪效果",
        "date": "2019-09-12 15:57:08",
        "tags": [
          "css 特效"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css3-shi-xian-bo-lang-xiao-guo"
    },
    {
      "content": "[浏览器的一些“滚动”行为鉴赏🔼🔽](https://juejin.im/post/5d75adfbe51d4561e84fcc9c)",
      "data": {
        "title": "🔼🔽浏览器的一些“滚动”行为鉴赏",
        "date": "2019-09-12 15:20:15",
        "tags": [
          "BOM",
          "转载"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/liu-lan-qi-de-yi-xie-gun-dong-xing-wei-jian-shang.jpg"
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "liu-lan-qi-de-yi-xie-gun-dong-xing-wei-jian-shang"
    },
    {
      "content": "```html\n<img src='https://secure.gravatar.com/avatar/9a7560a750923bc17df191f8f5f511da?d=identicon' />\n<div></div>\n```\n```css\n*{ margin:0 }\ndiv{\n\twidth: 200px;\n  position: absolute;\n  left:0;\n  top:0;\n  z-index:2;\n\theight: 200px;\n\tbackground: linear-gradient(#03A9F4,#03A9F4), \n linear-gradient(90deg, #ffffff33 1px,transparent 0,transparent 19px),\n linear-gradient(#ffffff33 1px,transparent 0,transparent 19px),\n linear-gradient(transparent, #2196f387);\n\tbackground-size:100% 1.5%, 10% 100%,100% 10%, 100% 100%;\n\tbackground-repeat: no-repeat,repeat,repeat,no-repeat;\n\tbackground-position: 0 0,0 0, 0 0, 0 0;\n\tclip-path: polygon(0% 0%, 100% 0%, 100% 1.5%, 0% 1.5%);\n\tanimation: move 2s infinite linear;\n}\n\nimg{\n  width: 200px;\n\t height: 200px;\n}\n@keyframes move{\n\tto{\n\t\tbackground-position: 0 100%,0 0, 0 0, 0 0;\n\t\tclip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);\n\t}\n```\n\n[参考](https://codepen.io/laoyao/pen/MWgGzWb)\n![](http://zssjs.coding.me/post-images/1568262853871.gif)",
      "data": {
        "title": "🙅人脸识别 -- 扫描图",
        "date": "2019-09-12 12:30:59",
        "tags": [
          "css 特效"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ren-lian-shi-bie-sao-miao-tu"
    },
    {
      "content": "## 防抖\n\n``` html\n<body>\n  <button id=\"debounce\">点我防抖！</button>\n  <script>\n    window.onload = function() {\n      var myDebounce = document.getElementById(\"debounce\");\n      myDebounce.addEventListener(\"click\", debounce(sayDebounce));\n    }\n    function debounce(fn) {\n      let timeout = null;\n      return function() {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          fn.call(this, arguments);\n        }, 1000);\n      };\n    }\n    function sayDebounce() {\n      console.log(\"防抖成功！\");\n    }\n  </script>\n</body>\n```\n## 节流\n```html\n<body>\n  <button id=\"throttle\">点我节流！</button>\n  <script>\n    window.onload = function() {\n      var myThrottle = document.getElementById(\"throttle\");\n      myThrottle.addEventListener(\"click\", throttle(sayThrottle));\n    }\n    function throttle(fn) {\n      let flag = true;\n      return function() {\n        if(!flag) {\n          return;\n        }\n        flag = false;\n        setTimeout( () => {\n          fn.call(this, arguments);\n          flag = true;\n        }, 1000);\n      };\n    }\n    function sayThrottle() {\n      console.log(\"节流成功！\");\n    }\n  </script>\n</body>\n```",
      "data": {
        "title": "😘防抖&节流",
        "date": "2019-09-11 14:21:28",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "fang-dou-andjie-liu"
    },
    {
      "content": "[https://codepen.io/Chokcoco/pen/ALpdLj](https://codepen.io/Chokcoco/pen/ALpdLj)",
      "data": {
        "title": "🈶单行居中两行居左多行省略",
        "date": "2019-09-10 14:46:55",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "dan-xing-ju-zhong-liang-xing-ju-zuo-duo-xing-sheng-lue"
    },
    {
      "content": "使用getCurrentPosition方法实时获取当前Geolocation信息\n<!-- more -->\n\n``` javascript\nnavigator.geolocation.getCurrentPosition(\n        function (position) {\n            //获取地理位置成功时所做的处理\n    },\n        function (error) {\n            //获取地理位置信息失败时所做的处理\n    }, //以下是可选属性\n        {\n            enableHighAccuracy: true,//是否要求高精度的地理位置信息\n            timeout: 1000,//对地理位置信息的获取操作做超时限制，如果再该事件内未获取到地理位置信息，将返回错误\n            maximumAge:60*1000//设置缓存有效时间，在该时间段内，获取的地理位置信息还是设置此时间段之前的那次获得的信息，超过这段时间缓存的位置信息会被废弃\n        })\n```\n[https://www.cnblogs.com/qikeyishu/p/7708116.html](https://www.cnblogs.com/qikeyishu/p/7708116.html)\n```html\n<!Doctype html>\n<html>\n<head>\n    <title></title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"keywords\" content=\"关键词\"/>\n    <meta name=\"description\" content=\"描述\"/>\n    <meta name=\"author\" content=\"奇客艺术\"/>\n</head>\n<body>\n<p id=\"GeoDisplay\"></p>\n<script>\n    Geolocation();//执行Geolocation()函数\n    setInterval(Geolocation,100);//设置定时器，100ms执行一次Geolocation();实现实时获取\n    function getElem(id) {\n        return typeof id === 'string' ? document.getElementById(id):id;//typeof表示变量id的类型为字符串类型\n    }\n    var GetID = getElem(\"GeoDisplay\");\n    function showMap(lat,lon) {//自定义了一个在浏览器上显示地理信息的函数\n    var str = \"您当前位置的维度：\"+lat+\"，经度：\"+lon;\n        GetID.innerHTML = str;\n    }\n    function Geolocation() {\n        if(navigator.geolocation){\n            navigator.geolocation.getCurrentPosition(\n                function (position) {//传入了对象position\n                    showMap(position.coords.latitude,position.coords.longitude);\n                },\n                function (err) {//传入了error对象\n                    GetID.innerHTML = err.code + '\\n'+err.message;//Firefox3.6以上不支持error对象的message属性\n                    //error对象的code属性有如下属性值:\n                    //PERMISSION_DENIED(1):(permission_denied):用户单机信息条上的“不共享”按钮或直接拒绝被获取位置信息\n                    //POSITION_UNAVAILABLE(2):(position_unavailable):(position_unavailable)网络不可用或者无法连接到获取位置信息的卫星\n                    //TIMEOUT(3):(timeout)网络可用但在计算机用户的位置上花费过长时间\n                    //UNKNOWN_ERROR(0):(unknown_error)发生其他未知错误\n                })\n            }else {\n                GetID.innerHTML = \"您当前使用的浏览器不支持地理定位服务\";\n        }\n    }\n</script>\n</body>\n</html>\n```",
      "data": {
        "title": "✈JS 获取当前位置的地理坐标（经纬度）",
        "date": "2019-09-10 12:03:19",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "使用getCurrentPosition方法实时获取当前Geolocation信息",
      "fileName": "js-huo-qu-dang-qian-wei-zhi-de-di-li-zuo-biao-jing-wei-du"
    },
    {
      "content": "### \n>event.currentTarget 获取到的是发起事件的标签元素 event.target 获取的是触发事件的标签元素\n### event对象的常用属性和方法：\n* event.preventDefault();//阻止默认事件\n* event.isDefaultPrevented();//检测 event.preventDefault() 是否被调用过\n* event.currentTarget;//发起事件的标签\n* event.target;//触发事件的标签\n* event.type//事件的类型\n* event.pageX;event.pageY //相对于文件的左侧和顶部边缘的位置\n* event.which;//针对键盘和鼠标事件，确定底按的是哪个键或按钮 常用在keydown事件中\n* event.timeStamp;//事件触发时与事件创建之间的时间间隔\n* event.stopPropagation(); //阻止事件的冒泡",
      "data": {
        "title": "event.currentTarget与event.target的区别",
        "date": "2019-09-10 11:55:21",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "eventcurrenttarget-yu-eventtarget-de-qu-bie"
    },
    {
      "content": "``` html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>文本颜色渐变</title>\n  <style>\n    .text {\n      font-size: 50px;\n      /* background-image: -webkit-gradient(linear, left 0, right 0, from(rgb(4, 94, 170)), to(rgb(1, 152, 216))); */\n      /* background: linear-gradient(to top right, #CDDC39 0%, #8BC34A 25%, #FFEB3B 100%); */\n      background-image: url(http://ww.yiweb.com.cn/jinghua/dist/images/ServiceProject-pic01.jpg);\n      -webkit-background-clip: text;\n      /*必需加前缀 -webkit- 才支持这个text值 */\n      -webkit-text-fill-color: transparent;\n      /*text-fill-color会覆盖color所定义的字体颜色： */\n    }\n  </style>\n</head>\n\n<body>  \n  <h1 class=\"text\">文本颜色渐变</h1>\n</body>\n\n</html>\n```",
      "data": {
        "title": "background-clip",
        "date": "2019-09-10 11:53:02",
        "tags": [
          "CSS3",
          "CSS"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "background-clip"
    },
    {
      "content": "``` html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>vw&rem实现移动端布局</title>\n  <style>\n    *{ margin: 0;padding: 0 }\n    \n    /* 核心代码 */\n    html{ font-size:  13.333333vw; }\n    body{ max-width: 750px;min-width: 320px; margin: 0 auto }\n    @media screen and ( min-width:750px ){ html{ font-size: 100px; } }\n    /* 核心代码 */\n    \n    #app{ height: 100vh;background-color: #ccc;font-size: 0px; }\n    #app .item{font-size:.3rem; display: inline-block; width: 1.80rem; height: 1.80rem;line-height: 1.80rem; text-align: center; background-color: #fff; margin-right: 0.1rem; }\n    #app .item:last-child{  margin-right: 0; }\n  </style>\n</head>\n<body>\n    <div id=\"app\">\n      <div class=\"item\"> 1 </div>\n      <div class=\"item\"> 2 </div>\n      <div class=\"item\"> 3 </div>\n      <div class=\"item\"> 4 </div>\n    </div>\n</body>\n</html>\n```",
      "data": {
        "title": "vw&rem实现移动端布局",
        "date": "2019-09-10 11:51:26",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vwandrem-shi-xian-yi-dong-duan-bu-ju"
    },
    {
      "content": "``` javascript\nfunction query(url){\n  let reg=/([^=?&]+)=([^=?&]+)/g,\n  obj={};\n  url.replace(reg,function(){\n    obj[arguments[1]]=arguments[2]\n  })\n  return obj\n}\n\nquery(location.href)\n```",
      "data": {
        "title": "正则获取url参数",
        "date": "2019-09-10 11:46:00",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "zheng-ze-huo-qu-url-can-shu"
    },
    {
      "content": "## [https://wow.techbrood.com/fiddle/29490](https://wow.techbrood.com/fiddle/29490)",
      "data": {
        "title": "CSS3 19种LOADING（加载）动效",
        "date": "2019-09-09 16:58:20",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css3-19-chong-loadingjia-zai-dong-xiao"
    },
    {
      "content": "[灵活运用CSS开发技巧(66个实用技巧，值得收藏)](https://juejin.im/post/5d4d0ec651882549594e7293)",
      "data": {
        "title": "灵活运用CSS开发技巧(66个实用技巧，值得收藏)",
        "date": "2019-09-09 11:56:37",
        "tags": [
          "转载",
          "CSS"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "ling-huo-yun-yong-css-kai-fa-ji-qiao-66-ge-shi-yong-ji-qiao-zhi-de-shou-cang"
    },
    {
      "content": "[postcss-px-to-viewport](https://www.npmjs.com/package/postcss-px-to-viewport)",
      "data": {
        "title": "postcss的插件",
        "date": "2019-09-09 11:29:08",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "postcss-de-cha-jian"
    },
    {
      "content": "[https://juejin.im/post/5d754dbde51d4561cd2466bf](https://juejin.im/post/5d754dbde51d4561cd2466bf)",
      "data": {
        "title": "看完这篇，你也能把 React Hooks 玩出花",
        "date": "2019-09-09 11:08:09",
        "tags": [
          "转载",
          "React"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/kan-wan-zhe-pian-ni-ye-neng-ba-react-hooks-wan-chu-hua.jpg"
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "kan-wan-zhe-pian-ni-ye-neng-ba-react-hooks-wan-chu-hua"
    },
    {
      "content": "1. 目前JS中有6种基本数据类型: Undefined、Null、Boolean、Number、Symbol 和 String。还有1种复杂的数据类型————Object，Object本质上是由一组无序的名值对组成的。Object、Array和Function则属于引用类型。\n2. 基本数据类型是不可变的，而非基本数据类型是可变的。\n3. 基本数据类型是不可变的，因为它们一旦创建就无法更改，但非基本数据类型刚可更改，意味着一旦创建了对象，就可以更改它。\n4. 将基本数据类型与其值进行比较，这意味着如果两个值具有相同的数据类型并具有相同的值，那么它们是严格相等的。\n5. 非基本数据类型不与值进行比较。例如，如果两个对象具有相同的属性和值，则它们严格不相等。",
      "data": {
        "title": "JS 基本和非基本数据类型",
        "date": "2019-09-09 10:39:35",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-ji-ben-he-fei-ji-ben-shu-ju-lei-xing"
    },
    {
      "content": "1. 使用 set \n```\nfunction uniquearray(array) { \n    let unique_array= Array.from(set(array)) \n\t\treturn unique_array; \n}\n```\n2. 使用 filter\n```\nfunction unque_array (arr) {\n  let unique_array = arr.filter(function(elem, index, self) {\n    return index == self.indexOf(elem);\n  })\n  return unique_array;\n}\n console.log(unique_array(array_with_duplicates));\n```\n3. 使用 for 循环\n```\nArray dups_names = ['Ron', 'Pal', 'Fred', 'Rongo', 'Ron'];\nfunction dups_array(dups_names) {\n let unique = {};\n names.forEach(function(i) {\n    If (!unique[i]) {\n      unique[i] = true;    }\n  });\nreturn Object.keys(unique);}   // Ron, Pal, Fred, Rongo\nDups_array(names);\n\n```",
      "data": {
        "title": "JS 数组去重复",
        "date": "2019-09-09 10:36:38",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "js-shu-zu-qu-chong-fu"
    },
    {
      "content": "[https://juejin.im/post/5d74d4376fb9a06ad16f9644](https://juejin.im/post/5d74d4376fb9a06ad16f9644)",
      "data": {
        "title": "翻译Babel文档之@babel/preset-env",
        "date": "2019-09-09 10:13:54",
        "tags": [
          "Babel",
          "Webpack",
          "转载"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/babel-preset-env.jpg"
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "babel-preset-env"
    },
    {
      "content": "` tip 函数式组件, 无状态，无法实例化，内部没有任何生命周期处理方法，非常轻量，因而渲染性能高，特别适合用来只依赖外部数据传递而变化的组件。`\n\n> 在template标签里面标明functional\n> 只接受props值\n> 不需要script标签\n\n```html\n<!-- App.vue -->\n<template>\n  <div>\n    <UserList :users=\"users\" :click-handler=\"clickHandler.bind(this)\"></UserList>\n  </div>\n</template>\n \n<script>\nimport UserList from \"./UserList\";\n \nexport default {\n  name: \"App\",\n  data: () => {\n    users: ['james', 'ian']\n  }\n  components: { UserList },\n  methods: {\n    clickHandler(name){\n      console.log(`clicked: ${name}`);\n    }    \n  }\n};\n</script>\n```\n```\n// UserList.vue\n<template functional>\n  <div>\n    <p v-for=\"(name, idx) in props.users\" @click=\"props.clickHandler(name)\" :key=\"idx\">\n      {{ name }}\n    </p>\n  </div>\n</template>\n\n```",
      "data": {
        "title": "Vue 函数式组件",
        "date": "2019-06-03 10:35:06",
        "tags": [
          "Vue"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "vue-han-shu-shi-zu-jian"
    },
    {
      "content": "``` html\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <title>CSS3 实现六边形图片展示效果</title>\n    <style type=\"text/css\">\n        body,\n        div,\n        img,\n        ul,\n        li {\n            margin: 0;\n            padding: 0;\n        }\n\n        body {\n            font-size: 12px;\n            background-color: #DDD;\n            min-width: 1200px;\n        }\n\n        ul,\n        ul li {\n            list-style: none;\n        }\n\n        .boxF,\n        .boxS,\n        .boxT,\n        .overlay {\n            width: 200px;\n            height: 250px;\n            overflow: hidden;\n        }\n\n        .boxF,\n        .boxS {\n            visibility: hidden;\n        }\n\n        .boxF {\n            transform: rotate(120deg);\n            float: left;\n            margin-left: 10px;\n            -ms-transform: rotate(120deg);\n            -moz-transform: rotate(120deg);\n            -webkit-transform: rotate(120deg);\n        }\n\n        .boxS {\n            transform: rotate(-60deg);\n            -ms-transform: rotate(-60deg);\n            -moz-transform: rotate(-60deg);\n            -webkit-transform: rotate(-60deg);\n        }\n\n        .boxT {\n            transform: rotate(-60deg);\n            background: no-repeat 50% center;\n            background-size: 125% auto;\n            -ms-transform: rotate(-60deg);\n            -moz-transform: rotate(-60deg);\n            -webkit-transform: rotate(-60deg);\n            visibility: visible;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"boxF\">\n        <div class=\"boxS\">\n            <div class=\"boxT\" style=\"background-image: url(./images/pic.jpg);\"></div>\n        </div>\n    </div>\n</body>\n\n</html>\n```",
      "data": {
        "title": "CSS实现六边形图片展示效果",
        "date": "2019-02-04 11:57:21",
        "tags": [
          "CSS3"
        ],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "css-shi-xian-liu-bian-xing-tu-pian-zhan-shi-xiao-guo"
    },
    {
      "content": "Early bird gets the worm.\n![](http://zssjs.coding.me/post-images/1567994570618.jpg)",
      "data": {
        "title": "About",
        "date": "2019-01-25 19:09:48",
        "tags": [],
        "published": true,
        "hideInList": true,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "about"
    },
    {
      "content": "## JS中如何将页面重定向到另一个页面？\n* 使用 location.href：`window.location.href =\"https://www.baidu.com/\"`\n* 使用  location.replace：`window.location.replace(\" https://www.baidu.com/\")`\n## JS中的`Array.splice()`和`Array.slice()`方法有什么区别\n```\nvar arr=[0,1,2,3,4,5,6,7,8,9];//设置一个数组\nconsole.log(arr.slice(2,7));//2,3,4,5,6\nconsole.log(arr.splice(2,7));//2,3,4,5,6,7,8\n//由此我们简单推测数量两个函数参数的意义,\nslice(start,end)第一个参数表示开始位置,第二个表示截取到的位置(不包含该位置)\nsplice(start,length)第一个参数开始位置,第二个参数截取长度\n```\n```\nvar x=y=[0,1,2,3,4,5,6,7,8,9]\nconsole.log(x.slice(2,5));//2,3,4\nconsole.log(x);[0,1,2,3,4,5,6,7,8,9]原数组并未改变\n//接下来用同样方式测试splice\nconsole.log(y.splice(2,5));//2,3,4,5,6\nconsole.log(y);//[0,1,7,8,9]显示原数组中的数值被剔除掉了\n```\n函数参数上slice和splice第一个参数都是截取开始位置,slice第二个参数是截取的结束位置(不包含),而splice第二个参数(表示这个从开始位置截取的长度),slice不会对原数组产生变化,而splice会直接剔除原数组中的截取数据!\n## 解释JS中的高阶函数？\n高阶函数是JS函数式编程的最佳特性。它是以函数为参数并返回函数作为结果的函数。一些内置的高阶函数是map、filter、reduce 等等。\n##  substr() 和 substring() 区别\nsubstr()  函数的形式为substr(startIndex,length)。 它从startIndex返回子字符串并返回'length'个字符数。\n```\nvar s = \"hello\";\n( s.substr(1,4) == \"ello\" ) // true\n``` \nsubstring() 函数的形式为substring(startIndex,endIndex)。 它返回从startIndex到endIndex - 1的子字符串。\n```\nvar s = \"hello\";\n( s.substring(1,4) == \"ell\" ) // true \n```",
      "data": {
        "title": "js 基础知识",
        "date": "2019-01-09 10:04:34",
        "tags": [],
        "published": true,
        "hideInList": false,
        "feature": null
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jsss"
    },
    {
      "content": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \n\n<!-- more -->\n\n[Github](https://github.com/getgridea/gridea)  \n[Gridea 主页](http://hvenotes.fehey.com/)  \n[示例网站](http://fehey.com/)\n\n## 特性👇\n📝  你可以使用最酷的 **Markdown** 语法，进行快速创作  \n\n🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片  \n\n🏷️  你可以对文章进行标签分组  \n\n📋  你可以自定义菜单，甚至可以创建外部链接菜单  \n\n💻  你可以在 **𝖶𝗂𝗇𝖽𝗈𝗐𝗌** 或 **𝖬𝖺𝖼𝖮𝖲** 设备上使用此客户端  \n\n🌎  你可以使用 **𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌** 或 **Coding Pages** 向世界展示，未来将支持更多平台  \n\n💬  你可以进行简单的配置，接入 [Gitalk](https://github.com/gitalk/gitalk) 或 [DisqusJS](https://github.com/SukkaW/DisqusJS) 评论系统  \n\n🇬🇧  你可以使用**中文简体**或**英语**  \n\n🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力  \n\n🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步  \n\n🌱 当然 **Gridea** 还很年轻，有很多不足，但请相信，它会不停向前🏃\n\n未来，它一定会成为你离不开的伙伴\n\n尽情发挥你的才华吧！\n\n😘 Enjoy~\n",
      "data": {
        "title": "Hello Gridea",
        "date": "2018-12-12 00:00:00",
        "tags": [
          "Gridea"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/hello-gridea.png"
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "👏  欢迎使用 **Gridea** ！  \n✍️  **Gridea** 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... ",
      "fileName": "hello-gridea"
    }
  ],
  "tags": [
    {
      "index": -1,
      "name": "导航",
      "slug": "fd-GbsrMB",
      "used": true
    },
    {
      "index": -1,
      "name": "DOM",
      "slug": "r7GGl0O6k",
      "used": true
    },
    {
      "index": -1,
      "name": "PDF 工具",
      "slug": "CScbFckNI",
      "used": true
    },
    {
      "index": -1,
      "name": "JS",
      "slug": "wvPOp3y83",
      "used": true
    },
    {
      "index": -1,
      "name": "ECMAScript",
      "slug": "RSJWg9SqX",
      "used": true
    },
    {
      "index": -1,
      "name": "Date",
      "slug": "1GtGwpl4I",
      "used": true
    },
    {
      "index": -1,
      "name": "微信开发",
      "slug": "vsnOnS8fl",
      "used": true
    },
    {
      "index": -1,
      "name": "Vue",
      "slug": "ay0H2xLOg",
      "used": true
    },
    {
      "index": -1,
      "name": "linux",
      "slug": "jymp3MJ4I",
      "used": true
    },
    {
      "index": -1,
      "name": "uniapp",
      "slug": "d4YF2i3HQ",
      "used": true
    },
    {
      "index": -1,
      "name": "小程序",
      "slug": "4iR-u28Or",
      "used": true
    },
    {
      "index": -1,
      "name": "BOM",
      "slug": "QGUVxGfKE",
      "used": true
    },
    {
      "index": -1,
      "name": "css 特效",
      "slug": "xzBFZxtGN",
      "used": true
    },
    {
      "index": -1,
      "name": "CSS3",
      "slug": "JESsj0XFg",
      "used": true
    },
    {
      "index": -1,
      "name": "CSS",
      "slug": "bWrExhHdI",
      "used": true
    },
    {
      "index": -1,
      "name": "React",
      "slug": "GixeYCIj2",
      "used": true
    },
    {
      "index": -1,
      "name": "转载",
      "slug": "147q2r3yZ",
      "used": true
    },
    {
      "index": -1,
      "name": "Babel",
      "slug": "BtiHSBcIg",
      "used": true
    },
    {
      "index": 4,
      "name": "Webpack",
      "slug": "ZuZw9Kmhq",
      "used": true
    },
    {
      "name": "Gridea",
      "slug": "ozqpYaIiU",
      "used": true
    },
    {
      "index": -1,
      "name": "HTML",
      "slug": "zfJmyjceA",
      "used": false
    },
    {
      "index": -1,
      "name": "Node",
      "slug": "OzOK4F1MF",
      "used": false
    },
    {
      "index": -1,
      "name": "Gulp",
      "slug": "Y_pHuc_3y",
      "used": false
    },
    {
      "index": -1,
      "name": "vw/rem",
      "slug": "Oev1WVdAV",
      "used": false
    },
    {
      "index": -1,
      "name": "Nginx",
      "slug": "nwUVZWX57",
      "used": false
    },
    {
      "index": -1,
      "name": "网友博客",
      "slug": "jVf-TWagy",
      "used": false
    },
    {
      "index": -1,
      "name": "前端周报",
      "slug": "C1xdYr9fB",
      "used": false
    },
    {
      "index": -1,
      "name": "JQuery",
      "slug": "6DMfVYLHC",
      "used": false
    }
  ],
  "menus": [
    {
      "link": "/",
      "name": "首页",
      "openType": "Internal"
    },
    {
      "link": "/archives",
      "name": "归档",
      "openType": "Internal"
    },
    {
      "link": "/tags",
      "name": "标签",
      "openType": "Internal"
    },
    {
      "link": "/post/about",
      "name": "关于",
      "openType": "Internal"
    },
    {
      "link": "/tag/ay0H2xLOg/",
      "name": "Vue",
      "openType": "Internal"
    },
    {
      "link": "/post/weekly/",
      "name": "前端周报",
      "openType": "Internal"
    },
    {
      "link": "/post/da-shen-bo-ke/",
      "name": "大神博客",
      "openType": "Internal"
    }
  ]
}